<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GridsMiddle</name>
    </assembly>
    <members>
        <member name="T:Ingr.SP3D.Grids.Middle.GridElevationPlane">
            <summary>
            GridElevationPlane class is derived from the GridPlaneBase class. GridElevationPlane 
            class will implement some interfaces and expose its own properties and methods 
            so that they can be modified.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridPlaneBase">
            <summary>
            This is the abstract class to be derived by GridElevationPlane, GridPlane, and 
            GridRadialPlane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private constructor for the GridPlane base class.
            </summary>
            <param name="oBOP">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.#ctor">
            <summary>
            Public constructor for the GridPlane base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.Finalize">
            <summary>
            Destructor for the GridPlane base class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.GetBoundaries(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Returns the boundaries of the given grid plane.
            </summary>
            <param name="oBoundary1">First boundary.</param>
            <param name="oBoundary2">Second boundary.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.GetGridLine(Ingr.SP3D.Grids.Middle.GridPlaneBase)">
            <summary>
            Returns a grid line which results from the intersection of the plane and 
            the given grid plane base. 
            The combination could be either ElevationPlane and GridPlane or 
            ElevationPlane and GridRadialPlane.
            </summary>
            <param name="oGridPlaneBase">Grid plane base.</param>
            <returns>GridLine object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">The base plane object is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a child to the system.
            </summary>
            <param name="oChild">System child object.</param>
             <exception cref="T:System.ArgumentNullException">Argument passed is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the new orientation of the grid plane base coordinate system.
            </summary>
            <param name="oNewXAxis">New X-axis to be set on the coordinate system.</param>
            <param name="oNewYAxis">New Y-axis to be set on the coordinate system.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.SetUserDefinedName(System.String)">
            <summary>
            Sets the name of an item.  This implementation removes any existing
            relationship with a name rule, which in most cases is appropriate when giving
            an object a user-defined name.
            <para>This method must be overidden by classes for which this is not the appropriate
            behavior.</para>
            </summary>
            <param name="Name">The new name string.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="iCS">ComplexString3d object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.RemoveBoundary(System.Int32)">
            <summary>
            Removes the boundary at the specified index.
            </summary>
            <param name="i">Integer index.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at the specified index.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="oCS">Output boundary.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at specified index.
            <para>Note: This method is not adding a boundary, but replacing the boundary which is at the index.</para>
            </summary>
            <param name="i">Integer index.</param>
            <param name="iCS">ComplexString3d object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colCS">Collection of ComplexString3d objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries
            and removes any previous boundaries.
            </summary>
            <param name="colCS">Collection of ComplexString3d objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlaneBase.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a hole to the existing one or more boundaries.
            </summary>
            <param name="iCS">ComplexString3d defining a hole.</param>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Axis">
            <summary>
            Gets the type of axis to which this plane belongs. 
            From the axis, the user can retrieve the properties such as AxisType.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.GridLines">
            <summary>
            Gets a list of grid lines on this grid plane base.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.NestingLevel">
            <summary>
            Gets or sets the nesting level of the grid plane base.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.DistanceFromOrigin">
            <summary>
            Gets or sets the position of the grid plane base from the reference plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.WBSProjects">
            <summary>
            Gets the WBSProjects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.SystemChildren">
            <summary>
            Implementation of the SystemChildren property by getting a ReadOnlyCollection of ISystemChild objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.SystemParent">
            <summary>
            Implementation of ISystemChild:System parent property.  Uses the
            system helper of CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Range">
            <summary>
            Gets the range of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.XAxis">
            <summary>
            Gets the X-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.YAxis">
            <summary>
            Gets the Y-axis the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.ZAxis">
            <summary>
            Gets the Z-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Origin">
            <summary>
            Gets or sets the position of the arc.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Matrix">
            <summary>
            Gets or sets the grid arc matrix.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.ActiveNameRule">
            <summary>
            Gets or sets the active name rule associated with the grid elevation plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Name">
            <summary>
            Gets the read-only name.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.EDIFlag">
            <summary>
            Gets or sets the EDI flag; currently for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.RootPoint">
            <summary>
            Gets or sets the root point of the plane.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Normal">
            <summary>
            Gets or sets the plane normal.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.VDirection">
            <summary>
            Gets the V-direction.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.Reversed">
            <summary>
            Gets or sets whether reversed.  Getting reverses the V-direction of the plane.
            Normally (Reversed = False) the V-direction is determined by normal X U-direction.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlaneBase.BoundaryCount">
            <summary>
            Gets the number of boundaries.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridElevationPlane
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for GridElevationPlane.
            </summary>
            <param name="oPBO">Private Business Object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.#ctor(System.Double,Ingr.SP3D.Grids.Middle.GridAxis)">
            <summary>
            Creates an elevation plane at the given position on the given axis, which is the parent system
            The parent system must be an axis.
            </summary>
            <param name="Position">Position of the elevation plane.</param>
            <param name="oAxis">Axis object.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.ElevationPlaneExistsException">Elevation plane already exists.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">Invalid axis type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactoryClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Plane is not at location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateElevationPlaneException">Failed to create the elevation plane.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoNameRuleException">A name rule is not associated with the given object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.CreateGridArcs(Ingr.SP3D.Grids.Middle.GridCylinder)">
            <summary>
            Creates and returns a list of grid arcs for the given cylinder and the elevation plane. 
            </summary>
            <param name="oGridCylinder">Grid cylinder.</param>
            <returns>List of grid arcs.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactoryClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateGridArcsByIntersectionException">Failed to create grid arcs by intersection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.CreateGridLine(Ingr.SP3D.Grids.Middle.GridPlaneBase)">
            <summary>
            Creates and returns a GridLine for the given plane base and this elevation plane. 
            </summary>
            <param name="oPlane">Grid plane base.</param>
            <returns>GridLine object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.GetReferenceElevationPlane(Ingr.SP3D.Grids.Middle.ReferenceType,Ingr.SP3D.Grids.Middle.NestingLevelType)">
            <summary>
            Returns the reference object based on the reference type and the nesting level. 
            The reference object will be a GridElevationPlane corresponding to the given 
            ReferenceType and NestingLevelType.
            </summary>
            <param name="eRefType">Reference type.</param>
            <param name="eNestType">Nesting level type.</param>
            <returns>GridElevationPlane object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">Invalid reference type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">Invalid nesting level type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">No reference object.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">Failed to get the reference.</exception>       
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridElevationPlane.GetGridArcsOnCylinder(Ingr.SP3D.Grids.Middle.GridCylinder)">
            <summary>
            Returns a read-only collection of GridArcs which are resulting from the intersection of 
            this elevation plane and the given cylinder.
            </summary>
            <param name="oGridCylinder">Grid cylinder.</param>
            <returns>List of grid arcs.</returns>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridElevationPlane.GridArcs">
            <summary>
            Returns a list of GridArcs on this elevation plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.EnumGridLinesFromElevationPlaneException">Failure with the enumerator for GridLines from the ElevationPlane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridElevationPlane.Type">
            <summary>
            Gets or sets the enumerator type of plane for this elevation plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failure getting the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failure setting the property.</exception>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes">
            <summary>
            Enumerated values for grid system coordinate types.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes.Rectangular">
            <summary>
            Cartesian grid system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes.Cylindrical">
            <summary>
            Polar grid system.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.Services.GridSystem">
            <summary>
            Provides APIs required for creating the grid system, which are similar to the GridWizard 
            and other required methods.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.CoordinateSystem.CoordinateSystemType,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Creates a grid system of the requested coordinate system type at the specified origin.
            </summary>
            <param name="systemParent">The parent system under which the grid system is to be created.</param>
            <param name="coordinateSystemType">Enumerated values for grid system coordinate types.</param>
            <param name="origin">The origin of the grid system is to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised if null arguments are passed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the CoordinateSystem.CoordinateSystemType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.DBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of how to create a grid system of the requested coordinate system type at the specified origin.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            Dim origin As New Position(0, 0, 0)
            
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.#ctor(Ingr.SP3D.Common.Middle.CoordinateSystem)">
            <summary>
            Creates a grid system using the coordinate system definition.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <example>This is an example of how to create a grid system using the coordinate system definition.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Create coordinate system.
            Dim coordinateSystem As New CoordinateSystem(CoordinateSystem.CoordinateSystemType.Grids)
            coordinateSystem.Origin.X = 0.0
            coordinateSystem.Origin.Y = 0.0
            coordinateSystem.Origin.Z = 0.0
            parentSystem.AddSystemChild(coordinateSystem)
            
            Dim gridSystem As New GridSystem(coordinateSystem)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs)">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines if the coordinate system type is Grids.
            </summary>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get grid system.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            Dim coordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines at specified locations.
            </summary>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Cannot create grid line since elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get grid system with grid line locations.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            'Define GridLineInput collection. 
            Dim gridLineLocations As New Collection(Of GridLinesInput)()
            
            'Define GridLineInput at specified Z = 0 plane.
            Dim zPlane As Double = 0.0
            Dim xPlanes As Double() = New Double(2) {}
            xPlanes(0) = 0.0
            xPlanes(1) = 1.0
            Dim yPlanes As Double() = New Double(2) {}
            yPlanes(0) = 0.0
            yPlanes(1) = 1.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            'Define GridLineInput at specified Z = 2 plane.
            zPlane = 2.0
            xPlanes(0) = 1.0
            xPlanes(1) = 2.0
            yPlanes(0) = 1.0
            yPlanes(1) = 2.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            Dim coordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), gridLineLocations)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean)">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines at radial or X-planes and cylindrical or Y-planes.
            </summary>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="createGridLinesAtRadialOrXPlanes">If set to True creates grid lines at radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="createGridLinesAtCylindricalOrYPlanes">If set to True creates grid lines at cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get the grid system with grid line.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            Dim coordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), False, New GridAxisInputs(0.0, 1.0, 2.0), False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs)">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines if the coordinate system type is Grids on the existing coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get grid system on the existing coordinate system.
            <code>
            'Create a proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            GridSystem.GetGridSystem(coordinateSystem, GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines at specified locations for the specified coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Cannot create grid line since elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get grid system on the existing coordinate system with grid line locations.
            <code>
            'Create a proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            'Define GridLineInput collection. 
            Dim gridLineLocations As New Collection(Of GridLinesInput)()
            
            'Define GridLineInput at specified Z = 0 plane.
            Dim zPlane As Double = 0.0
            Dim xPlanes As Double() = New Double(2) {}
            xPlanes(0) = 0.0
            xPlanes(1) = 1.0
            Dim yPlanes As Double() = New Double(2) {}
            yPlanes(0) = 0.0
            yPlanes(1) = 1.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            'Define GridLineInput at specified Z = 2 plane.
            zPlane = 2.0
            xPlanes(0) = 1.0
            xPlanes(1) = 2.0
            yPlanes(0) = 1.0
            yPlanes(1) = 2.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            GridSystem.GetGridSystem(coordinateSystem, GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), gridLineLocations)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean)">
            <summary>
            Creates radial or X-planes, cylindrical or Y-planes, and elevation planes based on grid coordinate types.
            It also creates grid lines at radial or X-planes and cylindrical or Y-planes on the existing coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="gridCoordinateType">Enumerated values for grid system coordinate types.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="createGridLinesAtRadialOrXPlanes">If set to True creates grid lines at radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="createGridLinesAtCylindricalOrYPlanes">If set to True creates grid lines at cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the GridCoordinateTypes enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <example>This is an example of how to get the grid system on the existing coordinate system with grid line.
            <code>
            'Create a proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            GridSystem.GetGridSystem(coordinateSystem, GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), False, New GridAxisInputs(0.0, 1.0, 2.0), False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular).
            It also creates grid lines or grid arcs at specified locations for the specified coordinate system.
            </summary>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create a grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane with the given coordinate system.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            'Define GridLineInput collection. 
            Dim gridLineLocations As New Collection(Of GridLinesInput)()
            
            'Define GridLineInput at specified Z = 0 plane.
            Dim zPlane As Double = 0.0
            Dim xPlanes As Double() = New Double(2) {}
            xPlanes(0) = 0.0
            xPlanes(1) = 1.0
            Dim yPlanes As Double() = New Double(2) {}
            yPlanes(0) = 0.0
            yPlanes(1) = 1.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            gridSystem.AddGridSystem(New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), gridLineLocations)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs)">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular).
            </summary>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            gridSystem.AddGridSystem(New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.AxisType,System.Boolean)">
            <summary>
            Adds elevation, X-plane, Y-plane, cylindrical, or radial depending upon the axis type.
            </summary>
            <param name="newPlanes">New planes to be created.</param>
            <param name="axisType">Type of the new planes.</param>
            <param name="gridLinesRequired">Creates GridLines for the newly created planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is not valid.</exception>
            <example>
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            gridSystem.AddGridSystem(New GridAxisInputs(0.0, 1.0, 2.0), AxisType.Z, true)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean)">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular). It also creates grid lines or grid arcs at specified locations.
            </summary>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="createGridLinesAtRadialOrXPlanes">If set to True creates grid lines at radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="createGridLinesAtCylindricalOrYPlanes">If set to True creates grid lines at cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            gridSystem.AddGridSystem(New GridAxisInputs(0.0, 1.0, 2.0), True, New GridAxisInputs(0.0, 1.0, 2.0), False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular).
            It also creates grid lines or grid arcs at specified locations for the specified coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane with the given coordinate system.
            <code>
            'Create proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            'Define GridLineInput collection. 
            Dim gridLineLocations As New Collection(Of GridLinesInput)()
            
            'Define GridLineInput at specified Z = 0 plane.
            Dim zPlane As Double = 0.0
            Dim xPlanes As Double() = New Double(2) {}
            xPlanes(0) = 0.0
            xPlanes(1) = 1.0
            Dim yPlanes As Double() = New Double(2) {}
            yPlanes(0) = 0.0
            yPlanes(1) = 1.0
            gridLineLocations.Add(New GridLinesInput(zPlane, xPlanes, yPlanes))
            
            GridSystem.AddGridSystem(coordinateSystem, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0), gridLineLocations)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs)">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular).
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane with the given coordinate system.
            <code>
            'Create proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            GridSystem.AddGridSystem(coordinateSystem, New GridAxisInputs(0.0, 1.0, 2.0), New GridAxisInputs(0.0, 1.0, 2.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystem(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Boolean)">
            <summary>
            Adds another GridSystem (Rectangular or Cylindrical) to the existing GridSystem (Cylindrical or Rectangular).
            It also creates grid lines or grid arcs at specified locations for the specified coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="xPlanesOrRadialAngles">The radial or X-planes.</param>
            <param name="createGridLinesAtRadialOrXPlanes">If set to True creates grid lines at radial or X-planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y-planes.</param>
            <param name="createGridLinesAtCylindricalOrYPlanes">If set to True creates grid lines at cylindrical or Y-planes.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">Raised when unable to create grid line since the elevation plane does not exist at the specified location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">Raised when unable to identify the correct axes in which to create the grid system. Check the existing grid axes.</exception>
            <example>This is an example of how to add X-plane and Y-plane with the given coordinate system.
            <code>
            'Create proper coordinate system.
            Dim coordinateSystem As CoordinateSystem
            
            GridSystem.AddGridSystem(coordinateSystem, New GridAxisInputs(0.0, 1.0, 2.0), False, New GridAxisInputs(0.0, 1.0, 2.0), True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridAxis(Ingr.SP3D.Grids.Middle.AxisType)">
            <summary>
            Gets the grid axis of a particular grid axis type.
            </summary>
            <param name="axisType">Type of the axis.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the AxisType enumerator is out of range.</exception>
            <example>This is an example of how to get the GridAxis.
            <code>
            'Create grid system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim origin As New Position(0, 0, 0)
            Dim gridSystem As New GridSystem(parentSystem, CoordinateSystem.CoordinateSystemType.Grids, origin)
            
            Dim xAxis As GridAxis = gridSystem.GetGridAxis(AxisType.X)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridAxis(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.AxisType)">
            <summary>
            Gets the grid axis of a particular grid axis type on the specified coordinate system.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="axisType">Type of the axis.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the AxisType enumerator is out of range.</exception>
            <example>This is an example of how to get the grid axis on the specified coordinate system.
            <code>
            Dim xAxis As GridAxis = GridSystem.GetGridAxis(coordinateSystem, AxisType.X)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridSystemHelper(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridCoordinateTypes,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Gets the grid system helper.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="coordinateType">Type of the coordinate.</param>
            <param name="elevationPlanes">The elevation planes.</param>
            <param name="xPlanesOrRadialAngles">The radial or X planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.AddGridSystemHelper(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,System.Collections.ObjectModel.Collection{Ingr.SP3D.Grids.Middle.Services.GridLinesInput})">
            <summary>
            Adds the grid system helper.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="xPlanesOrRadialAngles">The radial or X planes.</param>
            <param name="yPlanesOrCylindricalRadius">The cylindrical or Y planes.</param>
            <param name="gridLineLocations">The grid line locations.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetAxes(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.AxisType@,Ingr.SP3D.Grids.Middle.AxisType@)">
            <summary>
            Gets the required grid axes based on the existing axes.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="XorRadial">The xor radial.</param>
            <param name="YorCylindrical">The yor cylindrical.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.CreateGridLines(Ingr.SP3D.Grids.Middle.GridAxis,Ingr.SP3D.Grids.Middle.GridAxis,Ingr.SP3D.Grids.Middle.Services.GridLinesInput)">
            <summary>
            Creates the grid lines.
            </summary>
            <param name="gridAxisZ">The grid axis Z.</param>
            <param name="intersectingAxis">The intersecting axis.</param>
            <param name="linesInput">The lines input.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.CreateGridPlanes(Ingr.SP3D.Grids.Middle.Services.GridAxisInputs,Ingr.SP3D.Grids.Middle.GridAxis)">
            <summary>
            Creates the grid planes.
            </summary>
            <param name="gridSystemInputs">The grid system inputs.</param>
            <param name="gridAxis">The grid axis.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetZPlaneLocations(Ingr.SP3D.Common.Middle.CoordinateSystem)">
            <summary>
            Gets the Z plane locations.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridandRadialPlaneLocations(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.AxisType)">
            <summary>
            Gets the plane locations of the specified axis type.
            </summary>
            <param name="coordinateSystem">The coordinate system.</param>
            <param name="axisType">Axis type of required plane locations.</param>
            <returns>Grid plane locations.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridSystem.GetGridAxisHelper(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.AxisType)">
            <summary>
            
            </summary>
            <param name="coordinateSystem"></param>
            <param name="axisType"></param>
            <returns></returns>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.Services.GridLinesInput">
            <summary>
            Transient class which holds the information about all the required grid lines with the intersection to a particular elevation plane. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridLinesInput.#ctor(System.Double,System.Double[],System.Double[])">
            <summary>
            Creates grid lines at the intersection of the elevation plane with all the specified locations of radial or X-planes and cylindrical or Y-planes.
            </summary>
            <param name="zPlane">The Z-plane.</param>
            <param name="xPlanesOrRadialAngles">The X-planes or radial angles.</param>
            <param name="yPlanesOrCylindricalRadius">The Y-planes or cylindrical radius.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <example>This is an example of how to add radial, cylindrical planes with rectangular coordinate system type and creates grid line at the specifed locations.
            <code>
            'Define GridLineInput at specified Z-plane.
            Dim zPlane As Double = 0.0
            Dim xPlanesOrRadialAngles As Double() = New Double(2) {}
            xPlanesOrRadialAngles(0) = 0.0
            xPlanesOrRadialAngles(1) = 1.0
            Dim yPlanesOrCylindricalRadius As Double() = New Double(2) {}
            yPlanesOrCylindricalRadius(0) = 0.0
            yPlanesOrCylindricalRadius(1) = 1.0
            Dim gridLinesInput As New GridLinesInput(zPlane, xPlanesOrRadialAngles, yPlanesOrCylindricalRadius)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridLinesInput.ZPlane">
            <summary>
            Gets or sets the elevation plane for which the grid lines are placed.
            </summary>
            <value>The Z-plane.</value>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridLinesInput.XPlanesOrRadialAngles">
            <summary>
            Gets or sets the locations of radial or X-planes at which the grid lines are to be created.
            </summary>
            <value>The radial or X-planes.</value>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridLinesInput.YPlanesOrCylindricalRadius">
            <summary>
            Gets or sets the locations of cylindrical or Y-planes at which the grid lines are to be created.
            </summary>
            <value>The cylindrical or Y-planes.</value>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridAxis">
            <summary>
            GridAxis class implements certain interfaces and exposes its own properties 
            and methods so that they can be modified.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridAxis
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for GridAxis.
            </summary>
            <param name="oPBO">Private Business Object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.#ctor(Ingr.SP3D.Common.Middle.CoordinateSystem,Ingr.SP3D.Grids.Middle.AxisType)">
            <summary>
            Creates a GridAxis object of the requested axis type. The axis object will
            belong to the coordinate system that is given as an input argument. The
            constructor verifies that the axis of the same type is not already present
            on the given coordinate system.
            </summary>
            <param name="oCS">Coordinate system.</param>
            <param name="eAxisType">Axis type.</param>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">Invalid axis type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.AxisExistsException">The axis already exists.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetAxisObjectFromCSException">Get axis object from coordinate system failure.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.GetCylinder(System.Double)">
            <summary>
            Gets the radial cylinder on the axis at the specified location.
            Returns null if no cylinder is found at the location.
            </summary>
            <param name="position">Position of the grid plane.</param>
            <returns>Radial cylinder at given position.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.GetPlane(System.Double)">
            <summary>
            Gets the grid plane on the axis at the specified location.
            Returns null if not found at the location.
            </summary>
            <param name="position">Position of the grid plane.</param>
            <returns>Plane at given position.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.GetPlane(System.String)">
            <summary>
            Gets the grid plane on the axis with the specified name.
            Returns null if a plane is not associated with the given name.
            </summary>
            <param name="name">Name of the plane.</param>
            <returns>Plane with the given name.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.GetPlanes(System.Double,System.Double,System.Double)">
            <summary>
            Gets or sets the spacing between two immediate planes.
            Returns an empty collection if planes are not available.
            </summary>
            <param name="from">Value from the start of the spacing.</param>
            <param name="to">Value to specify the end of the spacing.</param>
            <param name="spacing">The spacing.</param>
            <returns>Planes in the given range.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.AddPlane(System.Double)">
            <summary>
            Creates the plane at the given position by getting the axis type.
            </summary>
            <param name="oPosition">Position of the plane.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Access denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">Plane already exists at that location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidPositionException">Position is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Failed when the plane is not at the location.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.AddPlanes(System.Double,System.Double,System.Double)">
            <summary>
            Creates the planes from the specified starting position to the specified end position with 
            the spacing provided.
            </summary>
            <param name="oFrom">Starting point.</param>
            <param name="oTo">Ending point.</param>
            <param name="dSpacing">Spacing between two planes.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Access denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidArgumentException">Invalid argument.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">Plane already exists at that location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidPositionException">Position is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Failed when the plane is not at the location.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a child to the system.
            </summary>
            <param name="oChild">System child object.</param>
            <exception cref="T:System.ArgumentNullException">The argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.SetUserDefinedName(System.String)">
             <summary>
             Sets the name of an item.
             </summary>
             <param name="Name">The new name string.</param>
            <example>This example explains how to set the name.
            <code>
             'Define GridAxis. 
             Dim oGridAxis As GridAxis = Nothing
             oGridAxis.SetUserDefinedName("GridAxis-101")
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.CreatePlane(Ingr.SP3D.Grids.Middle.AxisType,System.Double,System.String)">
            <summary>
            /
            </summary>
            <param name="eAxisType">Axis Type</param>
            <param name="oPos">Position</param>
            <param name="strPlaneName"> Plane Name</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">Plane already exists at that location</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidPositionException">Position is invalid</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper Exception</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">IsPlaneAtLocation Exception</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridAxis.GetNamedItemHelper">
            <summary>
            Private utility method to get and manage the named item helper object.
            </summary>
            <returns>m_oNamedItemHelper - Occurrence of the named item helper object.</returns>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.AxisType">
            <summary>
            Gets the axis type of the grid axis.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.CoordinateSystem">
            <summary>
            Gets the coordinate system associated with this grid axis.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetCSException">Failed to get the coordinate system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.Unitvector">
            <summary>
            Gets the unit vector of this grid axis.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.Planes">
            <summary>
            Gets all planes defined on the axis. Returns an empty collection if planes are not available.
            </summary>
            <value>Planes on the axis.</value>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.WBSProjects">
            <summary>
            Gets the WBSProjects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.SystemChildren">
            <summary>
            Implementation of the SystemChildren property. Gets a ReadOnlyCollection of ISystemChild obejcts.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.SystemParent">
            <summary>
            Implementation of ISystemChild:System parent property.  Uses the
            system helper of CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.Range">
            <summary>
             Gets the range of the grid axis.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of the origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.OriginAppName">
            <summary>
            Gets or sets the name of the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.EDIFlag">
            <summary>
            Gets or sets the EDI flag; currently for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.Name">
             <summary>
             Gets the read-only name.
             </summary>
            <example>This example explains how to get the name.
            <code>
             'Define GridAxis. 
             Dim oGridAxis As GridAxis = Nothing
             Dim sName As String
             sName = oGridAxis.Name
            </code>
            </example>        
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridAxis.WBSItemChildHelperObj">
            <summary>
            Gets the WBS item child helper obj.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.ReferenceType">
            <summary>
            Defines the reference plane from which the plane is referenced.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ReferenceType.Origin">
            <summary>
            Defines the reference plane from the origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ReferenceType.Previous">
            <summary>
            Defines the reference plane from the previous plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ReferenceType.Next">
            <summary>
            Defines the reference plane from the next plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ReferenceType.Last">
            <summary>
            Defines the reference plane from the last plane.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.NestingLevelType">
            <summary>
            List of nesting level enumerated types. Defines the nesting level for the planes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.NestingLevelType.Primary">
            <summary>
            Default nesting level.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.NestingLevelType.Secondary">
            <summary>
            Between two adjacent planes, a difference of only one level is allowed. Therefore, secondary planes are only allowed between two primary planes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.NestingLevelType.Tertiary">
            <summary>
            Tertiary planes are only allowed between two secondary planes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.NestingLevelType.Any">
            <summary>
            Any of the nesting level type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.NestingLevelType.Same">
            <summary>
            Same nesting level type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.AxisType">
            <summary>
            List of axis enumerated types.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.AxisType.X">
            <summary>
            X-axis type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.AxisType.Y">
            <summary>
            Y-axis type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.AxisType.Z">
            <summary>
            Z-axis type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.AxisType.Radial">
            <summary>
            Radial axis type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.AxisType.Cylindrical">
            <summary>
            Cylindrical axis type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.ArcQuadrant">
            <summary>
             List of arc enumerated quadrant types.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ArcQuadrant.Quadrant1">
            <summary>
            Quadrant 1 – Represents +X and +Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ArcQuadrant.Quadrant2">
            <summary>
            Quadrant 2 – Represents +X and -Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ArcQuadrant.Quadrant3">
            <summary>
            Quadrant 3 – Represents -X and -Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ArcQuadrant.Quadrant4">
            <summary>
            Quadrant 4 – Represents -X and +Y.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridPlaneType">
            <summary>
            List of grid plane enumerated types. These are codelisted values defined in the metadata.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.Undefined">
            <summary>
            Undefined grid plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.ColumnNS">
            <summary>
            N-S grid plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.ColumnEW">
            <summary>
            E-W grid plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.Expansion">
            <summary>
            Expansion joint grid plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.CenterLine">
            <summary>
            Center line grid plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.GridPlaneType.MidShip">
            <summary>
            Midship grid plane type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.ElevationPlaneType">
            <summary>
            List of elevation plane enumerated types. These are codelisted values defined in the metadata.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.Undefined">
            <summary>
            Undefined elevation plane type. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.TOS">
            <summary>
            Top of steel elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.TOC">
            <summary>
            Top of concrete elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.BOBP">
            <summary>
            Bottom of baseplate elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.BOC">
            <summary>
            Bottom of concrete elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.Splice">
            <summary>
            Column splice elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.Grade">
            <summary>
            Grade elevation plane type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.ElevationPlaneType.WaterLine">
            <summary>
            Waterline elevation plane type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridsErrorConstants">
            <summary>
            List of error constants used by the Grids application.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridsHelper">
            <summary>
            This class provides common functionality that is used to implement the IEDIData interface methods.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsHelper.GetStringProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a string property for the given business object using generic property access.
            </summary>
            <param name="oBusinessObject"> Business object.</param>
            <param name="strIntName"> Interface name.</param>
            <param name="strPropName"> Property name on the interface.</param>
            <returns> The string property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsHelper.GetLongProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a long property for the given business object using generic property access.
            </summary>
            <param name="oBusinessObject"> Business object implementing IJCISData.</param>
            <param name="strIntName"> Interface name.</param>
            <param name="strPropName"> Property name on the interface.</param>
            <returns> The long property value.</returns>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridPlane">
            <summary>
            GridPlane class is derived from GridPlaneBase class. GridPlane class implements 
            certain interfaces and exposes its own properties and methods so that 
            they can be modified.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlane.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridPlane
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlane.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for GridPlane.
            </summary>
            <param name="oPBO">Private Business Object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlane.#ctor(System.Double,Ingr.SP3D.Grids.Middle.GridAxis)">
            <summary>
            Creates a GridPlane object at the give position on the given axis type, which can be obtained from the parent system.
            The parent system must be the axis.
            </summary>
            <param name="Position">Position of the grid plane.</param>
            <param name="oAxis">Axis of the grid plane.</param>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">Grid plane already exists.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">Invalid axis.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactory class failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Failed if plane is not at the location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateGridPlaneException">Failure to create a grid plane.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoNameRuleException">A name rule is not associated with the given object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlane.CreateGridLine(Ingr.SP3D.Grids.Middle.GridElevationPlane)">
            <summary>
            Creates and returns a grid line for the given elevation plane and this grid plane. 
            </summary>
            <param name="oElevPlane">Elevation plane.</param>
            <returns>GridLine</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactory class failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateGridLineByIntersectionException">Failed to create a grid line by intersection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridPlane.GetReferenceGridPlane(Ingr.SP3D.Grids.Middle.ReferenceType,Ingr.SP3D.Grids.Middle.NestingLevelType)">
            <summary>
            Returns the reference object based on the reference type and the nesting level. 
            The reference object will be a GridPlane corresponding to the given ReferenceType and NestingLevelType.
            </summary>
            <param name="eRefType">Reference type.</param>
            <param name="eNestType">Nesting level type.</param>
            <returns>GridPlane</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">Invalid reference type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">Invalid nesting level type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">No reference object.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">Failed to get the reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlane.Angle">
            <summary>
            Gets the angle of this grid plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlane.RotationAxis">
            <summary>
            Gets the rotation axis of this grid plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelperClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetCoordinateSystemOfPlaneException">Failed to get the coordinate system of the plane.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetAxisObjectFromCSException">Failed to get the axis object from the coordinate system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridPlane.Type">
            <summary>
            Gets or sets the type of plane of this grid plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failed to set the property.</exception>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridArc">
            <summary>
            GridArc class implements certain interfaces and exposes its own properties and methods so that they can be modified.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridArc.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the grid arc.
            This method is not supported, as we are not able to change the orientation of the grid arc.
            </summary>
            <param name="xAxisNew">New X-axis to be set on the coordinate system.</param>
            <param name="yAxisNew">New Y-axis to be set on the coordinate system.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the orientation on the grid arc.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this grid arc.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of this grid arc.</param>
            <param name="vecNormal">The normal vector of this grid arc.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim eScope As CurveScopeType
            Dim normal As Vector
            gridArc.ScopeNormal(eScope, normal)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the center, area, moments of inertia, and principle axes of a closed planar grid arc.
            </summary>
            <param name="dArea">Area of this grid arc.</param>
            <param name="posCentroid">Centroid of this grid arc.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="dMajorPrncplInertia">Principle moment of inertia to major axis.</param>
            <param name="dMinorPrncplInertia">Principle moment of inertia to minor axis.</param>
            <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
            <param name="MjIAxis">Major principle axis.</param>
            <param name="MnIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised an invalid argument is used with the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim dArea, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis As Vector
            gridArc.AreaCentroidMomentsOfInertia(dArea, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia, oMjIAxis, oMnIAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes length, centroid, moments of inertia, and principle axes of an open or closed thin wire.
            </summary>
            <param name="dLength">Length of the wire.</param>
            <param name="posCentroid">Centroid of the grid arc.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="dPrncplInertiaU">Principle moment of inertia to uDir.</param>
            <param name="dPrncplInertiaV">Principle moment of inertia to vDir.</param>
            <param name="dPrncplInertiaN">Principle moment of inertia to nDir.</param>
            <param name="AxisU">Major principle axis.</param>
            <param name="AxisV">Minor principle axis.</param>
            <param name="AxisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the CentroidInertiaForWire method.
            <code>
            Dim dLength, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertiaN As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis, oNIAxis As Vector
            gridArc.CentroidInertiaForWire(dLength, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertiaN, dPolarInertia, oMjIAxis, oMnIAxis, oNAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this grid arc.
            </summary>
            <param name="posStart">Start position.</param>
            <param name="posEnd">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim start, end As Position
            gridArc.EndPoints(start, end)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on this grid arc.
            </summary>
            <param name="pos">Point to determine whether on this grid arc.</param>
            <returns>True if the point is on this grid arc; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised an invalid argument is used with the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim isPointOn As Boolean = gridArc.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this grid arc and the input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this grid arc at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Unexpected failure while determining the distance between this curve and the input point.</exception>      
            <example>This is an example of DistanceBetween method.
            <code>
            Dim point As New Point3d(1.5, 0, 0)
            Dim distance As Double
            Dim posOnThisCurveAtMinDist As Position
            gridArc.DistanceBetween(point, distance, posOnThisCurveAtMinDist)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            This method determines the distance between this grid arc and the input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this grid arc at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim distance As Double
            Dim posOnThisCurveAtMinDist, posOnInputCurveAtMinDist As Position
            gridArc.DistanceBetween(inputCurve, distance, posOnThisCurveAtMinDist, posOnInputCurveAtMinDist)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this grid arc and the input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this grid arc at the minimum distance.</param>
            <param name="posInPos">Point on input surface at the minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim distance As Double 
            Dim posOnThisCurveAtMinDist, posOnInputSurfaceAtMinDist As Position 
            gridArc.DistanceBetween(inputSurface, distance, posOnThisCurveAtMinDist, posOnInputSurfaceAtMinDist)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this grid arc and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="eIntersectCode">Enumerator describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim intersectionPositions As Collection(Of Position) = Nothing
            Dim overlapPositions As Collection(Of Position) = Nothing
            gridArc.Intersect(inputCurve, intersectionPositions, overlapPositions, eIntersectCode)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this grid arc and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Collection of curve objects.</param>
            <param name="eIntersectCode">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null arguments are passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            gridArc.Intersect(inputSurface, colCurves, eIntersectCode)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of this grid arc.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim intersectionPositions As Collection(Of Position) = Nothing
            Dim overlapPositions As Collection(Of Position) = Nothing
            gridArc.SelfIntersect(intersectionPositions, overlapPositions)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along this grid arc at a given distance from the given 
            start point on this grid arc. If the given point does not lie on this grid arc, 
            it is along normal to this grid arc (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim start As New Position(1, 1, 1)
            Dim distance As Double = 1.0
            Dim pointDistanceAlong As Position = gridArc.PointAtDistanceAlong(start, distance)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along this grid arc at a given distance from the start of this grid arc.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim distance As Double = 1.0
            Dim pointDistanceAlong As Position = gridArc.PointAtDistanceAlong(distance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on this grid arc along a given vector from the given point.
            </summary>
            <param name="pos">Position to project to the grid arc.</param>
            <param name="vecProj">Vector to project along. If the argument is null, then the function projects along vector normal to this grid arc.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim projectionPoint As New Position(1, 1, 0)
            Dim projectionDirection As New Vector(0, 0, 1)
            Dim projectedPoint As Position = gridArc.ProjectPoint(projectionPoint, projectionDirection)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on this grid arc from a given point.
            </summary>
            <param name="pos">Position to project to the grid arc.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim projectionPoint As New Position(1, 1, 0)
            Dim projectedPoint As Position = gridArc.ProjectPoint(projectionPoint)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridArc.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim point As New Position(1, 1, 0)
            Dim tangentAtPoint As Vector = gridArc.TangentAtPoint(point)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.WBSItemChildHelperObj">
            <summary>
            Gets the WBS item child helper obj.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc._CurveHelper">
            <summary>
            Gets the curve helper.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.ElevationPlane">
            <summary>
            Gets the grid elevation plane which is used to construct this grid arc. 
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetParentException">Raised when unable to get the elevation plane for this grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Quadrant">
             <summary>
             Gets the quadrant in which this grid arc belongs. 
             </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Raised when unable to get the quadrant for this grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.RadialCylinder">
            <summary>
            Gets the grid cylinder used to construct this grid arc. 
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetParentException">Raised when unable to get the grid cylinder for this grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this grid arc.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.WBSProjects">
            <summary>
            Gets the WBSProjects for this grid arc.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.SystemParent">
            <summary>
            Gets or sets the system parent of the grid arc.
            Set is not supported, as we are not able to change the system parent of the grid arc.
            </summary>    
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the system parent of the grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Range">
            <summary>
            Gets the range of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetRangeException">Raised while unable to get the range of the grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.XAxis">
            <summary>
            Gets the X-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetXAxisException">Raised while getting the X-axis of the grid arc.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.YAxis">
            <summary>
            Gets the Y-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetYAxisException">Raised while getting the Y-axis of the grid arc.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.ZAxis">
            <summary>
            Gets the Z-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetZAxisException">Raised while getting the Z-axis of the grid arc.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Origin">
            <summary>
            Gets or sets the origin of the grid arc.
            Set is not supported, as we are not able to change the origin of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetOriginException">Raised while getting the origin of the grid arc.</exception>       
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the origin of the grid arc.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the grid arc.
            Set is not supported, as we are not able to change the matrix of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the matrix of the grid arc.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of the origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.OriginAppName">
            <summary>
            Gets or sets the name of the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.EDIFlag">
            <summary>
            Gets or sets EDI flag; currently for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Length">
            <summary>
            Gets the length of this grid arc.
            </summary>
            <returns>Length value of this grid arc.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Area">
            <summary>
            Gets the area of this grid arc.
            </summary>
            <returns>Area value of this grid arc.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Form">
            <summary>
            Gets the form (closure) of this grid arc.
            </summary>
            <returns>Enumerated value of this grid arc closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Scope">
            <summary>
            Gets the scope (planarity) of this grid arc.
            </summary>
            <returns>Enumerated value of this grid arc planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Centroid">
            <summary>
            Gets the centroid of this grid arc.
            </summary>
            <returns>Position of centroid of this grid arc.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when curve helper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Center">
            <summary>
            Gets or sets the center.
            Set is not supported, as we are not able to change the center of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetCenterException">Raised while getting the center from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the center on the grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Circumference">
            <summary>
            Gets the circumference.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException">Raised while getting the circumference from the grid arc.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.EndPoint">
            <summary>
            Gets or sets the end point.
            Set is not supported, as we are not able to change the end point of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetEndPointException">Raised while getting the end point from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the end point on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.MajorAxis">
            <summary>
            Gets or sets the major axis of this arc.
            Set is not supported, as we are not able to change the major axis of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException">Raised while getting the major axis from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the major axis on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Normal">
            <summary>
            Gets or sets the normal.
            Set is not supported, as we are not able to change the normal of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetNormalException">Raised while getting the normal from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the normal on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.Radius">
            <summary>
            Gets or sets the radius.
            Set is not supported, as we are not able to change the radius of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetRadiusException">Raised while getting the radius from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the radius on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.StartAngle">
            <summary>
            Gets or sets the start angle.
            Set is not supported, as we are not able to change the start angle of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetStartAngleException">Raised while getting the start angle from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the start angle on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.StartPoint">
            <summary>
            Gets or sets the start point.
            Set is not supported, as we are not able to change the start point of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetStartPointException">Raised while getting the start point from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the start point on this object.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridArc.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            Set is not supported, as we are not able to change the sweep angle of the grid arc.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException">Raised while getting the sweep angle from the grid arc.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">Raised while setting the sweep angle on this object.</exception>       
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs">
            <summary>
            Grids resource identifiers.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrSPGFactoryClass">
            <summary>
            Failed to Create an instance of SPGFactoryClass.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrMiddleHelper">
            <summary>
            Failed to Create an instance of SPGMiddleHelper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetParent">
            <summary>
            Error in Calling GetParent Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetCS">
            <summary>
            Error in Calling GetCS Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrAxisFromCS">
            <summary>
            Error in Calling AxisFromCS Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNullArguments">
            <summary>
            Null Arguments Passed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrIsPlaneAtLocation">
            <summary>
            Error in Calling ISPlaneAtLocation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetCSFromPlane">
            <summary>
            Failed to Get CS of the Plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrSetProperty">
            <summary>
            Error in Setting the Property Value
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetProperty">
            <summary>
            Error in Getting the Property Value
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetRadialCylinder">
            <summary>
            Error in Calling GetRadialCylinder Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCreateArcsByIntersection">
            <summary>
            Error in Calling CreateArcsByIntersection Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetBounderies">
            <summary>
            Error in Calling GetBounderies Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetReference">
            <summary>
            Error in Calling GetReference Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCreateElevationPlane">
            <summary>
            Error in Calling CreateElevationPlane Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrEnumGridLinesFromElevationPlane">
            <summary>
            Error in Calling EnumGridLinesFromElevationPlane Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrEnumGridLinesFromGridPlane">
            <summary>
            Error in Calling EnumGridLinesFromGridPlane Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCreateGridPlane">
            <summary>
            Error in Calling CreateGridPlane Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGridLinebyIntersection">
            <summary>
            Error in Calling GridLinebyIntersection Method.
            </summary>        
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCreateGridRadialPlane">
            <summary>
            Error in Calling CreateGridRadialPlane Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNoPermission">
            <summary>
            Permission Denied
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNoImplementation">
            <summary>
            No Implementation
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrAxisType">
            <summary>
            Invalid Axis Type
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrAxisExists">
            <summary>
            Axis Aready Exists
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGridPlaneExists">
            <summary>
            Grid Plane Already Exists
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrUnexpected">
            <summary>
            Unexpected Failure in retrieving the Object
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrPosition">
            <summary>
            Error in Calling Position Method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNestingLevelType">
            <summary>
            Invalid Nesting Level Type
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrReferenceType">
            <summary>
            Invalid Reference Type
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNoReference">
            <summary>
            No Reference Object
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrPlaneType">
            <summary>
            Invalid Plane Type
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCyliderPlaneExists">
            <summary>
            Grid Cylider Plane Already Exists
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGridRadialPlaneExists">
            <summary>
            Grid Radial Plane Already Exists
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGridelevationPlaneExists">
            <summary>
            Grid elevation Plane Already Exists
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrInvalidArguments">
            <summary>
            Invalid Arguments
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNotSupportedByGridLine">
            <summary>
            Method or property is not supported by grid line.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrCOMObjectIsNull">
            <summary>
            Unable to get COM object from SOM object
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetRootPoint">
            <summary>
            Error in calling GetRootPoint method
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetNormal">
            <summary>
            Error in calling GetNormal method
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetUDirection">
            <summary>
            Error in calling GetUDirection method
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetVDirection">
            <summary>
            Error in calling GetVDirection method
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetCoordinateSystem">
            <summary>
            Error in geting the coordinate system
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNotSupportedByGridArc">
            <summary>
            The property or method is not supported by grid arc.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetCenter">
            <summary>
            This exception is thrown when there is an unexpected failure while getting center.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetCircumference">
            <summary>
            This exception is thrown when there is an unexpected failure while getting circumference.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetEndPoint">
            <summary>
            This exception is thrown when there is an unexpected failure while getting end point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetStartPoint">
            <summary>
            This exception is thrown when there is an unexpected failure while getting start point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetMajorAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting major axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetRadius">
            <summary>
            This exception is thrown when there is an unexpected failure while getting radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetStartAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting start angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetSweepAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting sweep angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetRange">
            <summary>
            This exception is thrown when there is an unexpected failure while getting range.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetXAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting x-axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetYAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting y-axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetZAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting z-axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrGetOrigin">
            <summary>
            This exception is thrown when there is an unexpected failure while getting origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrNoNameRule">
            <summary>
            This exception is thrown when there no name rule associated to the given object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrELPlaneNotExists">
            <summary>
            This exception is thrown when the elevation plane does not exist.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrPlaneNotExists">
            <summary>
            This exception is thrown when the plane does not exist.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrInvalidAxes">
            <summary>
            This exception is thrown if invalid combination of axes are created.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.ErrConnection">
            <summary>
            This exception is thrown if invalid combination of axes are created.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.DEFAULT_RESOURCE">
            <summary>
            Default Resoure Name
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Grids.Middle.Services.GridsResourceIDs.DEFAULT_ASSEMBLY">
            <summary>
            Default Assembly Name
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">
            <summary>
            This exception is raised if a reference object is not found for the given reference type. 
            and nesting level type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.NoReferenceException.#ctor(System.String)">
            <summary>
            This exception is raised if a reference object is not found for the given reference type 
            and nesting level type.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.AxisExistsException">
            <summary>
            This exception is raised if the axis already exists.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.AxisExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the axis already exists.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">
            <summary>
            This exception is raised if the axis is not a valid axis type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidAxisException.#ctor(System.String)">
            <summary>
            This exception is raised if the axis is not a valid axis type.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.ElevationPlaneExistsException">
            <summary>
            This exception is raised if the elevation plane already exists at that location.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.ElevationPlaneExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the elevation plane already exists at that location.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException">
            <summary>
            This exception is raised if the plane does not exist at that location.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.PlaneDoesNotExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the plane does not exist at that location.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidAxesException">
            <summary>
            This exception is raised if an invalid combination of axes are created.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidAxesException.#ctor(System.String)">
            <summary>
            This exception is raised if an invalid combination of axes are created.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">
            <summary>
            This exception is raised only with the set property. The exception is raised if the 
            nesting level type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidNestingException.#ctor(System.String)">
            <summary>
            This exception is raised only with the set property. The exception is raised if the 
            nesting level type is not valid.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidPositionException">
            <summary>
            This exception is raised only with the set property. The exception is raised if the 
            Grids object position is set outside its previous position and next radial cylinder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidPositionException.#ctor(System.String)">
            <summary>
            This exception is raised only with the set property. The exception is raised if the 
            Grids object position is set outside its previous position and next radial cylinder.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">
            <summary>
            This exception is raised when the reference type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException.#ctor(System.String)">
            <summary>
            This exception is raised when the reference type is not valid.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridArcExistsException">
            <summary>
            This exception is raised if the grid arc already exists for the given elevation
            plane and the radial cylinder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridArcExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the grid arc already exists for the given elevation
            plane and the radial cylinder.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridLineExistsException">
            <summary>
            This exception is raised if the grid line already exists.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridLineExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the grid line already exists.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">
            <summary>
             This exception is raised if the grid plane already exists at that location.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the grid plane already exists at that location.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">
            <summary>
            This exception is raised when trying to access properties or methods not supported on the grid line. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridCylinderExistsException">
            <summary>
            This exception is raised if the grid cylinder already exists at that location.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridCylinderExistsException.#ctor(System.String)">
            <summary>
            This exception is raised if the grid cylinder already exists at that location.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.InvalidArgumentException">
            <summary>
            This exception is raised when the arguments that are passed in as parameters
            to the methods are not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.InvalidArgumentException.#ctor(System.String)">
            <summary>
            This exception is raised when the arguments that are passed in as 
            parameters to the methods are not valid.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">
            <summary>
            This exception is raised when the Grid object does not have write 
            permission.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.NoAccessException.#ctor(System.String)">
            <summary>
            This exception is raised when the Grid object does not have 
            write permission.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">
            <summary>
            This exception is raised when a COMException occurs calling SPGFactoryClass.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the SPGFactoryClassException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">
            <summary>
            This exception is raised when a COMException occurs calling SPGMiddleHelper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the SPGMiddleHelperException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetParentException">
            <summary>
            This exception is raised when a COMException occurs calling ISPGNavigate.GetParent method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetParentException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetParentException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetCSException">
            <summary>
            This exception is raised when a COMException occurs calling the GetCS method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCSException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetCSException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetAxisObjectFromCSException">
            <summary>
            This exception is raised when a COMException occurs calling the GetAxisObjectFromCS method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetAxisObjectFromCSException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetAxisObjectFromCSException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">
            <summary>
            This exception is raised when a COMException occurs calling the IsPlaneAtLocation method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the IsPlaneAtLocationException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetCoordinateSystemOfPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the GetCoordinateSystemOfPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCoordinateSystemOfPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetCoordinateSystemOfPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">
            <summary>
            This exception is raised when a COMException occurs calling the Set property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.SetPropertyException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the SetPropertyException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">
            <summary>
            This exception is raised when a COMException occurs calling the  Get property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetPropertyException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetPropertyException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateRadialCylinderException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateRadialCylinder method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateRadialCylinderException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateRadialCylinderException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateGridArcsByIntersectionException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateGridArcsByIntersection method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateGridArcsByIntersectionException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateGridArcsByIntersectionException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetBoundingException">
            <summary>
            This exception is raised when a COMException occurs calling the GetBounding method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetBoundingException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetBoundingException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">
            <summary>
            This exception is raised when a COMException occurs calling the GetReference method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetReferenceException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetReferenceException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateElevationPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateElevationPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateElevationPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateElevationPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.EnumGridLinesFromElevationPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the EnumGridLinesFromElevationPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.EnumGridLinesFromElevationPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the EnumGridLinesFromElevationPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.EnumGridLinesFromGridPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the EnumGridLinesFromGridPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.EnumGridLinesFromGridPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the EnumGridLinesFromGridPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateGridPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateGridPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateGridPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateGridPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateGridLineByIntersectionException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateGridLineByIntersection method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateGridLineByIntersectionException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateGridLineByIntersectionException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.CreateRadialPlaneException">
            <summary>
            This exception is raised when a COMException occurs calling the CreateRadialPlane method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.CreateRadialPlaneException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CreateRadialPlaneException 
            class with a reference to the inner COMException that is the cause of this exception.
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridPlaneMethodNotImplementedException">
            <summary>
            This exception is raised when some of the derived methods from IPlane are not implemented. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridPlaneMethodNotImplementedException.#ctor(System.String)">
             <summary>
            Initializes a new instance of the GridPlaneMethodNotImplementedException class.  
             </summary>
             <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.COMObjectNullException">
            <summary>
            This exception is raised when a SmartPlant 3D .NET object fails to return a COM object. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.COMObjectNullException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the COMObjectNullException class. 
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetRootPointException">
            <summary>
            This exception is raised when COMException occurs while calling the GetRootPoint method. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetRootPointException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetRootPointException class with a reference 
            to the inner COMException that is the cause of this exception.  
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetNormalException">
            <summary>
            This exception is raised when COMException occurs while calling the GetNormal method. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetNormalException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetNormalException class with a reference 
            to the inner COMException that is the cause of this exception.   
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetUDirectionException">
            <summary>
            This exception is raised when a COMException occurs while calling the GetUDirection method. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetUDirectionException.#ctor(System.Runtime.InteropServices.COMException)">
             <summary>
            Initializes a new instance of the GetUDirectionException class with a reference 
             to the inner COMException that is the cause of this exception.  
             </summary>
             <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetVDirectionException">
            <summary>
            This exception is raised when a COMException occurs while calling the GetVDirection method. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetVDirectionException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the GetVDirectionException class with a reference 
            to the inner COMException that is the cause of this exception. 
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.FailedToGetCoordinateSystemException">
            <summary>
            This exception is raised when the code fails to get the coordinate system object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.FailedToGetCoordinateSystemException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the CmnFailedToGetLocationException. 
            </summary>
            <param name="inner">The COMException that is the cause of the current exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.ExceptionHandler">
            <summary>
            Internal class to deligate the COM exception to the Common exception handler.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.ExceptionHandler.HandleCOMException(System.Runtime.InteropServices.COMException)">
            <summary>
            Internal method to call common exception handler which will handle all generic the COM exceptions related to db success and BO state.
            This method will thorow the required exception if required.
            </summary>
            <param name="comException">The COM exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException">
            <summary>
            Exception raised when trying to access properties or methods not supported on a grid arc. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GridArcMemberNotSupportedException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.DBConnectionException">
            <summary>
            Exception raised when trying to get the database connection. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.DBConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.DBConnectionException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetCenterException">
            <summary>
            Exception raised when an error occurs while getting the center.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCenterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetCenterException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCenterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetCenterException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException">
            <summary>
            Exception raised when an error occurs while getting the circumference.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetCircumferenceException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetEndPointException">
            <summary>
            Exception raised when an error occurs while getting the end point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetEndPointException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetEndPointException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetEndPointException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetEndPointException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetStartPointException">
            <summary>
            Exception raised when an error occurs while getting the start point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetStartPointException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetStartPointException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetStartPointException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetStartPointException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException">
            <summary>
            Exception raised when an error occurs while getting the major axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetMajorAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetRadiusException">
            <summary>
            Exception raised when an error occurs while getting the radius.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetRadiusException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetRadiusException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetRadiusException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetRadiusException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetStartAngleException">
            <summary>
            Exception raised when an error occurs while getting the start angle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetStartAngleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetStartAngleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetStartAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetStartAngleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException">
            <summary>
            Exception raised when an error occurs while getting the sweep angle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetSweepAngleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetRangeException">
            <summary>
            Exception raised when an error occurs while getting the range.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetRangeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetRangeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetRangeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetRangeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetXAxisException">
            <summary>
            Exception raised when an error occurs while getting the X-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetXAxisException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetXAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetXAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetXAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetYAxisException">
            <summary>
            Exception raised when an error occurs while getting the Y-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetYAxisException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetYAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetYAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetYAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetZAxisException">
            <summary>
            Exception raised when an error occurs while getting the Z-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetZAxisException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetZAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetZAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetZAxisException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.GetOriginException">
            <summary>
            Exception raised when an error occurs while getting the origin.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetOriginException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetOriginException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.GetOriginException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.GetOriginException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Exceptions.NoNameRuleException">
            <summary>
            Exception raised when a name rule is not associated with the object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.NoNameRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.NoNameRuleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Exceptions.NoNameRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Grids.Exceptions.NoNameRuleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridCylinder">
            <summary>
            GridCylinder class implements certain interfaces and exposes its own properties and 
            methods so that they can be modified.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridCylinder
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for GridCylinder.
            </summary>
            <param name="oPBO">Private Business Object</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.#ctor(System.Double,Ingr.SP3D.Grids.Middle.GridAxis)">
            <summary>
            Creates a GridCylinder object at the given position and the parent system. 
            The parent system object must be an Axis object.
            </summary>
            <param name="Position">Position of the grid cylinder.</param>
            <param name="oAxis">Axis object.</param>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">Invalid axis type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridCylinderExistsException">Grid cylinder already exists.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactoryClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelperClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Is plane at location failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateRadialCylinderException">Creating radial cylinder failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridCylinderExistsException">Grid cylinder exists failure.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.CreateGridArcs(Ingr.SP3D.Grids.Middle.GridElevationPlane)">
            <summary>
            Creates and returns a list of GridArc objects for the given cylinder and this elevation plane. 
            </summary>
            <param name="oElevPlane">Elevation plane.</param>
            <returns>List of GridArc objects.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">Invalid index.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactoryClass exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateGridArcsByIntersectionException">Failed to create grid arcs by intersection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.GetBoundaries(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Returns the boundaries of the grid cylinder.
            </summary>
            <param name="oBoundary1">First boundary.</param>
            <param name="oBoundary2">Second boundary.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetBoundingException">Failed to get  the bounding.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.GetGridArcsOnElvationPlane(Ingr.SP3D.Grids.Middle.GridElevationPlane)">
            <summary>
            Returns a read-only collection of GridArc objects resulting from the intersection of this radial cylinder.
            and the given elevation plane.
            </summary>
            <param name="oElevPlane">Grid elevation plane.</param>
            <returns>List of GridArc objects.</returns>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.GetReferenceGridCylinder(Ingr.SP3D.Grids.Middle.ReferenceType,Ingr.SP3D.Grids.Middle.NestingLevelType)">
            <summary>
            Returns the reference object based on the reference type and the nesting level.
            The reference object will be a GridRadialCylinder corresponding to the given ReferenceType
            and NestingLevelType.
            </summary>
            <param name="eRefType">Reference type enumerator.</param>
            <param name="eNestType">Nesting level type enumerator.</param>
            <returns>GridCylinder object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">Invalid reference type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">Invalid nesting level type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">No reference object.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">Failed to get the reference.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a child to the system.
            </summary>
            <param name="oChild">System child object.</param>
            <exception cref="T:System.ArgumentNullException">Argument passed is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the new orientation of the grid cylinder.
            </summary>
            <param name="oNewXAxis">New X-axis to be set on the coordinate system.</param>
            <param name="oNewYAxis">New Y-axis to be set on the coordinate system.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridCylinder.SetUserDefinedName(System.String)">
            <summary>
            Sets the name of an item.  This implementation removes any existing
            relationship with a name rule, which in most cases is appropriate when giving
            an object a user-defined name.
            
            <para>This method must be overidden by classes for which this is not the appropriate
            behavior.</para>
            </summary>
            <param name="Name">The new name string.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Axis">
            <summary>
            Gets the type of axis to which this radial cylinder belongs.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetCoordinateSystemOfPlaneException">Failed to get the coordinate system of the plane.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetAxisObjectFromCSException">Failed to get the axis object from the coordinate system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.GridArcs">
            <summary>
            Gets a list of grid arcs on all the elevation planes belonging to this radial cylinder.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.NestingLevel">
            <summary>
            Gets the nesting level of this radial cylinder.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failed to set the property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.DistanceFromOrigin">
            <summary>
            Gets or sets the position of this radial cylinder.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failed to set the property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Type">
            <summary>
            Gets the type of radial cylinder.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failed to set the property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.WBSProjects">
            <summary>
            Gets the WBSProjects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.SystemChildren">
            <summary>
            Implementation of the SystemChildren property by getting a ReadOnlyCollection of ISystemChild objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.SystemParent">
            <summary>
            Implementation of ISystemChild:System parent property.  Uses the
            system helper of CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Range">
            <summary>
            Gets the range of the cylinder plane.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.XAxis">
            <summary>
            Gets the X-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.YAxis">
            <summary>
            Gets the Y-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.ZAxis">
            <summary>
            Gets the Z-axis of the grid arc local coordinate system.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Origin">
            <summary>
            Gets or sets the position of the arc.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Matrix">
            <summary>
            Gets or sets the grid arc matrix.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented exception.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.ActiveNameRule">
            <summary>
            Gets or sets the active name rule associated with the grid radial cylinder.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.Name">
            <summary>
            Gets the read-only name.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.OriginAppName">
            <summary>
            Gets or sets the name of the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of the origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridCylinder.EDIFlag">
            <summary>
            Gets or sets the EDI flag; currently for future use.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.CoordinateSystemRuleBase">
            <summary>Rule Wrapper class for CoordinateSystems</summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.CoordinateSystemRuleBase.GetCoordinateSystems(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets all the coordinate systems.
            </summary>
            <param name="firstClassEntity">Graphic entity.</param>        
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.CoordinateSystemRuleBase.GetCoordinateSystemsFromDB(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.CoordinateSystem.CoordinateSystemType)">
            <summary>
            Gets all the coordinate systems from the database.
            </summary>
            <param name="connection">Database connection.</param>
            <param name="coordinateSystemType">Type of the coordinate system.</param>        
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.CoordinateSystemRuleBase.GetCoordinateSystemsInRange(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets all the coordinate systems within a range.
            </summary>
            <param name="entity">Graphic entity.</param>              
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsLocalizer.GetString(System.Int32,System.String)">
            <summary>
            Returns the localized string. 
            </summary>
            <param name="iID">Resource identifier.</param>
            <param name="defMsgStr">Default string.</param>
            <returns>String</returns>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridRadialPlane">
            <summary>
            GridRadialPlane class is derived from the GridPlaneBase class. GridRadialPlane class 
            implements certain interfaces and exposes its own properties and methods so that 
            they can be modified.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridRadialPlane.#ctor">
            <summary>
            Internal use only --> Hidden default construtor for GridRadialPlane
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridRadialPlane.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private business object wrapper constructor for GridRadialPlane
            </summary>
            <param name="oPBO">Private Business Object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridRadialPlane.#ctor(System.Double,Ingr.SP3D.Grids.Middle.GridAxis)">
            <summary>
            Creates a RadialPlane object at the given position and with the parent system. 
            The parent system object must be an Axis object of radial axis type.
            </summary>
            <param name="Position">Position of the radial grid plane.</param>
            <param name="oAxis">Axis object.</param>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidAxisException">Invalid axis type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridPlaneExistsException">Grid radial plane already exists.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactory class failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGMiddleHelperException">SPGMiddleHelper exception.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.IsPlaneAtLocationException">Plane is not at the location.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateRadialPlaneException">Failed to create the radial plane.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridRadialPlane.CreateGridLine(Ingr.SP3D.Grids.Middle.GridElevationPlane)">
            <summary>
            Creates and returns a GridLine object for the given elevation plane and this radial plane. 
            </summary>
            <param name="oElevPlane">Elevation plane.</param>
            <returns>GridLine object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SPGFactoryClassException">SPGFactory class failure.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.CreateGridLineByIntersectionException">Failed to create a grid line by intersection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridRadialPlane.GetReferenceRadialPlane(Ingr.SP3D.Grids.Middle.ReferenceType,Ingr.SP3D.Grids.Middle.NestingLevelType)">
            <summary>
             Returns the reference object based on the reference type and the nesting level. 
            The reference object will be a GridRadialPlane corresponding to the given ReferenceType and NestingLevelType.
            </summary>
            <param name="eRefType">Reference type enumerator.</param>
            <param name="eNestType">Nesting level type enumerator.</param>
            <returns>GridRadialPlane object.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">Invalid reference type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">Invalid nesting level type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">No reference object.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">Failed to get the reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridRadialPlane.Type">
            <summary>
            Gets or sets the type of plane of this radial plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoAccessException">Permission denied.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetPropertyException">Failed to get the property.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.SetPropertyException">Failed to set the property.</exception>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridLine">
            <summary>
            GridLine class implements certain interfaces and exposes its own properties and methods.
            This class derives from Curve3d. The methods on the interfaces of ILine which are not required by GridLine, 
            are overridden and will raise the GridLineMemberNotSupportedException. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridLine.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridLine.GetReferenceGridLine(Ingr.SP3D.Grids.Middle.ReferenceType,Ingr.SP3D.Grids.Middle.NestingLevelType)">
            <summary>
            Returns the reference grid line based on the reference type and the nesting level. 
            </summary>
            <param name="referenceType">Reference type enumerator.</param>
            <param name="nestingLevelType">Nesting level type enumerator.</param>
            <returns>Reference grid line.</returns>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidReferenceTypeException">Raised when reference type is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.InvalidNestingException">Raised when nesting level type is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.NoReferenceException">Raised when reference object is not found with given reference type and nesting level type.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetReferenceException">Raised when unable get the reference object.</exception>
            <example>This is an example of usage for this method.
            <code>
            'Create a proper grid line.
            Dim reference As GridLine = gridLine.GetReferenceGridLine(ReferenceType.Origin, NestingLevelType.Primary)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridLine.GetBoundaries(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Returns the boundaries of this grid line.
            </summary>
            <param name="boundary1">Boundary one.</param>
            <param name="boundary2">Boundary two.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetBoundingException">Raised when unable get the boundaries of the grid line.</exception>
            <example>This is an example of usage for this method.
            <code>
            'Create grid line.
            Dim boundary1 As BusinessObject
            Dim boundary2 As BusinessObject
            gridLine.GetBoundaries(boundary1, boundary2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridLine.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the grid line.
            This method is not supported, as we are not able to change the orientation of the grid line.
            </summary>
            <param name="xAxisNew">New X-axis to be set on the coordinate system.</param>
            <param name="yAxisNew">New Y-axis to be set on the coordinate system.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the orientation on the grid line.</exception>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridLine.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the grid line.
            This method is not supported, as we are not able to transform the grid line.
            </summary>
            <param name="oT4X4">Matrix4X4 object.</param>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while applying a transform on the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.WBSItemChildHelperObj">
            <summary>
            Gets the WBS item child helper obj.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine._LineHelper">
            <summary>
            Gets the _ line helper.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.ElevationPlane">
            <summary>
            Gets the grid elevation plane which is used to construct this grid line. 
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetParentException">Raised when unable get the elevation plane for this grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.IntersectingPlane">
            <summary>
            Gets the intersecting plane used to construct this grid line. 
            The intersecting plane can be either a grid plane or a grid radial plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetParentException">Raised when unable get the intersecting plane for this grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this grid line.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.WBSProjects">
            <summary>
            Gets the WBSProjects for this grid line.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.SystemParent">
            <summary>
            Gets or sets the system parent of the grid line.
            Set is not supported, as we are not able to change the system parent of the grid line.
            </summary>    
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the system parent of the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.XAxis">
            <summary>
            Gets the X-axis of the grid line local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetXAxisException">Raised while getting the X-axis of grid line.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.YAxis">
            <summary>
            Gets the Y-axis of the grid line local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetYAxisException">Raised while getting the Y-axis of the grid line.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.ZAxis">
            <summary>
            Gets the Z-axis of the grid line local coordinate system.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetZAxisException">Raised while getting the Z-axis of the grid line.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.Origin">
            <summary>
            Gets or sets the origin of the grid line.
            Set is not supported, as we are not able to change the origin of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetOriginException">Raised while getting the origin of the grid line.</exception>       
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the origin of the grid line.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.Matrix">
            <summary>
            Sets or returns the local coordinate system matrix of grid line.
            Set is not supported, as we are not able to change the matrix of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the matrix of the grid line.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.Range">
            <summary>
            Gets the range of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GetRangeException">Raised while unable to get the range of the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.EDIFlag">
            <summary>
            Gets or sets the EDI flag; currently for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.Infinite">
            <summary>
            Gets or sets whether this grid line is infinite.
            Set is not supported, as we are not able to change the infinite of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when line helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting whether infinite on the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.StartPoint">
            <summary>
            Gets or sets the start point of the grid line.
            Set is not supported, as we are not able to change the start point of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when line helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the start point on the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.EndPoint">
            <summary>
            Gets or sets the end point of the grid line.
            Set is not supported, as we are not able to change the end point of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when line helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the end point on the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.RootPoint">
            <summary>
            Gets or sets the root point of the grid line.
            Set is not supported, as we are not able to change the root point of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when line helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the root point on the grid line.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.GridLine.Direction">
            <summary>
            Gets or sets the direction of the grid line.
            Set is not supported, as we are not able to change the direction of the grid line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when line helper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument is used with the COM method.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.GridLineMemberNotSupportedException">Raised while setting the direction on the grid line.</exception>
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.GridsAPIHelper">
            <summary>
            Helper class for common grids API functions.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsAPIHelper.#ctor">
            <summary>
            Constructor for GridsAPIHelper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsAPIHelper.GetCoordinateSystemsFromDB(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.CoordinateSystem.CoordinateSystemType)">
            <summary>
            Queries the database and returns the requested type of coordinate systems. 
            </summary>
            <param name="oConnection">SP3DConnection object.</param>
            <param name="eCoordinateSystemType">Enumerated value of CoordinateSystemType.</param>
            <returns>Collection of CoordinateSystem objects.</returns>
            <exception cref="T:System.ArgumentNullException">SP3DConnection object is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.FailedToGetCoordinateSystemException">Failed to get the coordinate system.</exception> 
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsAPIHelper.GetCoordinateSystemsFromDB(Ingr.SP3D.Common.Middle.Services.SP3DConnection)">
            <summary>
            Queries the database and returns both the grids type and ship type coordinate systems.
            </summary>
            <param name="oConnection">SP3DConnection object.</param>
            <returns>Collection of CoordinateSystem objects.</returns>
            <exception cref="T:System.ArgumentNullException">SP3DConnection is null.</exception>
            <exception cref="T:Ingr.SP3D.Grids.Exceptions.FailedToGetCoordinateSystemException">Failed to get the coordinate system.</exception> 
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsAPIHelper.GetDefaultNameRule(System.String)">
            <summary>
            Gets the default name rule for the given class.
            </summary>
            <param name="sProgID"> COM class ProgID for which the name rule is being asked.</param>
            <returns>BusinessObject</returns>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.GridsAPIHelper.GetCOMClassString(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>       
        </member>
        <member name="T:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs">
            <summary>
            Transient class that contains the information about all the planes on a particular axis.    
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Creates grid plane locations for a given number of planes, starting at the given location and a fixed offset from there.
            </summary>
            <param name="startPlaneLocation">The start plane location.</param>
            <param name="spacing">The spacing between two planes.</param>
            <param name="requiredPlanes">The number of required planes.</param>        
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when required planes or spacing is lower than or equal to zero.</exception>
            <example>This is an example of how to create grid planes by using a start plane location, spacing, and required planes.
            <code>
            Dim gridAxisInputs As New GridAxisInputs(0.0, 1.0, 3)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.#ctor(System.Double,System.Int32,System.Double)">
            <summary>
            Creates grid plane locations for a required number by starting and ending planes at the specified locations.
            </summary>
            <param name="startPlaneLocation">The start plane location.</param>
            <param name="requiredPlanes">The number of required planes.</param>
            <param name="endPlaneLocation">The end plane location.</param>        
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when required planes are lower than or equal to zero.
            <para>Raised when the end plane location is equal to zero.</para></exception>
            <example>This is an example of how to create grid planes by using a start plane location, required planes, and an end location.
            <code>
            Dim gridAxisInputs As New GridAxisInputs(0.0, 3, 2.0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a required number of grid plane locations starting at the given grid plane and a fixed offset from there to an ending location.
            </summary>
            <param name="startPlaneLocation">The start plane location.</param>
            <param name="spacing">The spacing between two planes.</param>
            <param name="endPlaneLocation">The end plane location.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when spacing is lower than or equal to zero.
            <para>Raised when the end plane location is equal to zero.</para><para>Raised when end plane location is lower than a tolerance value and spacing is greater than a tolerance value.</para> 
            <para>Raised when the end plane location is greater than a tolerance value and spacing is lower than a tolerance value.</para></exception>
            <example>This is an example of how to create grid planes by using start plane location, spacing, and an end plane location.
            <code>
            Dim gridAxisInputs As New GridAxisInputs(0.0, 1.0, 2.0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.#ctor(System.Double[])">
            <summary>
            Creates required grid planes at the given locations.
            </summary>
            <param name="planeLocations">The plane locations.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the number of elements in the plane locations is lower than or equal to zero.</exception>
            <example>This is an example of how to create grid planes at specified locations.
            <code>
            Dim planeLocations As Double() = New Double(2) {}
            planeLocations(0) = 0.0
            planeLocations(1) = 1.0
            Dim gridAxisInputs As New GridAxisInputs(planeLocations)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.SetPlaneLocations">
            <summary>
            Calculates the plane locations based on the other inputs..
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.StartPlaneLocation">
            <summary>
            Gets or sets the starting plane location. The value can be negative.
            </summary>
            <value>The start plane.</value>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.Spacing">
            <summary>
            Gets or sets the spacing between two immediate planes.
            </summary>
            <value>The offset.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when spacing is lower than or equal to zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.RequiredPlanes">
            <summary>
            Gets or sets the number of planes to be created.
            </summary>
            <value>The number of planes.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when required planes are lower than or equal to zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.PlaneLocations">
            <summary>
            Gets or sets the locations at which planes are to be created.
            </summary>
            <value>The plane locations.</value>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the number of elements in the plane locations is lower than or equal to zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Grids.Middle.Services.GridAxisInputs.EndLocation">
            <summary>
            Gets or sets the end location.
            </summary>
            <value>
            The end location.
            </value>
        </member>
    </members>
</doc>
