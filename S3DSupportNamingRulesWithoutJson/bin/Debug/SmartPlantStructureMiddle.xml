<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartPlantStructureMiddle</name>
    </assembly>
    <members>
        <member name="T:Ingr.SP3D.Structure.Middle.WallPart">
            <summary>
            WallPart class is a wrapper for the COM WallPart class. This class represents
            the real physical part in the model. Geometry is represented by a solid.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Wall">
            <summary>
            Wall abstract class is the base class for all classes belonging to the wall group. It provides
            generalization of all entities supporting plate-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Establishes the child relationship between this object and the child, given a system child.
            </summary>
            <param name="oChild"> A child to which a parent and child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Create a WallSystem - oWallSys1 with its constructor.
            Dim oChild As ISystemChild 
            oWallSys1.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            'Create wall system or wall part with its constructor.
            oWallSystem.SetUserDefinedName("Profile System")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the wall system.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure. </exception>
            <example>This is an example of the Transform method.
            <code>
            'oWalSys is a WallSystem object.
            Dim oMatrix As New Matrix4X4()
            oMatrix.SetIndexValue(12, 10)
            'Translate by 10m.
            oWallSys.Transform(oMatrix)
            </code>
            </example>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Wall.m_oWBSHierarchyHelper">
            <summary>
            Collection of WBS parents of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="portType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            'walPart is a WallPart object from the wall system.
            Dim connectablePorts As ReadOnlyCollection(Of IPort)
            connectablePorts = wallPart.GetConnectablePorts(PortType.All)
            </code>
            </example>            
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="portType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetConnectedPorts method.
            <code>
            'walPart is a WallPart object from the wall system.
            Dim connectedPorts As ReadOnlyCollection(Of IPort)
            connectedPorts = wallPart.GetConnectedPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="portType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetPorts method.
            <code>
            'walPart is a WallPart object from the wall system.
            Dim ports As ReadOnlyCollection(Of IPort)
            ports = wallPart.GetPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="connectable"> A connectable object (IConnectable). </param>
            <param name="connections"> A read-only collection of connection objects (IConnection). </param>
            <returns> True if the object is connected; otherwise False. </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Create a WallSystem object - oWallSys1
            Dim connectable As IConnectable
            'Instantiate connectable with a connectable object to wall system.
            Dim connections As ReadOnlyCollection(Of IConnection)
            Dim isConnectedTo As Boolean = wallSys1.IsConnectedTo(connectable, connections)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectedObjects">
            <summary>
            Gets the connected objects.
            </summary>
            <returns>Read-Only collection of the connected objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectedObjects(System.Type)">
            <summary>
            Gets the connected objects of specific object type.
            </summary>
            <param name="connectedObjectType">Type of the connected object.</param>
            <returns>Read-Only collection of specific object type of the connected objects.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.BoundaryOffset">
            <summary>
            Gets or sets the boundary offset on the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WallType">
            <summary>
            Gets or sets the catalog part for the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.MaximumHeight">
            <summary>
            Gets or sets the wall maximum height.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CardinalPoint">
            <summary>
            Gets or sets the cardinal point for the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Reflect">
            <summary>
            Gets or sets the reflect flag on the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.VerticalOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Angle">
            <summary>
            Gets or sets the angle on the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WallComposition">
            <summary>
            Gets or sets the wall composition catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CompositionLayers">
            <summary>
            Gets the collection of layers constituting the current wall composition. 
            Note that the returned object type is Layer, which is the model occurrence 
            for the current wall, not the catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.ReferenceLayer">
            <summary>
            Gets the reference layer of the wall.
            </summary>
            
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Thickness">
            <summary>
            Gets or sets the wall thickness.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SystemChildren">
            <summary>
            Gets a read-only collection of this object's system children.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SystemParent">
            <summary>
            Gets or sets the parent of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Range">
            <summary>
            Gets the range box representing the range of the wall.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WBSProjects">
            <summary>
            Gets the WBSProjects for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CrossSection">
            <summary>
            Gets or sets the cross section of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionStandard">
            <summary>
            Read-only property to get the section standard of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionType">
            <summary>
            Read-only property to get the section type of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionName">
            <summary>
            Read-only property to get the section name of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CrossSectionTypeName">
            <summary>
            Read-only property to get the section type name of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall._ConnectableHelper">
            <summary>
            Gets the connectable helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructConnectable">
            <summary>
            IStructConnectable interface definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by the port geometry type and geometry stage.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology context to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology Context to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is for creating a physical connection with port geometry that will be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag in which to create a port with the given moniker data in case the port is not found.</param>
            <returns>
            Structure port created by the given moniker data.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port whose geometry will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID.
            </summary>
            <param name="geometryType">Flag to specify the type of topology geometry.</param>
            <param name="operatorID">Operator ID for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport. Also, type of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity with the given conditions.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructConnectable.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from the wall part filtered by the port geometry type and geometry stage.
            </summary>
            <param name="geometryType">Geometry type to use for filtering the ports.</param>
            <param name="geometryStage">Geometry stage of the wall part's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes the port geometry type and geometry stage.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = wallPart.GetPorts(TopologyGeometryType.Face, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from the wall part filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="geometryType">Geometry type to use for filtering the ports.</param>
            <param name="geometryOperationType">Geometry operation in the wall part's geometry graph.</param>
            <param name="graphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes the port geometry type, geometry operation and the graph position.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = wallPart.GetPorts(TopologyGeometryType.Face, GeometryOperationTypes.Generate, GraphPosition.After)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from the wall part filtered by context and geometry stage in the graph.
            </summary>
            <param name="geometryType">Geometry type to use for filtering the ports.</param>
            <param name="contextType">Topology context to use for filtering the ports.</param>
            <param name="geometryStage">Geometry stage of the wall part's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes the port geometry type, topology context and geometry stage.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = wallPart.GetPorts(TopologyGeometryType.Edge, ContextTypes.Cutout, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from the wall part filtered by context and geometry operation in the graph.
            </summary>
            <param name="geometryType">Geometry type to use for filtering the ports.</param>
            <param name="contextType">Topology Context to use for filtering the ports.</param>
            <param name="geometryOperationType">Geometry operation in the wall part's geometry graph.</param>
            <param name="graphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes the port geometry type, topology context, geometry operation and graph position.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = wallPart.GetPorts(TopologyGeometryType.Face, ContextTypes.Lateral, GeometryOperationTypes.PartFinalTrim, GraphPosition.Before)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the the wall part with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to complete the connection.
            Typical use is creating a physical connection with port geometry that will be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to create a port with the given moniker data in case the port is not found.</param>
            <returns>TopologyPort created by the given moniker data.</returns>
            <example>This is an example for the GetPort() method which takes the port moniker data.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim port As TopologyPort = wallPart.GetPort(TopologyGeometryType.Face, -1, -1, ContextTypes.Lateral, -1, False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:System.NotImplementedException">GetPort is not implemented at this time.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>  
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">Raised if context type is not base or offset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim baseOrOffsetPort As TopologyPort = wallPart.GetPort(TopologyGeometryType.Face, ContextTypes.Base)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <example>GetPort method example code.
            <code>
            Dim wallPart As WallPart 'Substitute this line with the actual wall part instance.
            Dim sectionId As Integer = 1
            Dim port As TopologyPort = wallPart.GetPort(TopologyGeometryType.Face, ContextTypes.Base, sectionId)
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">Operator ID for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport and type of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity with the given conditions.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception> 
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is a failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure occurred while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
            <example>GetPort method example code.
            <code lang="cs">
            
            WallSystem wallSystem; //Substitute this line with the actual WallSystem instance.
            
            //Get wall part
            WallPart wallPart = wallSystem.Parts[0];
            //call get port from the wall part after cutout operation
            TopologyPort port = wallPart.GetPort(TopologyGeometryType.Face, 1, GeometryOperationTypes.Cutout, ContextTypes.Base, GraphPosition.After, -1, False);
            </code>
            <code lang="vb">
            'Create a wallSystem.
            Dim wallSystem As WallSystem 'Substitute this line with the actual WallSystem instance.
            
            'Get wall part 
            Dim wallPart As WallPart = wallSystem.Parts[0];
            //call get port from the wall part after cutout operation
            Dim port As TopologyPort = wallPart.GetPort(TopologyGeometryType.Face,1,GeometryOperationTypes.Cutout, ContextTypes.Base,GraphPosition.After, -1,False)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.WallSystem">
            <summary>
            Gets the wall system of the wall part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.WallConnections">
            <summary>
            Gets the collection of wall connections on the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.Openings">
            <summary>
            Gets the openings on this wall part.
            Returns an empty collection if an opening is not on this wall part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the wall part geometry. 
            Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the wall part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.SystemParent">
            <summary>
            Gets the read-only system parent. Note that the system parent cannot be set on the wall part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">Raised when SystemParent is set on a wall part, since it is not supported.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.StructConnectableHelperInstance">
            <summary>
            Gets the struct connectable helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.AssemblyChildHelperInstance">
            <summary>
            Gets the assembly child helper instance.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationBase">
            <summary>
            Implementation of the FoundationBase abstract class. This class provides generalization of all entities and
            their components which are used as foundations for other entities.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IPartSelection">
            <summary>
            Realized by all objects that aggregate the smart occurrence. 
            Provides access to commonly-used methods on the smart occurrence for part selection. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the smart occurrence starting with the given root selection or part.  
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule.
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IPartSelection.PartName">
            <summary>
            Gets or sets the definition or smart item by name on the smart occurrence.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IPartSelection.Part">
            <summary>
            Gets or sets the definition or smart item object on the smart occurrence.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="child">A child to which a parent/child relationship should be created.</param>
            <example>
            <code>
            'Example code for method AddSystemChild. 
            Dim copiedFooting As Footing =  New Footing(footing) 
            footing.AddSystemChild(copiedFooting)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds the specified object as a child to parent object.
            </summary>
            <param name="child">IAssemblyChild object as child.</param>
            <example>
            <code>
            'Example code for method AddAssemblyChild.
            footing.AddAssemblyChild(CType(childFooting, IAssemblyChild))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of the foundations.
            </summary>
            <param name="name">String value of the new name.</param>
            <exception cref="T:System.ArgumentNullException">Name parameter is null.</exception>
            <example>
            <code>
            'Example code for method SetUserDefinedName.
            footing.SetUserDefinedName("MyFootingName-Test")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the smart occurrence starting with the given root selection or part.
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
            <example>
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim selectionRule As String =  footing.ExecuteSelectionRule(footing.PartName)
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Raised if the rootSelectorOrPart argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.
            An invalid part is a part which is not a child of the root smart class hierarchy.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim partClassName as String 'Substitute this line with the actual part class name instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = footing.GetAvailableSelections(partClassName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part-classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = footing.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim questionName as String 'Substitute this line with the actual question name instance.
            Dim selectionRuleAnswer As PropertyValue = footing.GetSelectionRuleAnswer(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim questionName as String 'Substitute this line with the actual question name instance.
            Dim isSelectionQuestionOverridden As Boolean = footing.IsSelectionQuestionOverridden(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim questionName as String 'Substitute this line with the actual question name instance.
            footing.OverrideSelectionQuestion(questionName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim parameterName as String 'Substitute this line with the actual parameter name instance.
            Dim isParameterOverridden As Boolean = footing.IsParameterOverridden(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim parameterName as String 'Substitute this line with the actual parameter name instance.
            footing.OverrideParameter(parameterName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = footing.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim footing as Footing 'Substitute this line with the actual footing or equipment foundation instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = footing.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            footing.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.SetPartValue(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Sets the part value.
            </summary>
            <param name="part">The part.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.SystemChildren">
            <summary>
            Read-only property to get this object's system children.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.SystemParent">
            <summary>
            Gets or sets the system parent of the this object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.AssemblyChildren">
            <summary>
            Returns the collection of assembly children of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of equipment component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Name">
            <summary>
            Gets the name of the foundations.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.ActiveNameRule">
            <summary>
            Gets or sets the active name rule.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidObjectTypeException">The object is not a name rule object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNoAccessException">The user does not have access to read or modify the object.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.WBSItemParents">
            <summary>
            WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.WBSProjects">
            <summary>
            WBSProjects for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Range">
            <summary>
            Gets the range box representing the range of the foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.PartName">
            <summary>
            Gets or sets the definition or part by name on this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when an unexpected error occurred while setting part name.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when anargument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Part">
            <summary>
            Gets or sets the definition or part on this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the foundation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the foundation.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Failed to get the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if the matrix value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Origin">
            <summary>
            Gets or sets the position of the object.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the position value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Opening">
            <summary>
            Provides generalization of all entities supporting opening-like behavior and functionality.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IBoardManagement">
            <summary>
            Implemented on all kinds of objects that participate in board management.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IBoardManagement.Symmetry">
            <summary>
            Gets or sets the symmetry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IBoardManagement.IsOverridden">
            <summary>
            Gets or sets the override property of symmetry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IBoardManagement.SymmetricalPart">
            <summary>
            Gets or sets the symmetrical part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IBoardManagement.IsSymmetryUpToDate">
            <summary>
            Checks whether the symmetry is up-to-date or not.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IBoardManagement.IsSymmetryPartIdentical">
            <summary>
            Checks whether or not the symmetry part is identical.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.#ctor">
            <summary>
            Constructor to enable reflection to instantiate this class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Instantiates an opening object from the database.
            </summary>
            <param name="privateBusinessObject">Private business object that corresponds to an opening object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.#ctor(Ingr.SP3D.Structure.Middle.TopologyPort,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Creates an opening on the connectable of the penetrated port, which is also the sketching plane.
            It completely penetrates the connectable of the penetrated port.
            </summary>
            <param name="penetratedPort">The penetrated port should be the penetrated face of the WallPart, Slab, or MemberPart in which to create the opening.</param>
            <param name="boundaries">The collection of boundaries that define a closed curve on the object. The collection should maintain the order to be either clockwise or counter-clockwise.
                               <para>A valid boundary object can be plane, arc, line, or curve (except MemberSystem) or a port of MemberPart, Slab, WallPart, or GenericPlatePart.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException">Raised when the boundary collection has invalid objects.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the penetrated port is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortTypeException">Raised when the penetrated port is not a face port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortConnectableException">Raised when the penetrated port connectable is not WallPart, Slab, or MemberPart.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketchingPlaneException">Raised when the penetrated port is not a valid sketching plane.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection is not obtained from a penetrated port connectable.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">Raised when the sketch contour from the boundaries is self-intersecting or a contour that is not closed.</exception>
            <example>This is an example of how to create an opening using topology port and boundaries.
            <code>
            'Need to create proper slab.
            Dim slab As Slab
            
            'Get grid axis from coordinate system.
            Dim xAxis As GridAxis
            Dim yAxis As GridAxis
            
            'Get port from slab.
            Dim slabOffsetFacePort As TopologyPort = slab.GetPort(TopologyGeometryType.Face, -1, 0, ContextTypes.Offset, -1, False)
            
            'Specify the boundaries in a clockwise or anti-clockwise order
            Dim boundaries As New Collection(Of BoundaryDefinition)()
            boundaries.Add(New BoundaryDefinition(xAxis.GetPlane(1.0), 0.0))
            boundaries.Add(New BoundaryDefinition(yAxis.GetPlane(1.0), 0.0))
            boundaries.Add(New BoundaryDefinition(xAxis.GetPlane(2.0), 0.0))
            boundaries.Add(New BoundaryDefinition(yAxis.GetPlane(2.0), 0.0))
                
            Dim opening As New Opening(slabOffsetFacePort, boundaries)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.PlaneDefinition,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Creates an opening on the penetrated object with the given sketching plane.
            It completely penetrates the penetrated object.
            </summary>
            <param name="penetratedObject">The penetrated object on which to place an opening. It can be a MemberPart, Slab, or WallPart.</param>
            <param name="sketchingPlane">The sketching plane object. Valid SketchingPlane object is a coincident PlaneDefinition with a plane or a face port of MemberPart, Slab, WallPart, or GenericPlatePart.</param>
            <param name="boundaries">The collection of boundaries that define a closed curve on the object. The collection should maintain the order to be either clockwise or counter-clockwise.
                               <para>A valid boundary object can be plane, arc, line, or curve (except MemberSystem) or a port of MemberPart, Slab, WallPart, or GenericPlatePart.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException">Raised when the boundary collection has an invalid number of objects.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the penetrated object is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException">Raised when the penetrated object is not WallPart, Slab, or MemberPart.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketchingPlaneException">Raised when the sketching plane is not created with a coincident method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection is not obtained from a penetrated object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">Raised when the sketch contour from the boundaries is self-intersecting or a contour that is not closed.</exception>
            <example>This is an example of how to create an opening using penetrated object, sketching plane, and boundaries.
            <code>
            'Need to create proper wall part.
            Dim wallPart As WallPart
            
            'Get grid axis from coordinate system.
            Dim xAxis As GridAxis
            Dim yAxis As GridAxis
            Dim zAxis As GridAxis
            
            Dim sketchingPlane As New PlaneDefinition(zAxis.GetPlane(0.0))
            
            'Specify the boundaries in a clockwise or anti-clockwise order.
            Dim boundaries As New Collection(Of BoundaryDefinition)()
            boundaries.Add(New BoundaryDefinition(xAxis.GetPlane(1.0), 0.0))
            boundaries.Add(New BoundaryDefinition(yAxis.GetPlane(1.0), 0.0))
            boundaries.Add(New BoundaryDefinition(xAxis.GetPlane(2.0), 0.0))
            boundaries.Add(New BoundaryDefinition(yAxis.GetPlane(2.0), 0.0))
            
            Dim opening As New Opening(wallPart, sketchingPlane, boundaries)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Creates an opening on the penetrated object by projecting the contour obtained from the Sketch2d definition onto the penetrated object.
            </summary>
            <param name="penetratedObject">The penetrated object on which to place the opening. It can be a profile part, slab, wall part, plate system, or plate part base.</param>
            <param name="sketch2dDefinition">The Sketch2d definition created using a symbol file or a catalog part that defines a closed curve on the penetrated object.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the penetrated object is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection is not obtained from a penetrated object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">Raised when the sketch contour from the input symbol file is self-intersecting or a contour that is not closed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException">Raised when the penetrated object is not profile part, slab, wall part, plate system base, or plate part base.</exception>
            <example>This is an example of how to create an opening using penetrated object contour obtained from Sketch2d definition.
            <code>
            'Create proper plate system.
            Dim plateSystem As PlateSystem
            
            'Provide proper symbol file location.
            Dim sketchSymLocation As String
            
            'Get Z-grid axis from coordinate system.
            Dim zAxis As GridAxis
            
            Dim sketch2dDefinition As New Sketch2dDefinition(sketchSymLocation, zAxis.GetPlane(0.0))
            Dim opening As New Opening(plateSystem, sketch2dDefinition)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of this opening and removes any existing relationship with the name rule.
            </summary>
            <param name="name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            opening.SetUserDefinedName("Opening-InSlab")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.IsValidSketchingPlane(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether the specified sketching plane is valid or not.
            </summary>
            <param name="sketchingPlane">The sketching plane.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns>True if the specified sketching plane is valid; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.IsValidBoundaryObjectType(System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Determines whether the specified boundaries are valid boundary object type or not.
            </summary>
            <param name="boundaries">The boundaries.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns>True if the specified boundaries are valid boundary object type; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.IsPortBeforeCutout(Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Determines whether the specified port is port before cutout or not.
            Alos checks is this is a port of MemberPart or port of Slab or port of WallPart or port of GenericPlatePart or not.
            </summary>
            <param name="portObject">The port object.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.AreValidBoundaries(Ingr.SP3D.Common.Middle.BusinessObject,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Ares the boundaries orthogonal with sketching plane.
            </summary>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="boundaries">The boundaries.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetCOMOpeningFromSketch2d(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Gets the COM opening with sketch2d.
            </summary>
            <param name="penetratedObject">The penetrated object.</param>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when data base connection is not obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">Raised when the sketch contour from the input sym file is self interesting or not closed contour.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetCOMOpeningFromBoundaries(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Gets the COM opening from boundaries.
            </summary>
            <param name="penetratedObjectOrPortConnectable">The penetrated object or port connectable.</param>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="boundaries">The boundaries.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the data base connection is not obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">Raised when the sketch contour from the boundaries is self interesting or not closed contour.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetStructCutoutContour(Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Gets the struct cutout contour.
            </summary>
            <param name="penetratedObjectOrPortConnectable">The penetrated object or port connectable.</param>
            <param name="structRootContour">The struct root contour.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the data base connection is not obtained.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetStructRootContour(Ingr.SP3D.Common.Middle.BusinessObject,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Gets the struct root contour.
            </summary>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="boundaries">The boundaries.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the data base connection is not obtained.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.UpdateStructRootContour(Ingr.SP3D.Common.Middle.BusinessObject,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition},System.Object@)">
            <summary>
            Updates the struct root contour.
            </summary>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="structRootContour">The struct root contour.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the data base connection is not obtained.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetStructRootContourParents(System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Gets the struct root contour parents.
            </summary>
            <param name="boundaries">The boundaries.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetFacePortBeforeCutout(Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Gets the face port before cutout.
            </summary>
            <param name="actualPort">The actual port.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns>The face port before cutout.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetSketchReferenceInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Gets the sketch reference inputs.
            </summary>
            <param name="penetratedObject">The penetrated object.</param>
            <param name="stableFacePort">The stable face port.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetOrientationMatrix(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Gets the Orientation Matrix.
            </summary>
            <param name="penetratedObject">The penetrated object.</param>
            <param name="stableFacePort">The stable face port.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.UpdateControlFlag(System.Object,System.Int32,System.Int32)">
            <summary>
            Updates the control flag.
            </summary>
            <param name="controlFlag">The control flag.</param>
            <param name="maskControl">The mask control.</param>
            <param name="newValue">The new value.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetAttributeCollection">
            <summary>
            Gets the attribute collection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException">Raised while getting collection of attributes by passing interface ID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationshipException">Raised while getting opening type relation from the opening.</exception>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetStructCutoutContourSupport">
            <summary>
            Get struct cutout contour support.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetInputContour(Ingr.SP3D.Structure.Middle.Opening)">
            <summary>
            Gets the input contour.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.GetExistingOpeningSymbol(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Structure.Middle.Opening})">
            <summary>
            Gets the existing opening symbol.
            </summary>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="existingOpenings">The existing openings.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Opening.SetPersistentPrivateBOToCache(System.Object,Ingr.SP3D.Common.Middle.Services.SP3DConnection)">
            <summary>
            This method will be used to set the private BO to cache when the opening is created in the helper class.
            </summary>
            <param name="opening">The opening.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.SystemParent">
            <summary>
            Gets or sets the system parent of this opening.
            </summary>        
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the opening does not support IJDesignChild interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemParentException">Raised when there is failure to get the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToSetSystemParentException">Raised when there is failure to set the system hierarchy parent.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Name">
            <summary>
            Gets the name of this opening.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of this opening.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:System.InvalidOperationException">Raised when the opening does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidObjectTypeException">Raised when the object is not a name rule object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNoAccessException">Raised when the user does not have access to read or modify the opening.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException">Raised when an invalid molded form name rule is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Range">
            <summary>
            Gets the range of physical aspect of this opening.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Raised when an unexpected failure occurred while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.OriginOid">
            <summary>
            Gets or sets the object identifier associated with the object in the application of origin. 
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when the argument is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IEDIData members on sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IEDIData members on sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IEDIData members on sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.OriginAppId">
            <summary>
            Gets or sets the identifier associated with the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IEDIData members on sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag. To be available for future use.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IEDIData members on sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.WBSItemParents">
            <summary>
            Gets the WBS item parents for this opening.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IWBSItemChild members on opening in plate system and sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.WBSProjects">
            <summary>
            Gets the WBS projects to which this opening has been claimed.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IWBSItemChild members on opening in plate system and sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Symmetry">
            <summary>
            Gets or sets the symmetry.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SymmetryException">Raised when an unexpected error occurred while getting or setting the symmetry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsOverridden">
            <summary>
            Gets or sets the override property of symmetry.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsOverriddenException">Raised when an unexpected error occurred while getting or setting the IsOverridden property.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.SymmetricalPart">
            <summary>
            Gets or sets the symmetrical part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException">Raised when an unexpected error occurred while getting or setting the symmetrical part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsSymmetryUpToDate">
            <summary>
            Checks whether the symmetry is up-to-date or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException">Raised when an unexpected error occurred while determining whether the symmetry is up-to date or not.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsSymmetryPartIdentical">
            <summary>
            Checks whether the symmetrical part is identical or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException">Raised when an unexpected error occurred while determining whether the symmetrical part is identical or not.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.PenetratedObject">
            <summary>
            Gets the penetrated object of the opening.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.PenetratedFace">
            <summary>
            Gets the penetrated face of the opening.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the penetrated face property on an opening in plate system and sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.SketchingPlane">
            <summary>
            Gets the sketching plane information of the opening.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.CuttingLimit">
            <summary>
            Gets or sets the cutting limit.
            <para> This property is supported only for an opening in member part, slab, and wall part. ThroughNext value is supported only for an opening in member part.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCuttingLimitException">Raised when setting the cutting limit is UserDefined; or setting ThroughNext on a penetrated object, which is not a member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the cutting limit property on an opening in the plate system and sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.CuttingDepth">
            <summary>
            Gets or sets the opening depth.
            If the cutting limit type is other than UserDefined, then it will be changed to UserDefined while setting the cutting depth.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when a null value is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OpeningCuttingDepthValueException">Raised when the cutting depth value is zero.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the cutting depth property on an opening in the plate system and sketched feature opening.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Description">
            <summary>
            Gets or sets the description for the opening.
            This property is valid only for an opening in slab, member part, or wall part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when a null value is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OpeningDescriptionException">Raised when an unexpected failure occurred while getting or setting the description.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the description property on an opening in the plate system and sketched feature opening.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException">Raised while getting the collection of attributes by providing the interface ID.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Boundaries">
            <summary>
            Gets or sets the boundaries collection which define a closed curve on the object.
            Returns an empty collection for the opening in MemberPart or WallPart or Slab is created using Sketch2dDefinition as a boundary contour.
            The collection should maintain the order to be either clockwise or counter-clockwise.
            A valid boundary object can be plane or arc or line or curve (except MemberSystem) or port of MemberPart or port of Slab or port of WallPart or port of GenericPlatePart.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when a null value is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException">Raised when the boundary collection has invalid objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOpeningBoundariesException">Raised when the opening is created by Sketch2dDefinition for the boundary contour.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the boundaries property on an opening in the plate system and sketched feature opening.</exception>=
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.Sketch2dDefinition">
            <summary>
            Gets the sketch2d definition from this opening.
            Returns null if this opening is created with boundaries.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.DesignType">
            <summary>
            Gets or sets the type of the design for this opening.
            <para>This property is valid for an opening in the plate system and sketched feature opening.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OpeningDesignTypeException">Raised while an unexpected failure occurred while getting or setting the design type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised when an invalid design type is given.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the design type property on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.PlanningMethod">
            <summary>
            Gets or sets the planning method for the opening.
            <para>This property is valid for an opening in the plate system and sketched feature opening.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OpeningPlanningMethodException">Raised while an unexpected failure occurred while getting or setting the planning method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised when an invalid planning method is given.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the planning method property on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.ProductionMethod">
            <summary>
            Gets or sets the production method for the opening.
            <para>This property is valid for an opening in the plate system and sketched feature opening.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OpeningProductionMethodException">Raised when an unexpected failure occurred while getting or setting the production method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised when an invalid production method is given.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing the production method property on an opening in member part, wall part, or slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsBoardManagementSupported">
            <summary>
            Gets a value indicating whether this instance is board management supported or not.
            </summary>
            <value>True if this instance is board management supported; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsWBSItemChildSupported">
            <summary>
            Gets a value indicating whether this instance can be included in a Work Breakdown Structure or not.
            </summary>
            <value>True if this instance can be included in a Work Breakdown Structure; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsEDIDataSupported">
            <summary>
            Gets a value indicating whether this instance can be included in a IJCISData or not.
            </summary>
            <value>True if this instance can be included in a IJCISData; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.BoardManagementHelperInstance">
            <summary>
            Gets the board management helper instance.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on opening in MemberPart or WallPart or Slab.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.WBSItemChildHelperObject">
            <summary>
            Gets the WBS item child helper object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IWBSItemChild members on opening in PlateSystem.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsPlantOpening">
            <summary>
            Gets a value indicating whether this opening is plant opening (opening in member part, slab or wall part).
            </summary>
            <value>True if this opening is plant opening; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.IsSketchedOpening">
            <summary>
            Gets a value indicating whether this opening is sketched or not.
            </summary>
            <value>True if this opening is sketched; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Opening.ContourUsageType">
            <summary>
            Gets the type of the contour usage.
            </summary>
            <value>
            The type of the contour usage.
            </value>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput">
            <summary>
            ParameterOfInput class is used to declare parameter of input field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the ParameterOfInputAttribute.
            </summary>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.#ctor(System.String,System.String,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Boolean,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput"/> class.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="userName">Name of the user.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">Type of the unit.</param>
            <param name="primaryUnitName">Name of the primary unit.</param>
            <param name="secondaryUnitName">Name of the secondary unit.</param>
            <param name="tertiaryUnitName">Name of the tertiary unit.</param>
            <param name="isShownOnRibbonBar">if set to <c>true</c> [is shown on ribbon bar].</param>
            <param name="occurrence">The geometric construction occurrence for which this parameter of input is defined.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.GetParameterValue(System.Int32)">
            <summary>
            Gets the parameter value for the parameter of input by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Parameter value information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the index is less than zero, or if the index is equal to or greater than the parameter values count.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.Name">
            <summary>
            Gets the name for parameter of input.
            It will be unique for each parameter of input defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.InputCollectionName">
            <summary>
            Gets the input collection name for which the parameter is applicable.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.UserName">
            <summary>
            Gets the user name for the parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.Type">
            <summary>
            Gets the type for the parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.UnitType">
            <summary>
            Gets the unit type for the parameter of input.
            Returns null if there is no unit type defined for this parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.PrimaryUnitName">
            <summary>
            Gets the primary unit name for the parameter of input.
            Returns null if there is no primary unit name defined for this parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.SecondaryUnitName">
            <summary>
            Gets the secondary unit name for the parameter of input.
            Returns null if there is no secondary unit name defined for this parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.TertiaryUnitName">
            <summary>
            Gets the tertiary unit name for the parameter of input.
            Returns null if there is no tertiary unit name defined for this parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.Value">
            <summary>
            Gets the value for the parameter of input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.IsShownOnRibbonBar">
            <summary>
            Gets a value indicating whether the parameter of input will be displayed in the ribbon bar or not.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.ParameterValues">
            <summary>
            Gets all the parameter values for the parameter of input.
            Returns an empty collection if there is no ParameterValueAttribute defined for this parameter of input in the custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterOfInput.Occurrence">
            <summary>
            Gets or sets the geometric construction occurrence for which this parameter of input is defined.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter">
            <summary>
            Parameter class is used to declare parameter field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the ParameterAttribute.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.#ctor(System.String,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Boolean,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter"/> class.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="userName">Name of the user.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">Type of the unit.</param>
            <param name="primaryUnitName">Name of the primary unit.</param>
            <param name="secondaryUnitName">Name of the secondary unit.</param>
            <param name="tertiaryUnitName">Name of the tertiary unit.</param>
            <param name="isShownOnRibbonBar">if set to <c>true</c> [is shown on ribbon bar].</param>
            <param name="occurrence">The geometric construction occurrence for which this parameter is defined.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.GetParameterValue(System.Int32)">
            <summary>
            Gets the parameter value for the parameter by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Parameter value information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the index is less than zero, or if the index is equal to or greater than the parameter values count.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.Name">
            <summary>
            Gets the parameter name.
            It will be unique for each parameter defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.UserName">
            <summary>
            Gets the user name of the parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.Type">
            <summary>
            Gets the type of the parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.UnitType">
            <summary>
            Gets the unit type of the parameter.
            Returns null if there is no unit type defined for this parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.PrimaryUnitName">
            <summary>
            Gets the primary unit name of the parameter.
            Returns null if there is no primary unit name defined for this parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.SecondaryUnitName">
            <summary>
            Gets the secondary unit name of the parameter.
            Returns null if there is no secondary unit name defined for this parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.TertiaryUnitName">
            <summary>
            Gets the tertiary unit name of the parameter.
            Returns null if there is no tertiary unit name defined for this parameter.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.Value">
            <summary>
            Gets the parameter value.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.IsShownOnRibbonBar">
            <summary>
            Gets a value indicating whether the parameter will be displayed in the ribbon bar or not.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.ParameterValues">
            <summary>
            Gets all the parameter values for the parameter.
            Returns an empty collection if there is no ParameterValueAttribute defined for this parameter in the custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Parameter.Occurrence">
            <summary>
            Gets or sets the geometric construction occurrence for which this parameter is defined.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.HandRail">
            <summary>
            HandRail class definition. Behavior of the HandRail class is customized through user
            attributes using generic property access.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TrafficEntity">
            <summary>
            Base class for traffic entities. This class provides generalization of all entities supporting
            human traffic.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.#ctor">
            <summary>
            Constructor for .NET to access this class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The object's new name.</param>
            <exception cref="T:System.ArgumentNullException">Name parameter is null.</exception>  
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">The IJNamedObject interface is not supported by given object.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            oStair.SetUserDefinedName("Stair Name")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds the specified child object to the parent.
            </summary>
            <param name="oChild">Child object.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">Unexpected failure while adding a system child.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim oChild As ISystemChild 
            oStair.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds the specified child object to the parent.
            </summary>
            <param name="oChild">Child object.</param>
            <exception cref="T:System.ArgumentNullException">Child object is null.</exception>
            <example>This is an example of the AddAssemblyChild method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim oChild As IAssemblyChild 
            oStair.AddAssemblyChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the given object using the specified transformation matrix.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:System.ArgumentNullException">oT4X4 parameter is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given T4X4.</exception>
            <example>This is an example of the Transform method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim matrix As New Matrix4X4() 
            matrix.SetIndexValue(12, 100R) 'Translate by 100m. 
            oStair.Transform(matrix) 
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Name">
            <summary>
            Gets the read-only name of the object.
            </summary>            
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">The IJNamedObject interface is not supported by given object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a stair, ladder, or handrail.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.SystemParent">
            <summary>
            Gets or sets the parent of the child object.
            </summary>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSystemParentException">Unexpected failure while getting the system parent.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">Unexpected failure while setting the system parent.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.SystemChildren">
            <summary>
            Gets a collection of the read-only system children of the parent object.  
            If there are no children, an empty collection will be returned.
            </summary>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SystemChildrenException">Unexpected failure while getting the system children.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.AssemblyChildren">
            <summary>
            Gets a read-only collection of the assembly children of the parent object.  
            If there are no children, an empty collection will be returned.   
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.AssemblyParent">
            <summary>
            Gets or sets the parent assembly of the child object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Range">
            <summary>
            Gets the read-only range box.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.WBSItemParents">
            <summary>
            Gets the read-only set of WBSItem parents for this object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.WBSProjects">
            <summary>
            Gets the read-only set of WBSProjects for this object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Part">
            <summary>
            Gets or sets the catalog part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">Unexpected failure while getting the catalog part.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">Unexpected failure while setting the catalog part.</exception>
            <exception cref="T:System.ArgumentNullException">The part occurrence object is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Sketch3D)">
            <summary>
            Creates a handrail by Sketch3D path.
            </summary>
            <param name="parentSystem">Parent system under which to create the handrail.</param>
            <param name="part">The handrail catalog part.</param>
            <param name="path">The handrail path.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the parent system is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the parent system object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised if the part is not a handrail catalog part.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while creatinga  handrail.</exception>
            <example>This is an example of how to create a handrail with the given Sketch3D path and catalog part under the parent system.
            <code lang="cs">
            Model plant = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel;
            
            //Create the Sketch3d path.
            SketchPoint sketchPoint1 = new SketchPoint(0.0, 0.0, 0.0);
            SketchPoint sketchPoint2 = new SketchPoint(2.0, 0.0, 0.0);
            LineFeature lineFeature = sketchPoint1.CreateLineFeature(sketchPoint2);
            Collection<![CDATA[<SketchPoint>]]> sketchPoints = new Collection<![CDATA[<SketchPoint>]]>() { sketchPoint1, sketchPoint2 };
            Sketch3D path = new Sketch3D(plant);
            path.SetSketchPoints(sketchPoints);
            
            //Get the HandRail catalog part.
            CatalogStructHelper catalogStructHelper = new CatalogStructHelper();
            Part handRailPart = (Part)catalogStructHelper.GetPart("TMTHandrail");
            
            HandRail handRail = new HandRail(plant.RootSystem, handRailPart, path);
            </code>
            <code lang="vb">
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            
            'Create the Sketch3d path.
            Dim sketchPoint1 As New SketchPoint(0.0, 0.0, 0.0)
            Dim sketchPoint2 As New SketchPoint(2.0, 0.0, 0.0)
            Dim lineFeature As LineFeature = sketchPoint1.CreateLineFeature(sketchPoint2)
            Dim sketchPoints As New Collection(Of SketchPoint) ()
            sketchPoints.Add(sketchPoint1)
            sketchPoints.Add(sketchPoint2)
            Dim path As New Sketch3D(plant)
            path.SetSketchPoints(sketchPoints)
            
            'Get the HandRail catalog part.
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim handRailPart As Part = DirectCast(catalogStructHelper.GetPart("TMTHandrail"), Part)
            
            Dim handRail As New HandRail(plant.RootSystem, handRailPart, path)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Creates a handrail by deriving the path from the given MemberPart.
            </summary>
            <param name="parentSystem">Parent system under which to create the handrail.</param>
            <param name="part">The handrail catalog part.</param>
            <param name="memberPartForPath">The MemberPart on which the handrail will be placed.</param>        
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the parent system is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the parent system object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberPartException">Raised if stand-alone MemberPart is used as path for placing a handrail.
                                                   <para>Raised if designed MemberPart is used as path for placing a handrail.</para>
                                                   <para>Raised if the MemberPart inclination angle is not within 0-60 degree range with respect to the Global X-axis.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised if the part is not a handrail catalog part.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while creating the handrail.</exception>
            <example>This is an example of how to create a handrail with the given Sketch3D path and catalog part under the parent system.
            <code lang="cs">
            Model plant = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel;
            
            //Create the MemberPart for path.
            CatalogStructHelper catalogStructHelper = new CatalogStructHelper();
            CrossSection crossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W", "W10x100");
            Material material = catalogStructHelper.GetMaterial("Steel - Carbon", "A");
            Position start = new Position(0.0, 0.0, 0.0);
            Position end = new Position(2.0, 0.0, 0.0);
            MemberSystem memberSystem = new MemberSystem(plant.RootSystem, start, end, crossSection, material, (int)MemberType.Beam, 5, 0.0, false);
            MemberPart memberPart = memberSystem.GetPart(MemberAxisEnd.Start);
            
            //Get the HandRail catalog part.
            Part handRailPart = (Part)catalogStructHelper.GetPart("TMTHandrail");
            
            HandRail handRail = new HandRail(plant.RootSystem, handRailPart, memberPart);
            </code>
            <code lang="vb">
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            
            'Create the MemberPart for path.
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W", "W10x100")
            Dim material As Material = catalogStructHelper.GetMaterial("Steel - Carbon", "A")
            Dim startPos As New Position(0.0, 0.0, 0.0)
            Dim endPos As New Position(2.0, 0.0, 0.0)
            Dim memberSystem As New MemberSystem(plant.RootSystem, startPos, endPos, crossSection, material, MemberType.Beam, 5, 0.0, False)
            Dim memberPart As MemberPart = memberSystem.GetPart(MemberAxisEnd.Start)
            
            'Get the HandRail catalog part.        
            Dim handRailPart As Part = DirectCast(catalogStructHelper.GetPart("TMTHandrail"), Part)
            
            Dim handRail As New HandRail(plant.RootSystem, handRailPart, memberPart)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Structure.Middle.HandRail)">
            <summary>
            Creates a handrail using an existing handrail.
            </summary>
            <param name="handRail">The handrail to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the handrail to be copied is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the handrail object to be copied.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given handrail object to be copied.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while creating a handrail.</exception>
            <example>This is an example of how to create HandRail with an existing HandRail.
            <code lang="cs">
            //Create a HandRail which will be copied.
            HandRail handRailToCopy;
            
            HandRail handRail = new HandRail(handRailToCopy);
            </code>
            <code lang="vb">
            'Create a HandRail which will be copied.
            Dim handRailToCopy As HandRail
            
            Dim handRail As New HandRail(handRailToCopy)
            </code>        
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.GetMemberConnectionAtEnd(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the associated FrameConnection or MemberSplitConnection at the specified end of the handrail.
            Returns null if the handrail is not created with MemberPart, or if the specified end of the handrail is not associated with any FrameConnection or MemberSplitConnection.
            </summary>
            <param name="axisEnd">The member axis end specifying whether to get the associated FrameConnection or MemberSplitConnection at the handrail start or end.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the argument enumerator is out of range.</exception>
            <returns>The associated FrameConnection or MemberSplitConnection at the specified end of the handrail.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.IsMemberPartInclinationBetween0To60(Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Determines whether the MemberPart inclination angle is in between 0-60 degree.
            </summary>
            <param name="memberPart">The MemberPart for HandRail path.</param>
            <returns>True if the MemberPart inclination angle is in between 0-60 degree; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.GetMemberConnection(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Structure.Middle.MemberAxisPortType)">
            <summary>
            Gets the member connection.
            </summary>
            <param name="memberPart">The member part.</param>
            <param name="axisPortType">Type of the axis port.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateSketchPointsForCurvedMember(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Creates the sketch points for curved member.
            </summary>
            <param name="connection">The connection.</param>
            <param name="memberPart">The member part.</param>        
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateStartSketchPointForCurvedMember(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.LogicalConnectionBase,Ingr.SP3D.Common.Middle.Position,System.Boolean,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.SketchPoint}@)">
            <summary>
            Creates the start sketch point for curved member.
            </summary>
            <param name="connection">The connection.</param>
            <param name="startConnection">The start connection.</param>
            <param name="start">The start.</param>
            <param name="isFirstCurveSegment">if set to <c>true</c> [is first curve segment].</param>
            <param name="sketchPoints">The sketch points.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateEndSketchPointForCurvedMember(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.LogicalConnectionBase,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Common.Middle.ICurve,System.Boolean)">
            <summary>
            Creates the end sketch point for curved member.
            </summary>
            <param name="connection">The connection.</param>
            <param name="endConnection">The end connection.</param>
            <param name="end">The end.</param>
            <param name="memberPart">The member part.</param>
            <param name="memberPartAxis">The member part axis.</param>
            <param name="isLastCurveSegment">if set to <c>true</c> [is last curve segment].</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateSketchPointsForLinearMember(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Creates the sketch points for linear member.
            </summary>
            <param name="connection">The connection.</param>
            <param name="memberPart">The member part.</param>        
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateHandRail(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Sketch3D)">
            <summary>
            Creates the HandRail.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="connection">The connection.</param>
            <param name="part">The part.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CleanSketchPointCollection(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.SketchPoint})">
            <summary>
            Cleans the sketch point collection.
            </summary>
            <param name="sketchPoints">The sketch points.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateSketchPoint(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.LogicalConnectionBase,System.Boolean)">
            <summary>
            Creates the sketch point.
            </summary>
            <param name="connection">The connection.</param>
            <param name="point">The point.</param>
            <param name="memberConnection">The end connection.</param>
            <param name="isParameter">if set to <c>true</c> [is parameter].</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.CreateSketchPoint(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Creates the sketch point.
            </summary>
            <param name="connection">The connection.</param>
            <param name="point">The point.</param>
            <param name="memberPart">The member part.</param>
            <param name="memberPartAxis">The member part axis.</param>
            <returns></returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.HandRail.Path">
            <summary>
            Read-only property to get the handrail path.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Unexpected failure while getting the Sketch3D path of a handrail.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.HandRail.COMClassString">
            <summary>
            Returns the class string corresponding to the Handrail COM class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs">
            <summary>
            SmartPlantStructure resource identifiers.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DEFAULT_RESOURCE">
            <summary>
            Structure localizer resource.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DEFAULT_ASSEMBLY">
            <summary>
            Structure localizer assembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidArguments">
            <summary>
            This exception is thrown when invalid arguments are passed to create a member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFactoryCreation">
            <summary>
            This exception is thrown when there is an unexpected failure while creating a member factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberCreation">
            <summary>
            This exception is thrown when there is an unexpected failure while creating the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjs">
            <summary>
            This exception is thrown when there is an error setting the related objects on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMultipleFCRelatedObjs">
            <summary>
            This exception is thrown when there cannot be two frame connections as related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRuleResult">
            <summary>
            This exception is thrown when a rule returned an unexpected result.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Axis property of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPhysicalAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PhysicalAxis property of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAxis">
            <summary>
            This exception is thrown when there is an unexpected failure in SetAxis method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSketch3D">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Sketch3D property of member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSketch3D">
            <summary>
            This exception is thrown when there is an unexpected failure while setting Sketch3D property of member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsMS">
            <summary>
            This exception is thrown when there is an unexpected failure in method GetEndPoints of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsMP">
            <summary>
            This exception is thrown when there is an unexpected failure in method GetEndPoints of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsMS">
            <summary>
            This exception is thrown when there is an unexpected failure in method SetEndPoints of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsMP">
            <summary>
            This exception is thrown when there is an unexpected failure in method SetEndPoints of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedObject2">
            <summary>
            Penetrated object must be a plate system to calculate height.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParts">
            <summary>
            This exception is thrown when there is an unexpected failure in GetParts method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMemberPart">
            <summary>
            This exception is thrown when there is an unexpected failure in GetPart method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPartsAtPosition">
            <summary>
            This exception is thrown when there is an unexpected failure in GetPartsAtPosition method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFrameConnection">
            <summary>
            This exception is thrown when there is an unexpected failure in FrameConnection method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSplitConnections">
            <summary>
            Unexpected failure while getting the split connections.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Matrix property  of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOrientationVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrientationVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBetaAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBetaAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMirror">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMirror">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMatrixAtPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetTypeCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTransformUnexpected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratingObject2">
            <summary>
            Penetrated object must be a StiffenerSystem or a ERSystem to calculate height above penetrated object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidObjType">
            <summary>
            This exception is thrown when there is an invalid object type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectionNotAPoint">
            <summary>
            This exception is thrown when the intersection between penetrating and penetrated is not a point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHeightAbovePenetratingObject">
            <summary>
            This exception is thrown when an unexpected error occurs while getting the height above penetrated object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberType">
            <summary>
            This exception is thrown when there is an invalid member type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrURetrieveObject">
            <summary>
            This exception is thrown when unable to retrieve the .NET object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectionNotAWire">
            <summary>
            This exception is thrown when the intersection is not a line.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUnexpected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAarg">
            <summary>
            This exception is thrown when there is an invalid null input argument.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGettingFactory">
            <summary>
            This exception is thrown when not able to getting the member factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreatingMember">
            <summary>
            This exception is thrown when failed to create member part using factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStandaloneParent">
            <summary>
            This exception is thrown when stand alone member cannot have a member system as a parent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonStandalonePart">
            <summary>
            This exception is thrown when the desired action cannot perform on a non-standalone member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCurvedPart">
            <summary>
            This exception is thrown when the desired action cannot perform on a curved member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonPrismaticPart">
            <summary>
            This exception is thrown when the desired action cannot perform on a non-prismatic member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCutbackSurface">
            <summary>
            This exception is thrown when the input surface is invalid as a cutback surface for this member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidObjectType">
            <summary>
            This exception is thrown when the object is of the wrong type to support the desired action.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonLinearAxis">
            <summary>
            This exception is thrown when the designed Member cannot support non-linear axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectionMemberSystemParent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParentSystemNullArg">
            <summary>
            This exception is thrown when invalid parentsystem argument passed to create a member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetMirror">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Mirror property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetMirror">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Mirror property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetBetaAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the BetaAngle property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetBetaAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the BetaAngle property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetOrientationVector">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the OrientationVector property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberFactory">
            <summary>
            This exception is thrown when failed to create member factory.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedSketch3DBuiltUp">
            <summary>
            This exception is thrown when built-up cross-section can not be used for creating member using Sketch3D.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetOrientationVector">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the OrientationVector property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoNameRule">
            <summary>
            This exception is thrown when there no name rule associated to the given object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemMoreThanTwoRelObjs">
            <summary>
            This exception is thrown because member system currently does not support more than two related objects at an end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPenetratingPartNotInRange">
            <summary>
            This exception is thrown because a penetrating part within the range of the penetrated object was not found.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelObjs">
            <summary>
            This exception is thrown if at least one related object not present at an end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsStartNoPos">
            <summary>
            This exception is thrown if related objects at start do not provide a unique position for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsEndNoPos">
            <summary>
            This exception is thrown if related objects at end do not provide a unique position for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsStartInvalidConstraint">
            <summary>
            This exception is thrown if related objects at start do not provide a valid constraint for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsEndInvalidConstraint">
            <summary>
            This exception is thrown if related objects at end do not provide a valid constraint for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjsStart">
            <summary>
            This exception is thrown if related objects at start can not be set on the frame connection of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjsEnd">
            <summary>
            This exception is thrown if related objects at end can not be set on the frame connection of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCSelRuleRelatedObjsStart">
            <summary>
            This exception is thrown if frame connection selection rule could not find a valid frame connection type for the given related objects at the start of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCSelRuleRelatedObjsEnd">
            <summary>
            This exception is thrown if frame connection selection rule could not find a valid frame connection type for the given related objects at the end of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidOrigMemberArg">
            <summary>
            This exception is thrown if original member system argument is not a valid member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsHasNull">
            <summary>
            This exception is thrown if related object collection has a null object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemberEnd">
            <summary>
            This exception is thrown if frame connection does not have a valid member end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLoads">
            <summary>
            This exception is thrown if unexpected failure while getting Loads property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReleases">
            <summary>
            This exception is thrown if unexpected failure while getting Releases property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddCutbackSurfaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddCutbackSurface">
            <summary>
            This exception is thrown if unexpected failure in AddCutbackSurface method of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAxisPort">
            <summary>
            Error raised when an unexpected error occurred while getting axis port at the given end of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointAtEnd">
            <summary>
            This exception is thrown if unexpected failure in GetPointAtEnd method of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectedParts">
            <summary>
            This exception is thrown if unexpected failure while getting ConnectedParts property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMemberSystem">
            <summary>
            This exception is thrown if unexpected failure while getting MemberSystem property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCutLength">
            <summary>
            This exception is thrown if unexpected failure while getting CutLength property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCardinalPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCardinalPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStandAlone">
            <summary>
            This exception is thrown if unexpected failure while getting StandAlone property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDesignedMember">
            <summary>
            This exception is thrown if unexpected failure while getting DesignedMember property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPrismatic">
            <summary>
            This exception is thrown if unexpected failure while getting Prismatic property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSection">
            <summary>
            Unexpected error occurred while getting the cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCrossSection">
            <summary>
            Unexpected error occurred while setting the cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFindPortFailed">
            <summary>
            This exception is thrown when failed to find the port on the given connectable from the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEnumPortsFailed">
            <summary>
            This exception is thrown when failed to enumerate the ports in the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRangeFailed">
            <summary>
            This exception is thrown when failed to get range of the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemberEndFailed">
            <summary>
            This exception is thrown when failed to get the member end from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPositionFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the position of the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemSysFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the MemberSystem property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCEndMemSysFailed">
            <summary>
            This exception is thrown when failed to get member systems connected at the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGlobalGetFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOGlobal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGlobalSetFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOGlobal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOLocalGetFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOLocal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOLocalSetFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOLocal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGetCPFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOCardinalPoint property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCInvalidWPOCP">
            <summary>
            This exception is thrown when invalid work point offset cardinal point being set on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOSetCPFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOCardinalPoint property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCValidateRelObjsFailed">
            <summary>
            This exception is thrown when unexpected failure encountered during validation of the related objects from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCGetRelObjsFailed">
            <summary>
            This exception is thrown when failed to get the related objects from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCGetPointOnFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the PointOn property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCExecuteSelRuleFailed">
            <summary>
            This exception is thrown when failed to execute selection rule on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPart">
            <summary>
            This exception is thrown when failed to set the root selector part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCExecuteSelRuleInvalid">
            <summary>
            This exception is thrown if execution of selection rule resulted in an invalid selection on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartNameGet">
            <summary>
            This exception is thrown if unexpected failure while getting the PartName property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartNameSet">
            <summary>
            This exception is thrown if unexpected failure while setting the PartName property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartGet">
            <summary>
            This exception is thrown if unexpected failure while getting the Part property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartSet">
            <summary>
            This exception is thrown if unexpected failure while setting the Part property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCTransform">
            <summary>
            This exception is thrown when failed to transform the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberType">
            <summary>
            This exception is thrown when the user tries to get a MemberType Codelist value which does not exist
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberCategory">
            <summary>
            This exception is thrown when the user tries to get a MemberTypeCategory Codelist value which does not exist
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrArea">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the property area of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrLength">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the property length of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPointOn">
            <summary>
            This exception is thrown when there is an unexpected failure while determining whether the input point is on the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCentroid">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the centroid of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAreaCentroidMomentsOfInertia">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the center, area, moment of inertia, and principle axes of a closed planar curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCS">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between curve and the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCC">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between this curve and the input curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCP">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between this curve and the input point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEndPoints">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the end points of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrForm">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the closure of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrScope">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the planarity of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrScopeN">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the scope and normal of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSelfIntersect">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the self intersections and overlaps of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectCS">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the intersection between curve and a surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectCC">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the intersection between this curve and another curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnections">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the connections of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlacingEndCutFeature">
            <summary>
            This exception is thrown when there is an unexpected failure while Placing EndCutFeature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionEdgesAtPlane">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Section Edges At given Plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionFaces">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Section Faces.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchingPlaneOrigin">
            <summary>
            This exception is thrown when there is an unexpected failure while determining SketchingPlane Origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrXAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining X-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrYAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Y-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrZAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Z-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOrigin">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCrossSectionClass">
            <summary>
            This exception is thrown when there is an unexpected failure while getting CrossSectionClass.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrKeyPointCoordinates">
            <summary>
            Unexpected error occurred while getting the key point coordinates.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNominalSectionSize">
            <summary>
            Unexpected error occurred while getting the nominal section size.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCardinalPoint">
            <summary>
            This exception is thrown when there is invalid cardinalPoint Set on the MemberSystem or MemberPart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPart">
            <summary>
            This exception is thrown when failed to get the root selector part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortIndex">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PortIndex.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PortType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystem">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectionsMemberPart">
            <summary>
            This exception is thrown when there is an an unexpected failure while getting the connections of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortGeometry">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the port geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnections">
            <summary>
            This exception is thrown when there is an unexpected failure while getting connections.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperatorId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting OperatorId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting OperationId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrContextId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting ContextId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting SectionId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPersistent">
            <summary>
            This exception is thrown when there is an unexpected failure while getting IsPersistent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTopologyProxyType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyProxyType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRange">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Range.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsConnectable">
            <summary>
            This exception is thrown when there is an unexpected failure while getting IsConnectable.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectableFacelet">
            <summary>
            This exception is thrown when there is an unexpected failure while getting ConnectableFacelet.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGeometryOperationNotSupported">
            <summary>
            This exception is thrown when the business object does not support this geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortPortTypeGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortPortTypeOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortTopologyGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortTopologyGeometryOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortContextGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContextGeometryOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFactoryObject">
            <summary>
            This exception is thrown when there is an unexpected failure while creating a factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaryOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Boundary offset of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundaryOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Boundary offset of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Type of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetWallType">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Type of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaximumHeight">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Maximum height
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMaximumHeight">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Maximum height
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReflect">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Reflect property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReflect">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Reflect property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVerticalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the VerticalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetVerticalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the VerticalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHorizontalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the HorizontalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetHorizontalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the HorizontalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Angle property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Angle property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCompositionPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Composition Part of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCompositionPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Composition Part of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCompositionLayers">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Composition Layers of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCompositionLayers">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Composition Layers of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReferenceLayer">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Reference Layer of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Thickness of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Thickness of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddSystemChild">
            <summary>
            This exception is thrown if an error is encountered while AddSystemChild is called on the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSystemChildren">
            <summary>
            This exception is thrown if an error is encountered while get SystemChildren is called on the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSystemParent">
            <summary>
            This exception is thrown if an error is encountered when getting SystemParent for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSystemParent">
            <summary>
            This exception is thrown if an error is encountered when setting SystemParent for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetActiveNameRule">
            <summary>
            This exception is thrown if an error is encountered when getting ActiveNameRule for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetActiveNameRule">
            <summary>
            This exception is thrown if an error is encountered when setting ActiveNameRule for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetName">
            <summary>
            This exception is thrown if an error is encountered when getting Name for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetName">
            <summary>
            This exception is thrown if an error is encountered when setting Name for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUserDefinedName">
            <summary>
            This exception is thrown if an error is encountered when getting UserDefinedName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetUserDefinedName">
            <summary>
            This exception is thrown if an error is encountered when setting UserDefinedName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRangeException">
            <summary>
            This exception is thrown if an error is encountered when getting Range for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSItemChildHelperObj">
            <summary>
            This exception is thrown if unexpected failure while getting WBSItemChildHelperObj for Wall.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSItemParents">
            <summary>
            This exception is thrown if unexpected failure while getting WBSItemParents for Wall.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSection for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCrossSectionWall">
            <summary>
            This exception is thrown if an error is encountered when setting CrossSection for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionTypeWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSectionType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionTypeNameWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSectionTypeName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectablePorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the connectable ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectedPorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the connected ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsConnected">
            <summary>
            This error is thrown when there is an unexpected failure when IsConnected is called. 
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWallSystem3D">
            <summary>
            This exception is thrown if an unexpected failure while trying to Create a WallSystem using Sketch 3D
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSupportPlane">
            <summary>
            This exception is thrown if an error is encountered when getting SupportPlane for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSupportPlane">
            <summary>
            This exception is thrown if an error is encountered when setting SupportPlane for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallParts">
            <summary>
            This exception is thrown if an error is encountered when getting WallParts for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPath">
            <summary>
            This exception is thrown if an error is encountered when getting Path for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPath">
            <summary>
            This exception is thrown if an error is encountered when setting Path for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaries">
            <summary>
            This error is raised if an unexpected failure while getting the boundaries.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundaries">
            <summary>
            This exception is thrown if an error is encountered when setting Boundaries for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContinuityType">
            <summary>
            This exception is thrown if an error is encountered when getting ContinuityType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetContinuityType">
            <summary>
            This exception is thrown if an error is encountered when setting ContinuityType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPriorityNumber">
            <summary>
            This exception is thrown if an error is encountered when getting PriorityNumber for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPriorityNumber">
            <summary>
            This exception is thrown if an error is encountered when setting PriorityNumber for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRun">
            <summary>
            This exception is thrown if an error is encountered when getting Run for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRun">
            <summary>
            This exception is thrown if an error is encountered when setting Run for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallSystem">
            <summary>
            This exception is thrown if an error is encountered when getting WallSystem for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallSystemFromRun">
            <summary>
            This exception is thrown if an error is encountered when getting WallSystem for WallRun
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsReference">
            <summary>
            This exception is thrown if unexpected failure while getting the IsRefrence property of the Layer
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetIsReference">
            <summary>
            This exception is thrown if unexpected failure while setting the IsRefrence property of the Layer
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerThickness of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerThickness of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerContinuity">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerContinuity of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerContinuity">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerContinuity of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerCatalogPart of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerCatalogPart of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerIndex">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerIndex of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterial">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Material of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMaterial">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Material of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterialType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the MaterialType of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterialGrade">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the MaterialGrade of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullStairObject">
            <summary>
            This exception is thrown when CreateStair method of the Stair Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullLadderObject">
            <summary>
            This exception is thrown when CreateLadder method of the Ladder Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTopSupport">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder top support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSideReference">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder side reference.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBottomSupport">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder bottom support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBottomSupport">
            <summary>
            This exception is thrown when setting the traffic entity BottomSupport.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTransformMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while transforming the geometry with the given transformation matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSystemChild">
            <summary>
            This exception is thrown when there is an unexpected failure while adding a system child.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSystemChildren">
            <summary>
            This exception is thrown when there is an unexpected failure while getting system children.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSysHelperObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSysChildHelperObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemChildHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullSysParentObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemParent object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSysParent">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the SystemParent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSysParent">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the SystemParent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNamedItemHelper">
            <summary>
            This exception is thrown when there is a null reference to the NamedItemHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSHierarchyHelper">
            <summary>
            This exception is thrown when there is a null reference to the WBSHierarchyHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullHandrailObject">
            <summary>
            This exception is thrown when Create method of the Handrail Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHandrailSketch3D">
            <summary>
            This exception is thrown when getting the Sketch3D path of a handrail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDBConnection">
            <summary>
            This exception is thrown when the connection cannot be obtained from the parent system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetNameTrafficEntity">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Name property for traffic entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetNameTrafficEntity">
            <summary>
            This exception is thrown when there is an unexpected failure while calling the SetUserDefinedName method for traffic entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullCatalogPartObject">
            <summary>
            This exception is thrown when GetPart method of the IPartOccurrence interface returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrProxyFromPart">
            <summary>
            This exception is thrown when calling the GetProxyFromPart method in the StructHelper class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrientation">
            <summary>
            This exception is thrown when setting the orientation of the Local Coordinate System.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrigin">
            <summary>
            This exception is thrown when setting the origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCatalogPartFromProxy">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Catalog Part from proxy.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefineStair">
            <summary>
            This exception is thrown when there is an unexpected failure while defining a Stair.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefineLadder">
            <summary>
            This exception is thrown when there is an unexpected failure while defining a Ladder.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputs">
            <summary>
            This exception is thrown when a wrong overloaded GetInputs method is called for a particular PlaneDefinitionType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStructPlaneFactory">
            <summary>
            This error is raised when a problem is encountered while creating the struct plane factory.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateStructPlane3D">
            <summary>
            This error is raised when a problem is encountered while creating the struct plane3D object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGeometryPattern">
            <summary>
            This error is raised when a problem is encountered while setting the geometry pattern on the plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPoints">
            <summary>
            This exception is thrown when plane creation points are collinear 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabIsAmbiguous">
            <summary>
            This exception is thrown when unexpected failure while trying to retrieve if the Slab is ambiguous
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSlabResolveAmbiguity">
            <summary>
            This exception is thrown when unexpected failure while trying to resolve the ambiguity of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabUnusedBoundaries">
            <summary>
            This exception is thrown when unexpected failure while getting the unused boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAmbiguousPatches">
            <summary>
            This exception is thrown when unexpected failure while getting the ambiguous patches of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSupportInfo">
            <summary>
            This exception is thrown when unexpected failure while getting the support of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSupportInfo">
            <summary>
            This exception is thrown when unexpected failure while setting the support of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComposition">
            <summary>
            This exception is thrown when unexpected failure while getting the composition of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetComposition">
            <summary>
            This exception is thrown when unexpected failure while setting the composition of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabType">
            <summary>
            This exception is thrown when unexpected failure while getting the Type of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabType">
            <summary>
            This exception is thrown when unexpected failure while setting the Type of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabFacePosition">
            <summary>
            This exception is thrown when unexpected failure while getting the Face Position of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabFacePosition">
            <summary>
            This exception is thrown when unexpected failure while setting the Face Position of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabLayers">
            <summary>
            This exception is thrown when unexpected failure while getting the Layers of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabLayers">
            <summary>
            This exception is thrown when unexpected failure while setting the Layers of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabBoundary">
            <summary>
            This exception is thrown when unexpected failure while getting the Boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabBoundary">
            <summary>
            This exception is thrown when unexpected failure while setting the Boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabReferenceLayer">
            <summary>
            This exception is thrown when unexpected failure while getting the reference layer of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalVolume">
            <summary>
            This exception is thrown when unexpected failure while getting the total volume of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetVolume">
            <summary>
            This exception is thrown when unexpected failure while getting the Net volume of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalSurface">
            <summary>
            This exception is thrown when unexpected failure while getting the Total Surface of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetSurface">
            <summary>
            This exception is thrown when unexpected failure while getting the Net Surface of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalProjectedArea">
            <summary>
            This exception is thrown when unexpected failure while getting the Total Projected Area of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetProjectedArea">
            <summary>
            This exception is thrown when unexpected failure while getting the Net Projected Area of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAngle">
            <summary>
            This exception is thrown when unexpected failure while getting the Angle of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabSlope">
            <summary>
            This exception is thrown when unexpected failure while getting the Slope of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabLowestElevationPoint">
            <summary>
            This exception is thrown when unexpected failure while getting the Lowest Elevation Point of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabHighestElevationPoint">
            <summary>
            This exception is thrown when unexpected failure while getting the Highest Elevation Point of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabBottomOfConcrete">
            <summary>
            This exception is thrown when unexpected failure while getting the Bottom Of Concrete of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTopOfConcrete">
            <summary>
            This exception is thrown when unexpected failure while getting the Top Of Concrete of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabThickness">
            <summary>
            This exception is thrown when unexpected failure while getting the Thickness of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabThickness">
            <summary>
            This exception is thrown when unexpected failure while setting the Thickness of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAssemblyConnections">
            <summary>
            This exception is thrown when failure while retrieving the Assembly Connection of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMethodNotSupported">
            <summary>
            This error is raised when a method is not supported on an object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPropertyNotSupported">
            <summary>
            This error is raised when a property is not supported on an object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullMaterialObject">
            <summary>
            This error is raised when getting the COM material object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ExecuteSelectionRuleError">
            <summary>
            This error is raised when there is an unexpected failure while executing the selection rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.NullCOMObjectError">
            <summary>
            This error is raised when COM object is null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetPartNameError">
            <summary>
            This error is raised when the PartName property fails to get the part name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetPartNameError">
            <summary>
            This error is raised when the PartName property fails to set the part name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportedObjectsError">
            <summary>
            This error is raised when the SupportedObjects property fails to get the supported objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportedObjectsError">
            <summary>
            This error is raised when the SupportedObjects property fails to set the supported objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportingObjectsError">
            <summary>
            This error is raised when the SupportingObjects property fails to get the supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportingObjectsError">
            <summary>
            This error is raised when the SupportingObjects property fails to set the supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DefinitionObjectError">
            <summary>
            This error is raised if the definition object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.FootingInputHelperObjectError">
            <summary>
            This error is raised if the Footing Input Helper object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComponentMaterial">
            <summary>
            This error is raised when unexpected error comes while getting the material.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetComponentMaterial">
            <summary>
            This error is raised when unexpected error comes while getting the material.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjectForFooting">
            <summary>
            This error is raised if an invalid input supported object is passed for creating the footing.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSingleFooting">
            <summary>
            This error is raised if input part does not support single part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneNotReqFooting">
            <summary>
            This error is raised if input part type which needs a supporting plane is passed to a constructor which does not have the supporting plane as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateEntity">
            <summary>
            This error is raised when failed to create an entity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateFooting">
            <summary>
            This error is raised when failed to create a footing.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneReqFooting">
            <summary>
            This error is raised if input part type which does not need a supporting plane is passed to a constructor which has a supporting plane as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportingObjectForFooting">
            <summary>
            This error is raised if an invalid supporting object is passes as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectInfo">
            <summary>
            This error is raised when failed to retrieve the information of the supported object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportingObjectInfo">
            <summary>
            This error is raised when failed to retrieve the information of the supporting object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateHelperClass">
            <summary>
            This error is raised when failed to create the helper class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCombinedFooting">
            <summary>
            This error is raised if input part does not support combined part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectCount">
            <summary>
            This error is raised if the input supported object collection has less than two objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartTypeForSupported">
            <summary>
            This error is raised if the input part is invalid for the supported objects passed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartTypeForSupporting">
            <summary>
            This error is raised if the input part is invalid for the supporting objects passed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SupportedObjValidationError">
            <summary>
            This error is raised if the validation for the supported object fails.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SupportingObjValidationError">
            <summary>
            This error is raised if the validation for the supporting object fails.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.PartValidationError">
            <summary>
            This error is raised if the validation for the part fails with the given supported and supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjectForEquipFoundation">
            <summary>
            This error is raised if an invalid input supported object is passed for creating an equipment foundation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportingObjectForEquipFoundation">
            <summary>
            This error is raised if an invalid supporting object is passed as input for creating an equipment foundation..
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.EquipFoundationInputHelperObjectError">
            <summary>
            This error is raised if the equipment foundation Input Helper object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportObjectsOnEquipFoundation">
            <summary>
            This error is raised if there is a problem encountered while getting the support objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportObjectsOnEquipFoundation">
            <summary>
            This error is raised if there is a problem encountered while setting the support objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRootSelName">
            <summary>
            This error is raised if an unexpected failure occur while getting the root selection name from the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefaultFndn">
            <summary>
            This error is raised if is a unexpected failure while getting the default foundation name from the foundation port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRootSelName">
            <summary>
            This error is raised if an unexpected failure occur while setting the root selection name on equipment foundation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectCountZero">
            <summary>
            This error is raised if the supported objects count is zero.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInfiniteGet">
            <summary>
            This error is raised if an unexpected failure occur while getting the Infinate property on Line Object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInfiniteSet">
            <summary>
            This error is raised if an unexpected failure occur while setting the Infinate property on Line Object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the Start Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the Start Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the End Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the End Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRootPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the Root Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRootPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the Root Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDirection">
            <summary>
            This error is raised if an unexpected failure occur while getting the Direction vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetDirection">
            <summary>
            This error is raised if an unexpected failure occur while getting the Direction vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceCentroid">
            <summary>
            This error is raised if an Unexpected failure while getting the centroid of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenSS">
            <summary>
            This error is raised if an Unexpected failure while determining the distance between Surface and the Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenPS">
            <summary>
            This error is raised if an Unexpected failure while determining the distance between point and the Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectSS">
            <summary>
            This error is raised if an Unexpected failure while determining the intersection between surface and a surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPointOnSurface">
            <summary>
            This error is raised if an Unexpected failure while determining whether the input point is on the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceScopeN">
            <summary>
            This error is raised if an Unexpected failure while determining the scope and normal of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceuForm">
            <summary>
            This error is raised if an Unexpected failure while determining the uForm of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfacevForm">
            <summary>
            This error is raised if an Unexpected failure while determining the vForm of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneAddBoundary">
            <summary>
            This error is raised if an Unexpected failure while adding boundary to a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneAddHole">
            <summary>
            This error is raised if an Unexpected failure while adding hole to a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneBoundaryCount">
            <summary>
            This error is raised if an Unexpected failure while getting the boundary count of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetBoundary">
            <summary>
            This error is raised if an Unexpected failure while getting the boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetNormal">
            <summary>
            This error is raised if an Unexpected failure while getting the normal of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetNormal">
            <summary>
            This error is raised if an Unexpected failure while setting the normal of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveAllBoundaries">
            <summary>
            This error is raised if an unexpected failure while removing all boundaries.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneRemoveBoundary">
            <summary>
            This error is raised if an Unexpected failure while removing a boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetReversed">
            <summary>
            This error is raised if an Unexpected failure while getting the reversed flag of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetReversed">
            <summary>
            This error is raised if an Unexpected failure while setting the reversed flag of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetRootPoint">
            <summary>
            This error is raised if an Unexpected failure while getting the root point of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetRootPoint">
            <summary>
            This error is raised if an Unexpected failure while setting the root point of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetBoundaries">
            <summary>
            This error is raised if an Unexpected failure while setting the boundaries of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetBoundary">
            <summary>
            This error is raised if an Unexpected failure while setting a boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetUDirection">
            <summary>
            This error is raised if an Unexpected failure while setting the UDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetUDirection">
            <summary>
            This error is raised if an Unexpected failure while getting the UDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrServerContext">
            <summary>
            This exception is thrown when Unexpected error while instantiating the ServerContext.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrJContext">
            <summary>
            This exception is thrown when failed to get the JContext.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGettingOLEPath">
            <summary>
            This exception is thrown when failed to get the OLE_SERVER Path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCrossSectionServices">
            <summary>
            This exception is thrown when failed to instantiating CrossSectionServices.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProfiles">
            <summary>
            This exception is thrown when failed to get the profiles.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCardinalPoint">
            <summary>
            This exception is thrown when failed to get the cardinal point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMathMatrix">
            <summary>
            This exception is thrown when failed to instantiate Matrix object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrComputeTransform">
            <summary>
            This exception is thrown when failed to compute transform for the given projection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSurfaces">
            <summary>
            This exception is thrown failed to create surfaces.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDefinitionParameters">
            <summary>
            Unexpected error while getting the symbol definition parameters.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGeometryFactory">
            <summary>
            This exception is thrown when error in instantiating GeometryFactoryClass.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateBySingleSweepWCapsOpts">
            <summary>
            This exception is thrown when error in CreateBySingleSweep.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateByOffset">
            <summary>
            This exception is thrown when error in CreateByOffset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProjectionSurfacesFromCircle">
            <summary>
            This exception is thrown when error in CreateByOffset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartSetNotSupported">
            <summary>
            This error is raised when user is trying to set new part on FoundationComponent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCardinalPointDelta">
            <summary>
            Unexpected error occurred while getting the distance of the cardinal point from another cardinal point in u-v space.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetWCG">
            <summary>
            This error is raised while trying to set weight and center of gravity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaceCrossSectionOccurrence">
            <summary>
            This error is raised while trying to place cross-section occurrence in model.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetControlFlags">
            <summary>
            This error is raised while trying to set control flags.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelObjsStartOverConstained">
            <summary>
            Related objects at start collection are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelObjsEndOverConstained">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortMultiplePorts">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortCreation">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPosition">
            <summary>
            Unexpected failure while getting the position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPointAtDistanceAlong">
            <summary>
            Unexpected failure while determining the point at given distance along the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEvaluatePoint">
            <summary>
            Unexpected failure while evaluating the point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetVDirection">
            <summary>
            This error is raised if an Unexpected failure while getting the VDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameter">
            <summary>
            Unexpected failure while determining the U and V parameters.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetSketch3D">
            <summary>
            Cannot set Sketch3D object on linear member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStandAloneMemberParent">
            <summary>
            Cannot set Sketch3D object on linear member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoIntersectPointCC">
            <summary>
            Unable to find the intersecting point between Curve on Curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoIntersectPointCS">
            <summary>
            Unable to find the intersecting point between Curve on Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFacePositionMapping">
            <summary>
            Unable to map COM SlabFacePosition to .NET FacePosition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelatedObjsToDisconnectAtStartFC">
            <summary>
            No Related objects on start frame connection exists to disconnect.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelatedObjsToDisconnectAtEndFC">
            <summary>
            No Related objects on end frame connection exists to disconnect.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsDisconnectionStart">
            <summary>
            Unable to disconnect the related objs on start frame connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsDisconnectionEnd">
            <summary>
            Unable to disconnect the related objs on end frame connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStructRoot">
            <summary>
            Unable to get Catalog StructRoot object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCSOccObject">
            <summary>
            Unable to create occurrence object from the given cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidTypeCategory">
            <summary>
            Invalid TypeCategory  passed for the member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidType">
            <summary>
            Invalid Type passed for the member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetSplitType">
            <summary>
            Invalid call to the set method for split type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInputObjects">
            <summary>
            Unable to get the input objects from split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSplitMemberConnection">
            <summary>
            Unable to create split member connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddSplitter">
            <summary>
            Unable to get the Helper object from Split member connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrValidateParents">
            <summary>
            Error while validating the input objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetParents">
            <summary>
            Unable to set the parent objects on SplitMemberConnection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSplitParentStatus">
            <summary>
            Unable to set the Split Status on MemberConnection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetPosition">
            <summary>
            Failed to get the position of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetMemberSplitType">
            <summary>
            Failed to get the member split type of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCSetMemberSplitType">
            <summary>
            Failed to set the member split type of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetParents">
            <summary>
            Failed to get the parents of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSketchingPlane">
            <summary>
            Failed to create sketching plane for the Slab based on the given plane definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotPointOn">
            <summary>
            This exception is thrown when the member system is not point-on.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnMemberEnd">
            <summary>
            This exception is thrown when failed to get the point-on member end from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnMemberEnd">
            <summary>
            This exception is thrown when failed to set the point-on member end in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnPositionRule">
            <summary>
            This exception is thrown when failed to get the point-on position rule from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnPositionRule">
            <summary>
            This exception is thrown when failed to set the point-on position rule in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnRatio">
            <summary>
            This exception is thrown when failed to get the point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnRatio">
            <summary>
            This exception is thrown when failed to set the point-on ratio value in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSetPointOnRatio">
            <summary>
            This exception is thrown when invalid point-on ratio value passed for this frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnDistance">
            <summary>
            This exception is thrown when failed to get the point-on distance value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnDistance">
            <summary>
            This exception is thrown when failed to set the point-on distance value in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSetPointOnDistance">
            <summary>
            This exception is thrown when invalid point-on distance value passed for this frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnLocation">
            <summary>
            This exception is thrown when member system is not point-on.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPointOnMemberEnd">
            <summary>
            This exception is thrown when unexpected member end rule found in frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPointOnPositionRule">
            <summary>
            This exception is thrown when unexpected point-on position rule found in frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnDistanceRatio">
            <summary>
            This exception is thrown when failed to get the point-on distance or point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMeasurePointOnDistance">
            <summary>
            This exception is thrown when failed to measure the point-on distance value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMeasurePointOnRatio">
            <summary>
            This exception is thrown when failed to measure the point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCodeListTableName">
            <summary>
            This exception is thrown when failed to get ToDo record Codelist table name from given business object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set end points on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to get end points on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnPositionRuleOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on position rule if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnMemberEndOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on member end if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnLocationOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on location if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnDistanceOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on distance if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnRatioOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on ratio if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullSketch3dOnCurvedMemberSystem">
            <summary>
            This error is raised when the sketch points of a curved member system cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncompatibleSketch3dPathAtStart">
            <summary>
            This error is raised when the member system end point is the same as the start of the related object position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncompatibleSketch3dPathAtEnd">
            <summary>
            This error is raised when the member system start position is the same as the end of the related object position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReference">
            <summary>
            This error is raised when unexpected failure in getting reference object from proxy object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetClipSurfaceFromPlanes">
            <summary>
            This error is raised when unexpected failure in getting the clip surfaces from planes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMixedTypeSupportedObjects">
            <summary>
            This exception is thrown when supported object collection contain points and equipments together.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEmptySketchPointCollOnCurvedMemberSystem">
            <summary>
            This exception is thrown when sketch points could not be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjCountForEquipFndn">
            <summary>
            This exception is thrown when supported object collection contains more than one point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWidthAttribMissing">
            <summary>
            A required attribute, Width, is missing on the Cross Section. Please select another Cross Section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDepthAttribMissing">
            <summary>
            A required attribute, Depth, is missing on the Cross Section. Please select another Cross Section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartXRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartXRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartYRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartYRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartZRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartZRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndXRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndXRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndYRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndYRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndZRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndZRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartMemberRelease">
            <summary>
            Error message displayed when there is an exception thrown while getting the start member release on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndMemberRelease">
            <summary>
            Error message displayed when there is an exception thrown while getting the end member release on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectMemberRelease">
            <summary>
            Error message displayed when setting the struct fixity on a member part and the value is not Free (0) or Fixed (1).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetOutwardNormal">
            <summary>
            Unable to set the outward normal to the given plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSurface">
            <summary>
            This operation is only supported for persistent geometries.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedByFoundationComponent">
            <summary>
            Error raised when unsupported property/method is called.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.InvalidRootSelector">
            <summary>
            Error raised when invalid root selector passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.CreateAssemblyConnectionError">
            <summary>
            Error raised when unexpected error occurred while creating assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.InvalidFrameConnectionForAC">
            <summary>
            Error raised when a valid catalog part could not be selected by the selector rule for the given frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.InvalidConnectionErr">
            <summary>
            Error raised when connection other than frame connection or member split connection passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateReferencesCollection">
            <summary>
            Error raised when an unexpected error occurred while creating references collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRelationsCollection">
            <summary>
            Error raised when an unexpected error occurred while getting relations collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCollectionHelperItem">
            <summary>
            Error raised when an unexpected error occurred while getting item from collection helper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveAllArgumentFromRefCollection">
            <summary>
            Error raised when an unexpected error occurred while removing all arguments from references collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveReferencesCollection">
            <summary>
            Error raised when an unexpected error occurred while removing references collection from collection helper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddReferencesCollection">
            <summary>
            Error raised when an unexpected error occurred while adding references collection to collection helper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddRelationship">
            <summary>
            Error raised when an unexpected error occurred while adding new relation with references collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddPortToStructConnection">
            <summary>
            Error raised when an unexpected error occurred while adding port to the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReferencesCollectionArgumentCount">
            <summary>
            Error raised when an unexpected error occurred while getting references collection argument count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReferencesCollectionArgument">
            <summary>
            Error raised when an unexpected error occurred while setting references collection argument.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberSplitConnection">
            <summary>
            Error raised when an unexpected error occurred while an invalid member split connection passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSOConnectionHelper">
            <summary>
            Error raised when an unexpected error occurred while getting smart occurrence connection helper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParentsFromMemberSplitConnection">
            <summary>
            Error raised when an unexpected error occurred while getting parents from from member split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSelectionRuleDefinition">
            <summary>
            Error raised when an unexpected error occurred while getting selection rule definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortsFromConnection">
            <summary>
            Error raised when an unexpected error occurred while getting ports from connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemovePortFromConnection">
            <summary>
            Error raised when an unexpected error occurred while removing port from connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAssemblyConnectionInputs">
            <summary>
            Error raised when an unexpected error occurred while unable to get proper assembly connection part with the passed in inputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateObject">
            <summary>
            Error raised when an unexpected error occurred while creating object using progID.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetValidateObjects">
            <summary>
            Error raised when an unexpected error occurred while getting valid objects from assembly connection input helper.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSmartItemDefinition">
            <summary>
            Error raised when an unexpected error occurred while getting the smart item definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRootSelection">
            <summary>
            Error raised when an unexpected error occurred while setting the root selection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectionExists">
            <summary>
            Error raised when a connection is already exist at the passed in inputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUnexpectedErrorForAC">
            <summary>
            Error raised when an unexpected error happens during the validation of the inputs to create an assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidTypeOfObjectForAC">
            <summary>
            Error raised when an invalid type of objects found during the validation of the inputs to create an assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBadNumberOfObjectsForAC">
            <summary>
            Error raised when invalid number of objects found during the validation of the inputs to create an assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInconsistentRelationsForAC">
            <summary>
            Error raised when inconsistent relation between the inputs found during the validation of the inputs to create an assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateObjectForAC">
            <summary>
            Error raised when duplicate input objects found during the validation of the inputs to create an assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSplitConnHasNoResults">
            <summary>
            Error raised when can not get a unique member part for the assembly connection as the given split connection does not result in a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberSplitType">
            <summary>
            Error raised when the passed in member split connection is created by SplitNone as MemberSplitType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoSCParentExist">
            <summary>
            Error raised when there are no parents exist for member split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidParent">
            <summary>
            Error raised when invalid parent system passed in to create assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundedPortNotfromRolledMember">
            <summary>
            Error raised if invalid bounded port. Bounded port should be from a rolled memberPart. And it should not be from a sketched/ curved member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundingPort">
            <summary>
            Given bounding port should have an overlapping geometry with the bounded part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundedBoundingPort">
            <summary>
            Error raised if unexpected error occour while setting bounded and bounding ports.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrLoadMarineAssembly">
            <summary>
            Error raised if unexpected error occour while loading the marine assembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTrimSurfacePartGeometricCondition">
            <summary>
            Error raised if unexpected error occour while trimming the bounded part surface..
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundingPortType">
            <summary>
            Error raised when passed in bounding port other than face port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPatternOrientation">
            <summary>
             pattern orentation angles should be one of the following values 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPileLength">
            <summary>
            Length should be greater than zero
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidNoofPiles">
            <summary>
             Required piles in X or Y direction should be atleast one
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPileSurface">
            <summary>
             supported surface should belong to Footing, Foundation,slab and Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEmptyPositionColl">
            <summary>
            start position collection should contain at least one position
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidEdgeClearance">
            <summary>
            Edge clearance should be greater than or equal to zero. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidFeatureInputs">
            <summary>
            Could not find valid part under given root selection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedByFeature">
            <summary>
            Error raised when unsupported property/method is called.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidFeatureType">
            <summary>
            Error raised when invalid feature type passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMethodNotAvailable">
            <summary>
            Error raised when requested method is not available.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidDistanceAlong">
            <summary>
            Error raised when the passed in distance along is not within the edge provided.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidInputLocation">
            <summary>
            Error raised when the passed in location point cannot be projected on the given edge port
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPart">
            <summary>
            Error raised when the passed in part is not one of the many available parts under the smart class selected by the rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUserCommands">
            <summary>
            Error raised when unexpected error occurred while getting user commands from selection rule definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUserCommand">
            <summary>
            Error raised when unexpected error occurred while getting user command by providing command ID.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUserCommandSource">
            <summary>
            Error raised when unexpected error occurred while getting user command source.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCollectionOfAttributes">
            <summary>
            Error raised when unexpected error occurred while getting item from the attribute collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetItem">
            <summary>
            Error raised when unexpected error occurred while getting item from the attribute collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAttributeValue">
            <summary>
            Error raised when unexpected error occurred while setting attribute value.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSmartOccurrenceUpdate">
            <summary>
            Error raised when unexpected error occurred while updating smart occurrence.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPartName">
            <summary>
            Error raised when failed to get the part with the passed in part name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidEdgePortType">
            <summary>
            Error raised when passed in edge port not a curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidIntersectingPortType">
            <summary>
            Error raised when passed in intersecting port not a surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidRootSelector">
            <summary>
            Error raised when invalid root selector string passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRootSmartClassName">
            <summary>
            Error raised when an unexpected error occurred while getting root smart class name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetFeatureParentObjects">
            <summary>
            Error raised when unable to set the parent object on the feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetFeatureParentObjects">
            <summary>
            Error raised when unable to get the parent object on the feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectFeatureType">
            <summary>
            Error raised when a property or method accessed for invalid feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectEdgeFeatureConstructionMethod">
            <summary>
            Error raised when a property or method accessed for invalid edge feature construction method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectFeatureTypeForConstruction">
            <summary>
            Error raised when given feature type is invalid for the construction of feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupported">
            <summary>
            Error raised when while accessing incompatible members.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetFeatureType">
            <summary>
            Unable to get the feature code list value
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidStructFeatureType">
            <summary>
            Invalid feature type has been returned.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSymbolInputs">
            <summary>
            Unable to get the inputs from the symbol.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSymbolDefinition">
            <summary>
            Unable to get the symbol definition from the symbol.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSymbolDefInputs">
            <summary>
            Unable to get the symbol inputs from the symbol definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundedPortForTrim">
            <summary>
            The bounded object should be MemberPartAxisPort
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidObjectsForTrim">
            <summary>
            The input objects are not valid for the given root selector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSketchingPlane">
            <summary>
            Error raised when an unexpected error occurred while getting the sketching plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSketchingPlane">
            <summary>
            Error raised when an unexpected error occurred while setting the sketching plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAlign">
            <summary>
            Error raised when an unexpected error occurred determining whether the axis of the member system is aligned or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAlign">
            <summary>
            Error raised when an unexpected error occurred while aligning the axis of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetAlign">
            <summary>
            Error raised when tried to align the axis of the curve member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContourType">
            <summary>
            Error raised when an unexpected error occurred while getting the contour type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRepresentationName">
            <summary>
            Unexpected failure while getting the representation from the symbol definition
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBindOutput">
            <summary>
            Unexpected failure while getting the representation from the symbol definition
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefinitionCollection">
            <summary>
            Unable to create the definition collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDefinitionByProgID">
            <summary>
            Unable to get the symbol definition from the progID.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSymbol">
            <summary>
            Unable to create the symbol.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReferencesCollection">
            <summary>
            Unexpected error occurred while setting the references collection on symbol.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUpdateSymbolDefinition">
            <summary>
            Unexpected error occurred while updating the symbol definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSymFileName">
            <summary>
            Unexpected failure while getting the representation from the symbol definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMemberFeatures">
            <summary>
            Raised when an unexpected error occurred while getting the features from member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSketch2dDefinition">
            <summary>
            Raised when an unexpected error occurred while getting the Sketch2dDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSymbolFromContour">
            <summary>
            Raised when an unexpected error occurred while getting the symbol from the contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupportedForOpening">
            <summary>
            Error raised when accessing incompatible members on opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundariesCount">
            <summary>
            Error raised when while boundary collection has invalid number of objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedPortType">
            <summary>
            Error raised when penetrated port is other than face port for opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedPortConnectableForOpening">
            <summary>
            Error raised when penetrated port connectable is other than a member part or a wall part or a slab or a generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCatalogForOpening">
            <summary>
            Error raised when the catalog is invalid for opening, unable to get structural root or structural hierarchy.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundaryObjectType">
            <summary>
            Error raised when boundary object type is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundaryObject">
            <summary>
            Sketching plane is orthogonal to the given boundary plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSketchingPlane">
            <summary>
            Error raised when sketching plane object is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedObjectForOpening">
            <summary>
            Error raised when penetrated object is other than a member part or a wall part or a slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPlaneDefinitionType">
            <summary>
            Error raised when the sketching plane type is other than coincident.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.CreateStructCutoutContourError">
            <summary>
            Error raised when unexpected error occurred while creating struct cutout contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.CreateOpeningTypeError">
            <summary>
            Error raised when unexpected error occurred while creating opening type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOperationPattern">
            <summary>
            Error raised when unexpected error occurred while getting the operation pattern.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOperationPattern">
            <summary>
            Error raised when unexpected error occurred while setting the operation pattern.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.CreateStructRootContourError">
            <summary>
            Error raised when unexpected error occurred while creating struct root contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetStructRootContourSupportError">
            <summary>
            Error raised when unexpected error occurred while setting support of struct root contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetStructRootContourParentsError">
            <summary>
            Error raised when unexpected error occurred while setting parents of struct root contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreatePortFaceSelectorEntity">
            <summary>
            Error raised when unexpected error occurred while creating port face selector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.FindEquivalentPortError">
            <summary>
            Error raised when unexpected error occurred while getting port before cutout.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPlaneGenerationAEProperties">
            <summary>
            Error raised when unexpected error occurred while setting the plane generation active entity properties.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOpeningInputContour">
            <summary>
            Unexpected error occurred while getting the contour from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOpeningSupport">
            <summary>
            Unexpected error occurred while getting the support object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCuttingLimit">
            <summary>
            UserDefined cannot be set with this property.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetThroughNextCuttingLimit">
            <summary>
            ThroughNext is applicable only for openings on member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOpeningCuttingDepth">
            <summary>
            Unexpected error occurred while setting the cutting depth value for the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOpeningCuttingDepth">
            <summary>
            Unexpected error occurred while getting the cutting depth value from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOpeningCuttingDepthValue">
            <summary>
            Cutting depth value should be more than zero.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOpeningAttributes">
            <summary>
            Unexpected error occurred while getting attribute collection from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOpeningContourParents">
            <summary>
            Unexpected error occurred while getting the parents from the opening contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOpeningBoundaries">
            <summary>
            Cannot set boundaries for the opening with sketched contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOpeningGeometry">
            <summary>
            Unexpected error occurred while getting the geometry from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPlaneGenerationAEProperties">
            <summary>
            Unexpected error occurred while getting the plane type from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOpeningTypeRelation">
            <summary>
            Unexpected error occurred while getting opening type relation from the opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCuttingLimitType">
            <summary>
            Unexpected error occurred while setting cutting limit type for this opening.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetDescriptionError">
            <summary>
            This error is raised when there is an unexpected failure while getting the Description.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetDescriptionError">
            <summary>
            This error is raised when there is an unexpected failure while setting the Description.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSymbolOutputsByRepresentationName">
            <summary>
            Error raised when unable to retrieve the symbol outputs with the given representation name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchingPlane">
            <summary>
            Unable to retrieve the sketching plane from the contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFaceTypesNotFound">
            <summary>
            Error raised when the section face types could not be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotGetExtendedLatSurface">
            <summary>
            Error getting extended lateral surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidNameRule">
            <summary>
            Error raised when invalid name rule passed in.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSketchingPlaneConnectable">
            <summary>
            Error raised when sketching plane of sketch2d definition is not from penetrated object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWireBodyProerties">
            <summary>
            Error raised if unexpected error while getting the properties of sketched contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchIsNotClosed">
            <summary>
            Error raised if the input sketch is not a closed contour. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchIsSelfIntersecting">
            <summary>
            Error raised if the input sketch is a self-intersecting contour. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetNormalFromPlane">
            <summary>
            Error raised if unexpected failure occurs while getting the plane normal.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCurveAlongVectorOnToSurface">
            <summary>
            Error raised if the sketched contour curve fails to project on to the plate system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchNotProjected">
            <summary>
            Error raised if the sketched contour could not be projected on to the penetrated object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStopComputeAtObject">
            <summary>
            Error raised if unexpected error occurred while applying stop during compute of a object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUpdateObject">
            <summary>
            Error raised if unexpected error occurred while updating a object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrClearStops">
            <summary>
            Error raised if unexpected error occurred while clearing the compute stop which applied before compute.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoSketchContour">
            <summary>
            Error raised if unable to get the sketch contour from the given sketch2d definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoACForSplitNone">
            <summary>
            Error raised if no assembly connection content available to support the split connection of given type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.NoCatalogPartFoundError">
            <summary>
            Error raised if no catalog part was selected by the selector rule with the given root selector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupportedForAssemblyConnection">
            <summary>
            Error raised when accessing incompatible members on assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEquipmentFoundationPart">
            <summary>
            Error raised when setting an invalid catalog part for equipment foundation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFootingPart">
            <summary>
            Error raised when setting an invalid catalog part for footing.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOpeningsFromParts">
            <summary>
            Unable to get the openings from part as the part is null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoActivePlantConnection">
            <summary>
            Unable to get the active model database connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedObject1">
            <summary>
            Penetrated object must be a member part or a wall part or a slab or a generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSketchingPlaneType">
            <summary>
            Sketching plane must be created with coincident method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGenericPlatePartMaterial">
            <summary>
            Unexpected failure while getting the material of the generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGenericPlatePartMaterial">
            <summary>
            Unexpected failure while setting the material of the generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGenericPlatePartType">
            <summary>
            Unexpected failure occurs while getting the generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGenericPlatePartType">
            <summary>
            Unexpected failure occurs while setting the generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGenericPlatePartType">
            <summary>
            Invalid generic plate part type value.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGenericPlatePartCategory">
            <summary>
            Unexpected failure occurs while getting the generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGenericPlatePartCategory">
            <summary>
            Unexpected failure occurs while setting the generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGenericPlatePartCategory">
            <summary>
            Invalid generic plate part category value.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGenericPlatePartThickness">
            <summary>
            Unexpected failure occurs while getting the generic plate part thickness.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGenericPlatePartThickness">
            <summary>
            Unexpected failure occurs while setting the generic plate part thickness.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidThickness">
            <summary>
            Invalid thickness value.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParentSystemConnection">
            <summary>
            Database connection can not be obtained from the given parent system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.CreateGenericPlatePartError">
            <summary>
            Unexpected error occurred while creating generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInput">
            <summary>
            Unexpected error occurred while getting the input by providing index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidBoundingPortState">
            <summary>
            Bounded object could not be trimmed by the given bounding geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInterfaceNotFound">
            <summary>
            The given interface does not exist in the metadata.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRoleNameNotFound">
            <summary>
            The given role name does not exist in the metadata.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidRelation">
            <summary>
            No relation exist in the metadata with combination of InterfaceName:RoleName.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInterfaceNotSupported">
            <summary>
            If the given interface is not supported by the business object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOtherSideNotRefColl">
            <summary>
            The object on the other end of the relation must be a reference collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupported1">
            <summary>
            The given object does not support this operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFindOperation">
            <summary>
            Unexpected failure while getting the geometry operations performed on the business object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPenetratedPortStateOpening">
            <summary>
            Opening could not be created at the given penetrated geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicatePlateSystemBoundaries">
            <summary>
            Boundary collection has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAuxiliaryPortExistInBoundedPorts">
            <summary>
            The given auxiliary port already exists as a bounded port on the assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAuxiliaryPortExistInBoundingPorts">
            <summary>
            The given auxiliary port already exists as a bounding port on the assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAuxiliaryPortExistInAuxiliaryPorts">
            <summary>
            The given auxiliary port already exists as an auxiliary port on the assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateAuxiliaryPorts">
            <summary>
            Auxiliary ports collection has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAuxiliaryPortState">
            <summary>
            Auxiliary port could not be added if it is a late binding port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAuxiliaryPortType">
            <summary>
            Given auxiliary port should be a face port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAuxiliaryPortConnectable">
            <summary>
            Given auxiliary port’s connectable is not valid. Auxiliary pots must be from a non-split detailed part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoIntersectionExist">
            <summary>
            No intersection or overlapping geometry exists between auxilary port and primary port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAuxiliaryPortAlreadyConnectedWithPrimaryPort">
            <summary>
            Auxiliary port is already connected with primary port of the assembly connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateBoundaries">
            <summary>
            Boundary collection has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateCustomInputs">
            <summary>
            Custom input collection has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCardinalPointDeltaAlongPosition">
            <summary>
            Unexpected error occurred while getting the distance of the cardinal point from another cardinal point in u-v space at the given position along the profile part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRelatedPort">
            <summary>
            Unexpected failure occurs while getting the related port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAccessParentSystem">
            <summary>
            Do not have permission to access or modify the parent system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidApprovalStatusParentSystem">
            <summary>
            The parent system is not in working status.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullElementInCollection">
            <summary>
            Collection has null element.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateElementInCollection">
            <summary>
            Collection has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCardinalPointOffsets">
            <summary>
            Unexpected failure while getting the cardinal point offset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToAccessSymFileOrMissingSymFile">
            <summary>
            The .sym file associated with the given cross section is missing or not accessible on the symbol share.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrZeroBoundariesCount">
            <summary>
            Boundary collection count is zero.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMissingSideReference">
            <summary>
            Side reference is required since the top edge is not a closed curve or arc.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSideReferenceNotNeeded">
            <summary>
            Side reference is not required as it makes overconstraint since the top edge is a closed curve or arc.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSideAndTopAreSame">
            <summary>
            Side reference and Top support are same.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportsNotIntersecting">
            <summary>
            Supports are not intersecting
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBottomSupportNotASurface">
            <summary>
            Bottom support should be a plane or surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTopSurfaceNotPerpendicularToBottomSurface">
            <summary>
            Since topSupport is a surface, it should be perpendicular to the given bottom support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOnBottomPlane">
            <summary>
             is on the bottom support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBelowBottomPlane">
            <summary>
             is below the bottom support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPartClass">
            <summary>
            Unable to retrieve parent part class from part $1.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParentPartClass">
            <summary>
            Unable to retrieve parent part class from part class $1.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSelectionRuleAnswer">
            <summary>
            Unable to retrieve answer to selection rule question $1.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSelectionRuleInterface">
            <summary>
            Unable to retrieve selection rule interface for part class $1.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAvailableSelections">
            <summary>
            Unable to retrieve available selection rule selections for part class $1.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoQuestionFound">
            <summary>
            Question does not exist on any part class on this part's selection hierarchy.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoParameterFound">
            <summary>
            Parameter does not exist on this part's parameter rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSelectionRuleInterface1">
            <summary>
            Unable to retrieve selection rule interface for this part's selection hierarchy.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidEdgeIdToChamfer">
            <summary>
            Passed in edgeIdToChamfer is not found on the feature edges.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidChamfer">
            <summary>
            The chamfer feature is not created using profilePart's end cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrChamferOnMember">
            <summary>
            Chamfer at end cut on member is not supported currently.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidInputFeatureType">
            <summary>
            The end cut type passed in is neither a web cut nor a flange cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAuxiliaryPorts">
            <summary>
             Error code to let the caller of the AuxiliaryPorts propety know that there was an exception raised while attempting to get the auxiliary ports from a member connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAuxiliaryPorts">
            <summary>
             Error code to let the caller of the AuxiliaryPorts propety know that there was an exception raised while attempting to set the auxiliary ports on a member connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveAuxiliaryPorts">
            <summary>
             Error code to let the caller of the AuxiliaryPorts propety know that there was an exception raised while attempting to remove the auxiliary ports from a member connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidKeyType">
            <summary>
            Key type must be of type string or integer.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToGetKey">
            <summary>
            Unexpected error while getting the key from geometric construction collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeName">
            <summary>
            Unexpected failure while getting the name of the geometric construction type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsPublic">
            <summary>
            Unexpected failure while getting the public property of the geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetIsPublic">
            <summary>
            Unexpected failure while setting the public property of the geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInputNotFound">
            <summary>
            The input collection is not defined in geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetInput">
            <summary>
            Unexpected failure while setting the input to this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToAddItemInCollection">
            <summary>
            Unexpected error while adding the item to geometric construction collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToAddItemsInCollection">
            <summary>
            Unexpected error while adding the items to geometric construction collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToRemoveItemByKeyFromCollection">
            <summary>
            Unexpected error while removing item by key from collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToClearCollection">
            <summary>
            Unexpected error while removing all the elements from collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContains">
            <summary>
            Unexpected error while searching the item in geometric construction collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCount">
            <summary>
            Unexpected error while getting the count of item in the collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGCItem">
            <summary>
            Unexpected error while getting the item from geometric construction collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToCreateGCByType">
            <summary>
            Unexpected failure while creating geometric construction by type name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeDescription">
            <summary>
            Unexpected failure while getting the description of the geometric construction type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeDefinitionProgId">
            <summary>
            Unexpected failure while getting the definition programmatic identifier of the geometric construction type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeIsParameterInCatalog">
            <summary>
            Unexpected failure while determining whether the specified parameter is in catalog.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameter">
            <summary>
            Unexpected failure while getting the parameter from this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetParameter">
            <summary>
            Unexpected failure while setting the parameter for this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterOfInput">
            <summary>
            Unexpected failure while getting the parameter for the given input from this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetParameterOfInput">
            <summary>
            Unexpected failure while setting the parameter for the given input for this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGCEvaluate">
            <summary>
            Unexpected failure while evaluating the geometric construction output.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGCEvaluateStopCompute">
            <summary>
            Unexpected failure while adding stop compute on all outputs of this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOwningGeometricConstruction">
            <summary>
            Unexpected failure while getting owning geometric construction of this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedGeometricConstructionSet">
            <summary>
            Current operation is not supported on geometric construction set.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOutput">
            <summary>
            Unexpected failure while getting the output of this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOutput">
            <summary>
            Unexpected failure while setting the output of this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOutputs">
            <summary>
            Unexpected failure while getting all the outputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsDisabledOutput">
            <summary>
            Unexpected failure while getting geometric construction is unused output or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDisableOutput">
            <summary>
            Unexpected failure while setting disable control flags for this geometric construction output.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComponentsVisible">
            <summary>
            Unexpected failure while getting components visible for this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetComponentsVisible">
            <summary>
            Unexpected failure while setting components visible for this geometric construction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGraphicDisplay">
            <summary>
            Unexpected failure while setting the graphic display properties of shared parameter.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDisplayable">
            <summary>
            Unexpected failure while setting displayable property of shared parameter
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReplacingObjects">
            <summary>
            Unexpected failure while getting replacing objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrManyToManyNotAllowed">
            <summary>
            Either the replaced objects or replacing objects count is more than 1. Currently, replacement of multiple objects with multiple replacing objects is not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReplacedObjects">
            <summary>
            Unexpected failure while setting replaced objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameterNotFound">
            <summary>
            The parameter is not defined in geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameterOfInputNotFound">
            <summary>
            The parameter of input is not defined in geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGeometricConstructionTypes">
            <summary>
            Unexpected failure while getting the available geometric construction type names from catalog and disk.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGeometricConstructionTypeName">
            <summary>
            GeometricConstruction type name is not available in catalog and disk.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectTypeOfOutput">
            <summary>
            Output type should match with the type defined on geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOutputNotFound">
            <summary>
            The output collection is not defined in geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGeometricConstructionAssemblyOutput">
            <summary>
            The geometric construction is not an output of the geometric construction assembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComponents">
            <summary>
            Unexpected failure while getting all the components.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCandidateOutputs">
            <summary>
            Unexpected failure while getting all the candidates for template output.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGCPosition">
            <summary>
            Unexpected failure while getting position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGCPosition">
            <summary>
            Unexpected failure while setting position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComponentInputs">
            <summary>
            Unexpected failure while getting the component inputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCharactersNotAllowed">
            <summary>
            The following special characters/names are not allowed:
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUnicodeCharacters">
            <summary>
            Unicode control characters
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurrogateCharacters">
            <summary>
            Surrogate characters
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSystemReserveKeywords">
            <summary>
            System reserved keywords
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSystemReserveNames">
            <summary>
            System reserved names, including 'CON', 'AUX', 'PRN', 'COM1' or 'LPT2'
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPeriodOrDoublePeriod">
            <summary>
            '.' or '..'
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDirectoryNotFound">
            <summary>
            Path does not exists on disk.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPrintGraphDefinition">
            <summary>
            Unexpected failure while getting the overridden print graph definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPrintGraphDefinition">
            <summary>
            Unexpected failure while overriding the print graph definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDefinition">
            <summary>
            Unexpected failure while getting the initialized geometric construction definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidFromTemplate">
            <summary>
            On geometric construction set the from template can be true.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCenterPoint">
            <summary>
            Unexpected failure while getting the center point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCenterPoint">
            <summary>
            Unexpected failure while setting the center point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCircumference">
            <summary>
            Unexpected failure while getting the circumference.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMajorAxis">
            <summary>
            Unexpected failure while getting the major axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMajorAxis">
            <summary>
            Unexpected failure while setting the major axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetNormal">
            <summary>
            Unexpected failure while getting the normal.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetNormal">
            <summary>
            Unexpected failure while setting the normal.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRadius">
            <summary>
            Unexpected failure while getting the radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRadius">
            <summary>
            Unexpected failure while setting the radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartAngle">
            <summary>
            Unexpected failure while getting the start angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartAngle">
            <summary>
            Unexpected failure while setting the start angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSweepAngle">
            <summary>
            Unexpected failure while getting the sweep angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSweepAngle">
            <summary>
            Unexpected failure while setting the sweep angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetKnot">
            <summary>
            Unexpected failure while getting the knot at index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPoleWt">
            <summary>
            Unexpected failure while getting the pole and weight at index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPolesWeightsKnots">
            <summary>
            Unexpected failure while getting all basic B-spline information.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInsertKnot">
            <summary>
            Unexpected failure while inserting a knot value with given multiplicity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInsertPoleWt">
            <summary>
            Unexpected failure while inserting a particular pole and weight at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsRational">
            <summary>
            Unexpected failure while knowing that B-spline curve is rational or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetKnotCount">
            <summary>
            Unexpected failure while getting the knot count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPoleCount">
            <summary>
            Unexpected failure while getting the pole count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOrder">
            <summary>
            Unexpected failure while getting the order.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveKnot">
            <summary>
            Unexpected failure while removing the knot at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemovePoleWt">
            <summary>
            Unexpected failure while removing the pole and weight at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetKnot">
            <summary>
            Unexpected failure while setting the knot at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPoleWt">
            <summary>
            Unexpected failure while setting the pole and weight at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddCurve">
            <summary>
            Unexpected failure while adding the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCurveCount">
            <summary>
            Unexpected failure while getting the curve count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCurve">
            <summary>
            Unexpected failure while getting the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCurves">
            <summary>
            Unexpected failure while getting the curves.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveCurve">
            <summary>
            Unexpected failure while removing a curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCurve">
            <summary>
            Unexpected failure while setting curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsCircle">
            <summary>
            Unexpected failure while checking whether this ellipse is circular or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMajorRadius">
            <summary>
            Unexpected failure while getting the major radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMajorRadius">
            <summary>
            Unexpected failure while setting the major radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMinorAxis">
            <summary>
            Unexpected failure while getting the minor axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMinorAxis">
            <summary>
            Unexpected failure while setting the minor axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMinorMajorRatio">
            <summary>
            Unexpected failure while getting the ratio between the minor and major radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMinorMajorRatio">
            <summary>
            Unexpected failure while setting the ratio between the minor and major radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMinorRadius">
            <summary>
            Unexpected failure while getting the minor radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMinorRadius">
            <summary>
            Unexpected failure while setting the minor radius.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddPoint">
            <summary>
            Unexpected failure while adding point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPoint">
            <summary>
            Unexpected failure while getting point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPoints">
            <summary>
            Unexpected failure while getting points.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInsertPoint">
            <summary>
            Unexpected failure while inserting a particular point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsClosed">
            <summary>
            Unexpected failure while getting the closure.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetIsClosed">
            <summary>
            Unexpected failure while setting the closure.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointCount">
            <summary>
            Unexpected failure while getting the point count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemovePoint">
            <summary>
            Unexpected failure while removing point at index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPoint">
            <summary>
            Unexpected failure while setting point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddBoundary">
            <summary>
            Unexpected failure while adding boundary.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddNaturalBoundary">
            <summary>
            Unexpected failure while adding natural boundary.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaryCount">
            <summary>
            Unexpected failure while getting boundary count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaryCount2d">
            <summary>
            Unexpected failure while getting 2d boundary count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundary">
            <summary>
            Unexpected failure while getting boundary.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUKnot">
            <summary>
            Unexpected failure while getting the U knot.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVKnot">
            <summary>
            Unexpected failure while getting the V knot.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRemoveBoundary">
            <summary>
            Unexpected failure while removing boundary at index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundary">
            <summary>
            Unexpected failure while setting boundary at index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetUKnot">
            <summary>
            Unexpected failure while setting the U-knot value at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetVKnot">
            <summary>
            Unexpected failure while setting the V-knot value at given index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUKnotCount">
            <summary>
            Unexpected failure while getting the number of knots in U.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVKnotCount">
            <summary>
            Unexpected failure while getting the number of knots in V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUNumberOfPoles">
            <summary>
            Unexpected failure while getting the number of poles in U.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVNumberOfPoles">
            <summary>
            Unexpected failure while getting the number of poles in V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUOrder">
            <summary>
            Unexpected failure while getting the order in U.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVOrder">
            <summary>
            Unexpected failure while getting the order in V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUParamEdge">
            <summary>
            Unexpected failure while getting the edge along U.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVParamEdge">
            <summary>
            Unexpected failure while getting the edge along V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetApex">
            <summary>
            Unexpected failure while getting apex of cone.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAxisVector">
            <summary>
            Unexpected failure while getting axis of cone.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBaseEllipse">
            <summary>
            Unexpected failure while getting base ellipse of the cone.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBaseEllipse">
            <summary>
            Unexpected failure while setting base ellipse of the cone.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCapped">
            <summary>
            Unexpected failure while checking is capped or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCapped">
            <summary>
            Unexpected failure while setting the capped property.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContracting">
            <summary>
            Unexpected failure while checking is contracting or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetContracting">
            <summary>
            Unexpected failure while setting the contracting property.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetExtrema">
            <summary>
            Unexpected failure while getting extrema in U.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHalfAngle">
            <summary>
            Unexpected failure while getting half angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetHalfAngle">
            <summary>
            Unexpected failure while setting half angle.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReversed">
            <summary>
            Unexpected failure while getting reversed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReversed">
            <summary>
            Unexpected failure while setting reversed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSolid">
            <summary>
            Unexpected failure while getting the solid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSolid">
            <summary>
            Unexpected failure while setting the solid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGenCurve">
            <summary>
            Unexpected failure while getting generating curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGenCurve">
            <summary>
            Unexpected failure while setting generating curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsOrthogonal">
            <summary>
            Unexpected failure while checking the projection is orthogonal to the generating curve plane or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProjLength">
            <summary>
            Unexpected failure while getting the projection length.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetProjLength">
            <summary>
            Unexpected failure while setting the projection length.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProjVec">
            <summary>
            Unexpected failure while getting the projection direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetProjVec">
            <summary>
            Unexpected failure while setting the projection direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReverseNormal">
            <summary>
            Unexpected failure while getting is reverse normal or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReverseNormal">
            <summary>
            Unexpected failure while setting reverse normal.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRevolutionAxis">
            <summary>
            Unexpected failure while getting the revolution axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRevolutionAxis">
            <summary>
            Unexpected failure while setting the revolution axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCoPlanar">
            <summary>
            Unexpected failure while checking the generating curve is coplanar with the axis or not.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOriginDir">
            <summary>
            Unexpected failure while getting the origin direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOriginDir">
            <summary>
            Unexpected failure while setting the origin direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPoleDir">
            <summary>
            Unexpected failure while getting the pole direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPoleDir">
            <summary>
            Unexpected failure while setting the pole direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReverseV">
            <summary>
            Unexpected failure while getting reverse in V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReverseV">
            <summary>
            Unexpected failure while setting reverse in V.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidComponent">
            <summary>
            Component collection should not contain geometric construction assembly object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGCPart">
            <summary>
            The geometric construction part is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToCreateGCByPart">
            <summary>
            Unexpected failure while creating geometric construction by part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedGeometricConstructionAssembly">
            <summary>
            Current operation is not supported on geometric construction assembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToCreateGCSetContainer">
            <summary>
            Unexpected failure while creating geometric construction set container.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetXmlDocument">
            <summary>
            Unexpected failure while getting exported xml document.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToExportToXML">
            <summary>
            Unexpected failure while exporting geometric construction set to xml.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetXMLDefinition">
            <summary>
            Unexpected failure while setting xml definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFailedToLoadGCSet">
            <summary>
            Unexpected failure while loading geometric construction set.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidInputs">
            <summary>
            Unable to get the required geometric construction type from given xml file.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGeometricConstructionNotPublic">
            <summary>
            Current operation is not supported on geometric construction which is not public.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCrossSectionType">
            <summary>
            Chamfer on an end cut can only be placed on the profile whose cross section is FB.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetItemOnSmartOccurrence">
            <summary>
            Unexpected failure while setting the Item property on the SmartOccurrence.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidGeometricConstructionTypeName1">
            <summary>
            GeometricConstruction type name is not valid to create GeometricConstruction of type :
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrChamferExtensionTypeNotSuported">
            <summary>
            The chamfer extension type not is not suported for non chamfer features.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrChamferExtensionNotSupported">
            <summary>
            The chamfer extension not is not suported for non chamfer features.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrChamferPathNotSupported">
            <summary>
            The chamfer path is not suported for non chamfer features.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNegativeChamferStartExtension">
            <summary>
            Negative values are not allowed for chamfer start extensions.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNegativeChamferEndExtension">
            <summary>
            Negative values are not allowed for chamfer end extensions.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDuplicateNotificationInterfaceNames">
            <summary>
            The array of compute notification interface names has duplicate objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetErrorInfoEx">
            <summary>
            Unexpected failure while getting the error information.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetErrorInfoEx">
            <summary>
            Unexpected failure while setting the error information.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.OperationOnlySupportedOnVertexPort">
            <summary>
            Operation is only supported on a port of type vertex.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointGeometryFromVertexPort">
            <summary>
            Unexpected error while getting the point geometry from vertex port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ModificationPortGeometryNotSupported">
            <summary>
            Modification of port geometry is not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVertexPortsFromEdge">
            <summary>
            Unexpected error while getting vertex ports on the given edge port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.PortNotEdge">
            <summary>
            Given port is not an edge port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncompatibleSelectionRule">
            <summary>
            This error is raised if the parent class for the current item is different than the selector class for the selected part. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetACLocation">
            <summary>
            Unexpected failure while getting origin from assemblyconnection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetACBoundedPorts">
            <summary>
            No bounded ports associated with the assemblyconnection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetACBoundingPorts">
            <summary>
            No bounding ports associated with the marine assemblyconnection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetToDoListMessageNotSupported">
            <summary>
            Setting of ToDoListMessage only applicable from custom geometric construction definition which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMirrorNotSupported">
            <summary>
            Mirroring of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEvaluateNotSupported">
            <summary>
            Evaluating of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTransformNotSupported">
            <summary>
            Transforming of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInputsReplacedNotSupported">
            <summary>
            InputsReplaced of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPostRelationAddedNotSupported">
            <summary>
            Post relation added of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPreRelationRemovedNotSupported">
            <summary>
            Pre relation removed of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetApprovalReasonNotSupported">
            <summary>
            Setting approval reason of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPermissionGroupNotSupported">
            <summary>
            Setting permission group of custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAdditionalGraphicsNotSupported">
            <summary>
            Getting the additional graphical displayable objects from custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetGraphicDisplayPositionNotSupported">
            <summary>
            Getting the graphic display position from custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsActionComponentShownOnRibbonBarNotSupported">
            <summary>
            Determining whether for a custom geometric construction definition the action component will be shown on ribbon bar is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsActionComponentEnabledNotSupported">
            <summary>
            Determining whether for a custom geometric construction definition the action component will be enabled is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrExecuteActionComponentNotSupported">
            <summary>
            Executing the action from action component for a custom geometric construction definition is only applicable which is a subclass of GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFeatureNotOnConnectable">
            <summary>
            Raised when the given feature for get port is not from the connectable.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputCount">
            <summary>
            Unexpected failure while getting the graphic input count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputInfoByIndex">
            <summary>
            Unexpected failure while getting the graphic input information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputGUIstaticInfoByIndex">
            <summary>
            Unexpected failure while getting the graphic input GUI static information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComputedInputCount">
            <summary>
            Unexpected failure while getting the computed input count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComputedInputInfoByIndex">
            <summary>
            Unexpected failure while getting the computed input information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOutputCount">
            <summary>
            Unexpected failure while getting the graphic output count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOutputInfoByIndex">
            <summary>
            Unexpected failure while getting the graphic output information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComputedOutputCount">
            <summary>
            Unexpected failure while getting the computed output count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComputedOutputInfoByIndex">
            <summary>
            Unexpected failure while getting the computed output information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterCount">
            <summary>
            Unexpected failure while getting the parameter count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterInfoByIndex">
            <summary>
            Unexpected failure while getting the parameter information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterValueCount">
            <summary>
            Unexpected failure while getting the parameter value count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterValueInfoByIndex">
            <summary>
            Unexpected failure while getting the parameter value information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterOfInputCount">
            <summary>
            Unexpected failure while getting the parameter of input count.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterOfInputInfoByIndex">
            <summary>
            Unexpected failure while getting the parameter of input information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBehavior">
            <summary>
            Unexpected failure while getting the behavior.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetActionGUIStaticInfo">
            <summary>
            Unexpected failure while getting the action component GUI static information.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSelfOutputs">
            <summary>
            Unexpected failure while getting the self outputs information.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputGUIDynamicInfoByIndex">
            <summary>
            Unexpected failure while getting the graphic input GUI dynamic information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParameterGUIDynamicInfoByIndex">
            <summary>
            Unexpected failure while getting the parameter GUI dynamic information by index.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetActiveInputForStart">
            <summary>
            Unexpected failure while getting the active input for start.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMinimumDistanceFromFaces">
            <summary>
            This error is raised if there is an error while getting the minimum distance between cross section faces. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedMinimumDistanceFromFacesOnBuiltUps">
            <summary>
            This error is raised while trying to get the minimum distance between cross section faces on designed members.  
            This operation is currently not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedGetRelatedPortOnBuiltUps">
            <summary>
            This error is raised if the GetRelatedPort method in TopologyPort is called on designed members.  
            This operation is currently not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCornerFeatureConstructionMethod">
            <summary>
            This error is raised when unable to get the corner feature construction method from the given corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrContexTypeMustBeBaseOrOffset">
            <summary>
            This error is raised if the context type for a port is not base or offset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFeatureTypeNotCornerFeature">
            <summary>
            This error is raised if the feature type is not corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputsPortsOrPosition">
            <summary>
            This error is raised when PortsOrPosition corner feature construction method is not supported by the corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputsPortAndSlotEdge">
            <summary>
            This error is raised when PortAndSlotEdge corner feature construction method is not supported by the corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputsSlotEdgeAndPort">
            <summary>
            This error is raised when SlotEdgeAndPort corner feature construction method is not supported by the corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputsSlotEdges">
            <summary>
            This error is raised when SlotEdges corner feature construction method is not supported by the corner feature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidStiffenerPorts">
            <summary>
            Raised if bounding part is not a stiffener part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundingPortNotLateral">
            <summary>
            Raised if bounding part is not a lateral part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundedPortNotBaseOrOffset">
            <summary>
            Raised if bounded port is not a base port or an offset port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberPorts">
            <summary>
            Raised if bounding part is not a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortNotAxisPort">
            <summary>
            Raised if bounded port or Bounding ports is not a MemberPartAxisPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotProfile">
            <summary>
            Raised if bounding part is not a profile part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIdealizedBoundary">
            <summary>
            Raised if unexpected error occur while getting the idealized boundary Id.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFeatureTypeNotEdgeFeature">
            <summary>
            This operation can only be accessed on a edge feature: GetConnectedPortAtEdgeFeature
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupportedOnGenericPlatepart">
            <summary>
            Current operation is not supported by the generic platepart. Method: GetPort(Feature feature, int featureSegmentId, bool createPort)
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupportedOnWallPart">
            <summary>
            Current operation is not supported by the wallpart. Method: GetPort(Feature feature, int featureSegmentId, bool createPort)
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationNotSupportedOnSlab">
            <summary>
            Current operation is not supported by the slab. Method: GetPort(Feature feature, int featureSegmentId, bool createPort)
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCurrentSelection">
            <summary>
            Raised if unexpected error occurred while setting the current selection on smart class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidEndCutType">
            <summary>
            Raised if the given EndCutType value is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundedPartNotStiffener">
            <summary>
            Bounded part must be a stiffener part or an edge reinforcement part to get the flange clearance from bounding plate.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrBoundingPartNotPlate">
            <summary>
            Bounding part must be a plate part to get the flange clearance for bounded stiffener.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundingPlateFlangeClearance">
            <summary>
            Unexpected error while trying to get the bounding plate flange clearance.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidNumberOfConnectedObject">
            <summary>
            The minimum or maximum number of connected object is less than 0.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullElementInNotificationInterfaceNames">
            <summary>
            The array of compute notification interface names has null element.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullGCCollection">
            <summary>
            The internal COM object of GeometricConstructionCollection is not alive.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPlaneDefinitionConstructionMethod">
            <summary>
            Raised if failed to get plane definition construction method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPlaneDefinitionAngleInputsForSlab">
            <summary>
            Raised if two points are not used to define the rotation axis to creare the plane definition for the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPlaneDefinitionNormalToPlaneAndPointInputsForSlab">
            <summary>
            Raised if two points are not used to define the normal to create the plane definition for the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPlaneDefinitionTypeNormalToPlaneAndVectorForSlab">
            <summary>
            Raised if NormalToPlaneAndVector type of plane definition is used in slab creation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameterRule">
            <summary>
            Error occurred while accessing parameter rule value.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameterRuleMismatch">
            <summary>
            Provided parameter is not a parameter on the part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEvaluateParameterRule">
            <summary>
            Error occurred while evaluating parameter rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPileSpacing">
            <summary>
            Spacing between Piles in X/Y directions are invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneRemoveAllBoundaries">
            <summary>
            This error is raised if an Unexpected failure while removing all boundaries of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetService">
            <summary>
            Unexpected failure while getting the requested service with given progID.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddSketchingReferences">
            <summary>
            Unexpected failure while setting the sketching references to CurveBySketch2D GeometricConstructionAssembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOutputIDs">
            <summary>
            Unexpected failure while getting the list of output IDs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRad2dOutputKey">
            <summary>
            Unexpected failure while getting the Rad2d output key.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTransformMatrixFor2DViewOrientation">
            <summary>
            Unexpected failure while getting the transform matrix for 2D view orientation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOrientationMatrix">
            <summary>
            Unable to get orientation matrix orientation to orient the contour.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSketchingPlaneOnSketchCS">
            <summary>
            Unexpected failure while setting sketching plane input to SketchCS GeometricConstruction CoordinateSystem.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetParametersOnSketch2d">
            <summary>
            Unexpected failure while setting catalog part parameters on Sketch2d.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSymFileExtension">
            <summary>
            The file extension should be either sym or sha.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSymFileName">
            <summary>
            The file name contains some invalid characters.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSketchingPlaneOnSketchCS">
            <summary>
            Unexpected failure while getting sketching plane input from SketchCS GeometricConstruction CoordinateSystem.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.InvalidBuiltUpCrossSection">
            <summary>
            Built-Up CrossSection can only be applied on designed MemberPart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.InvalidRolledCrossSection">
            <summary>
            Rolled CrossSection can only be applied on prismatic MemberPart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStandAloneMemberPart">
            <summary>
            Stand-alone MemberPart cannot be used as path for placing HandRail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDesignedMemberPart">
            <summary>
            Designed MemberPart cannot be used as path for placing HandRail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberPartAngle">
            <summary>
            MemberPart inclination angle must be within 0-60 degree range with respect to the Global X-axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotHandRailCatalogPart">
            <summary>
            Part is not a HandRail catalog part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPersistencyOfCoordinateSystem">
            <summary>
            Unexpected failure while setting persistency of coordinate system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCoordinateSystemProperties">
            <summary>
            Unexpected failure while setting the type or allowed hand of coordinate system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateFromPlane">
            <summary>
            Unexpected failure while creating coordinate system from plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCSMatrix">
            <summary>
            Unexpected failure while creating coordinate system from plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetInputs">
            <summary>
            Unexpected failure while setting the inputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLatePortForFeatureSegment">
            <summary>
            Raised when unexpected error occurs while getting the late port for feature segment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAttributes">
            <summary>
            Raised when unexpected error occurs while getting the attributes of a port for feature segment.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMemberFeatureData">
            <summary>
            Raised when unexpected error occurs while getting the port data for feature segment.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSystem">
            <summary>
            MemberSystem class is the logical collection of member parts. It maintains the design basis and physical alignment of the member
            parts for analysis, design, and manufacturing.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ProfileSystem">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all ProfileSystem classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Profile">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all Profile classes.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="child"> A child to which a parent/child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            Dim oParent As ISystem 
            Dim oChild As ISystemChild 
            oParent.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oProfileSystem As ProfileSystem = oMemberSystemSupported
            oProfileSystem.SetUserDefinedName("Profile System")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetConnectablePorts As ReadOnlyCollection(Of IPort) = oProfile.GetConnectablePorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the the GetConnectedPorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetConnectedPorts As ReadOnlyCollection(Of IPort) = oProfile.GetConnectedPorts(PortType.Edge)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetPorts As ReadOnlyCollection(Of IPort) = oProfile.GetPorts(PortType.Centerline)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="oConnectable"> A connectable object (IConnectable). </param>
            <param name="oConnectionEnum"> A read-only collection of connection objects (IConnection). </param>
            <returns> True, if the object is connected; False, otherwise. </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oConnectable As IConnectable
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oProfile.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectedObjects">
            <summary>
            Gets the connected objects.
            </summary>
            <returns>Read-Only collection of the connected objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectedObjects(System.Type)">
            <summary>
            Gets the connected objects of specific object type.
            </summary>
            <param name="connectedObjectType">Type of the connected object.</param>
            <returns>Read-Only collection of specific object type of the connected objects.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a run.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.Range">
            <summary>
            Gets the range box representing the range of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.SystemChildren">
            <summary>
            Gets a read-only collection of Profile system children.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.SystemParent">
            <summary>
            Gets and sets the system parent of this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile._ConnectableHelper">
            <summary>
            Gets the connectable helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IContinuity">
            <summary>
            Interface realized by all splittable entities to specify the continuity and priority.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IContinuity.ContinuityType">
            <summary>
            Continuity type property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IContinuity.PriorityNumber">
            <summary>
            Priority number property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.#ctor">
            <summary>
            Constructor for the ProfileSystem class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetParts">
            <summary>
            Gets all the children parts of the profile system. This is defined as abstract 
            on the ProfileSystem class to enforce all the derived classes to implement 
            this.
            </summary>
            <returns>
            Read-only collection of ProfilePart objects.
            </returns>
            <example>This is an example of the GetParts method.
            <code>
            Dim oProfileSystem As ProfileSystem = oMemberSystemSupported
            Dim oGetParts As ReadOnlyCollection(Of ProfilePart) = oProfileSystem.GetParts()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Adds the Splitter object to the ProfileSystem.
            </summary>
            <param name="splitter">The business object that will split the entity.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Adds the Splitter objects to the ProfileSystem.
            </summary>
            <param name="splitters">Collection of business objects that will split the ProfileSystem.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetSplit(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the Split object from the ProfileSystem with given the splitter.
            </summary>
            <param name="splitter">The business object that is splitting the ProfileSystem.</param>
            <returns>The split object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetSplitConnections(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Returns particular split/logical connections resulting from a given splitter.
            </summary>
            <param name="splitter">The business object that is splitting the ProfileSystem.</param>
            <returns>The split/logical connections resulting from a given splitter.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.RemoveAllSplitters">
            <summary>
            Removes all splitters from the ProfileSystem.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.RemoveSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Removes a splitter from the ProfileSystem. If the splitter already splits the ProfileSystem, it is removed from the split result.
            </summary>
            <param name="splitter">The business object that is splitting the ProfileSystem and will be removed.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.Axis">
            <summary>
            Gets the axis of the profile system. This is defined as abstract
            on the ProfileSystem class to enforce all the derived classes to 
            implement this. For MemberSystem, this is a transient curve which 
            is derived from the logical axis. For StiffenerSystem, it should return 
            the LandingCurve. To set the curve, direct methods on the derived 
            objects are provided.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.ContinuityType">
            <summary>
            Gets or sets the continuity type of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.PriorityNumber">
            <summary>
            Gets or sets the priority number of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>      
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.SplitConnections">
            <summary>
            Gets the read-only collection of all split/logical connections currently on the ProfileSystem.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.Splits">
            <summary>
            Gets the split objects from the ProfileSystem.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IMemberType">
            <summary>
            Interface to get or set type category, type, and priority of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.TypeCategory">
            <summary>
            Gets or sets the type category of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.Type">
            <summary>
            Gets or sets the type of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.Priority">
            <summary>
            Gets or sets the priority of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
             <summary>
             Constructor to create a member system using Sketch3d path.
             </summary>
             <param name="parentSystem">Parent system under which the member will be created.</param>
             <param name="axis">Sketch3D axis defining the logical axis of the member.</param>
             <param name="crossSection">Cross section of the member.</param>
             <param name="material">Material of the member.</param>
             <param name="memberType">Type of the member part.</param>        
             <param name="cardinalPoint">Cardinal point of the cross section.</param>
             <param name="rotationAngle">Rotation angle of the member.</param>
             <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
             <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
             <example>This is an example of the MemberSystem constructor.
             <code>
             'Get the catalog struct helper.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
             Dim catalogStructHelper As New CatalogStructHelper()
             
             'rootSystem can be any system which the user want as a parent for the Member System created.
             Dim parent As BusinessObject = DirectCast(rootSystem, BusinessObject)
             Dim structuralSystem As ISystem = New StructuralSystem(parent)
             
             'Get the cross section.
             Dim referenceStandardName As String = "AISC-LRFD-3.1"
             Dim sectionType As String = "W"
             Dim sectionName As String = "W8x10"
             Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionType, sectionName)
             
             'Create and customize the Sketch3D here by some technique
             Dim sketch3dAxis As New Sketch3D(plant)
             Dim colSketchPoint As New Collection(Of SketchPoint)()
            
             Dim sketchPoint1 As New SketchPoint(0, -10, 5)
             Dim sketchPoint2 As New SketchPoint(0, -15, 5)
             Dim lineFeature As LineFeature = sketchPoint1.CreateLineFeature(sketchPoint2)
             colSketchPoint.Add(sketchPoint1)
             colSketchPoint.Add(sketchPoint2)
             sketch3dAxis.SetSketchPoints(colSketchPoint)
            
             'Get the material.
             Dim materialType As String = "Steel - Carbon"
             Dim materialGrade As String = "A"
             Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
             
             Dim memberType As Integer = MemberType.Beam
             Dim cardinalPoint As Integer = 8
             Dim rotationAngle As Double = 0
             Dim mirror As Boolean = False
             
             'Call the constructor.
             Dim memberSystem As New MemberSystem(structuralSystem, sketch3dAxis, crossSection, material, memberType, _
                                                     cardinalPoint, rotationAngle, mirror)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a member system using the start and the end position.
            </summary>
            <param name="parentSystem">Parent system under which the member needs to be created.</param>
            <param name="posStart">Start position of the member.</param>
            <param name="posEnd">End position of the member.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <example>This is an example of the MemberSystem constructor.
            <code>
            'Get the catalog struct helper.
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'rootSystem can be any system which the user want as a parent for the Member System created.
            Dim parent As BusinessObject = DirectCast(rootSystem, BusinessObject)
            Dim structuralSystem As ISystem = New StructuralSystem(parent)
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionType As String = "W"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionType, sectionName)
            
            Dim posStart As New Position(0, 0, 0)
            Dim posEnd As New Position(3, 0, 0)
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalPoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Call the constructor.
            Dim memberSystem As New MemberSystem(structuralSystem, posStart, posEnd, crossSection, material, _
                                                    memberType, cardinalPoint, rotationAngle, mirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a member using the related objects and can be any of the following:
            member system, point, surface, frame connection, plane, or grid line. 
            Each combination of objects should result in a unique position on that end. 
            <para>Therefore, the 
            following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            GridLine/GridLine, and GridPlane/GridLine.</para>
            </summary>
            <param name="parentSystem">Parent system under which the member needs to be created.</param>
            <param name="relatedObjectsAtStart">Related objects at the start.</param>
            <param name="relatedObjectsAtEnd">Related objects at the end.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when there is an error in getting the point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the  point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
            <example>This is an example of MemberSystem constructor.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'In this example the member is being created directly under the root system.
            Dim parentSystem As ISystem = plant.RootSystem
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            
            'The related object collection can have any collection of business objects which result in a unique position.
            'For example, this member system is connected to an existing member system frame connection at start
            ' and 2 grid lines at the end.
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjectsAtStart As New Collection(Of BusinessObject)()
            relatedObjectsAtStart.Add(CType(frameConnection, BusinessObject))
            
            'Add the existing intersecting gridlines to the related object collection at end.
            Dim relatedObjectsAtEnd As New Collection(Of BusinessObject)()
            relatedObjectsAtEnd.Add(CType(existingGridLine1, BusinessObject))
            relatedObjectsAtEnd.Add(CType(existingGridLine2, BusinessObject))
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalpoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Call the constructor.
            Dim oMemberSystem As New MemberSystem(parentSystem, relatedObjectsAtStart, relatedObjectsAtEnd, crossSection, _
                                                    material, memberType, cardinalpoint, rotationAngle, mirror)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a curved member using Sketch3d path and related objects collections which can be any of the following:
            member system, point, surface, frame connection, plane, or grid line. 
            Each combination of objects should result in a unique position on that end. 
            <para>Therefore, the following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            GridLine/GridLine, and GridPlane/GridLine.</para>
            </summary>
            <param name="parentSystem">Parent system under which the member will be created.</param>
            <param name="axis">Sketch3D axis defining the logical axis of the member.</param>
            <param name="relatedObjectsAtStart">Related objects at the start.  This collection can be null.</param>
            <param name="relatedObjectsAtEnd">Related objects at the end.  This collection can be null.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException">"Built-up cross section cannot be used for creating a member using Sketch3D.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException">A name rule is not associated with the given object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Failed to get or set the Sketch3D path.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3D path is not compatible with the given related object at the start or end of the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberTypeException">Codelist item for MemberType does not exist.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">Invalid cardinal point is being set.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Related objects do not provide a valid constraint for the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get the end points on the curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Failed to set the part name on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Related objects at the start or end cannot be set on the frame connection of the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">Unable to disconnect the related objects on the start or end frame connection of the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Failed to set the point-on member end in the frame connection.</exception>
            <example>This is an example of MemberSystem constructor.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'In this example the member is being created directly under the root system.
            Dim parentSystem As ISystem = plant.RootSystem
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            
            'The related object collection can have any collection of business objects which result in a unique position.
            'For example, this member system is connected to an existing member system frame connection at start
            'and 2 grid lines at the end.
            
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjectsAtStart As New Collection(Of BusinessObject)()
            relatedObjectsAtStart.Add(CType(frameConnection, BusinessObject))
            
            'Add the existing intersecting gridlines to the related object collection at end.
            Dim relatedObjectsAtEnd As New Collection(Of BusinessObject)()
            relatedObjectsAtEnd.Add(CType(existingGridLine1, BusinessObject))
            relatedObjectsAtEnd.Add(CType(existingGridLine2, BusinessObject))
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalpoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Create SketchPoints.
            Dim sketchPoint1 As New SketchPoint(30, 1, 0)
            Dim sketchPoint2 As New SketchPoint(35, 5, 0)
            Dim sketchPoint3 As New SketchPoint(40, 1, 0)
            Dim sketchPoints As New Collection(Of SketchPoint)()
            Dim arcBy3Points As ArcBy3PointsFeature = sketchPoint1.CreateArcBy3PointsFeature(sketchPoint2, sketchPoint3)
            sketchPoints.Add(sketchPoint1)
            sketchPoints.Add(sketchPoint2)
            sketchPoints.Add(sketchPoint3)
            Dim sketch3d As New Sketch3D(oPlant)
            sketch3d.SetSketchPoints(sketchPoints)        
            
            'Call the constructor.
            Dim oMemberSystem As New MemberSystem(parentSystem, sketch3d, relatedObjectsAtStart, relatedObjectsAtEnd, crossSection, _
                                                    material, memberType, cardinalpoint, rotationAngle, mirror)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            Copy constructor for member system.
            </summary>
            <param name="parentSystem">Parent system of the member.</param>
            <param name="memberSystemToCopied">Member system being copied.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when there is an error in getting the point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
            <example>This is an example of the MemberSystem copy constructor.
            <code>
            Dim memberSystemCopy As New MemberSystem(structuralSystem, memberSystemToCopied)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetParts">
            <summary>
            Gets the collection of profile parts.
            </summary>
            <returns>Collection of ProfilePart objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartsException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetParts method.
            <code>
            Dim oProfilePartColl As ReadOnlyCollection(Of ProfilePart) = oMemberSystem.GetParts()
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetAxis(Ingr.SP3D.Common.Middle.Curve3d)">
            <summary>
            Sets the curve geometry on the logical axis of the member system.
            </summary>
            <param name="axis">Curve3d object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAxisException">Unexpected failure in the method.</exception>
            <example>Example for the SetAxis method.
            <code>
            Dim curve3d As Curve3d = memberSystem.Axis
            anotherMemberSystem.SetAxis(curve3d) 
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetRelatedObjects(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
             Gets the related objects of the frame connection at the start of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns> Returns the related objects of the frame connection at the start end of the member system.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException">Unexpected failure in the method.</exception>
            <example> This is an example of the GetRelatedObjects method.
            <code>
            Dim colRelatedObjects As Collection(Of BusinessObject) = memberSystem.GetRelatedObjects(MemberAxisEnd.End)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Sets the related objects at the given end of the member system.
            These related objects can be any of the following:
            Member system, Point, Surface, Frame connection, Plane, or Grid line. 
            <para>Each combination of objects should result in a unique position on that end. Therefore, 
            following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, persistent point, 
            Gridline/Gridline, Gridplane/Gridline.</para>
            This also accepts the empty collection to disconnect the member system from its related objects if any.
            </summary>
            <param name="colRelatedObjs">Related objects that need to be set on the given end of the member system.</param>
            <param name="axisEnd">Enumerated value to define the end of the member.</param>
            <example>This is an example of the SetRelatedObjects method.
            <code>
            'The related object collection can have any set of business objects which result in a unique position;
            'for example, this member system is connected to an existing member system frame connection at its start.
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjects As New Collection(Of BusinessObject)()
            relatedObjects.Add(CType(frameConnection, BusinessObject)) 
            memberSystem.SetRelatedObjects(relatedObjects, MemberAxisEnd.Start)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetEndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the start position and end position of a member system.
            </summary>
            <return name="posStart">Start position of the member system.</return>
            <return name="posEnd">End position of the member system.</return>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetEndPoints method.
            <code>
            Dim posStart As Position
            Dim posEnd As Position
            memberSystem.GetEndPoints(posStart, posEnd)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetEndPoints(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the start and end position of the member system. Throws an exception if curved is True.
            </summary>
            <param name="posStart">Start position of the member system.</param>
            <param name="posEnd">End position of the member system.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Unexpected failure in the method.</exception>
            <example>This is an example of the SetEndPoints method.
            <code>
            Dim posStart As New Position(1.0, 1.0, 1.0)
            Dim posEnd As New Position(3.0, 1.0, 1.0)
            memberSystem.SetEndPoints(posStart, posEnd)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetSketch3DEndPosition(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the Sketch3D object at the specified end position.
            </summary>
            <param name="axisEnd">The axis end.</param>
            <param name="positionAtEnd">The position at end.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system Sketch3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3d path is not compatible with the given related object at the start or end of the member.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetPart(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the profile part at the start point of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns>Profile part at the start position of the member system. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetPart method.
            <code>
            Dim profilePart As ProfilePart = memberSystem.GetPart(MemberAxisEnd.End)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetPartsAtPosition(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.ProfilePart@,Ingr.SP3D.Structure.Middle.ProfilePart@)">
            <summary>
            Gets all the member parts at a certain position of the member system.
            </summary>
            <param name="posWhere">Position on the member system.</param>
            <param name="previousPart">Previous part at that position.</param>
            <param name="nextPart">Next part at that position.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetPartsAtPosition method.
            <code>
            Dim previousPart As ProfilePart = Nothing
            Dim nextPart As ProfilePart = Nothing
            Dim posWhere As New Position(0, 0, 0)
            memberSystem.GetPartsAtPosition(posWhere, previousPart, nextPart)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.FrameConnection(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the frame connection at the end point of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns>Frame connection at the end position of the member system.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException">Unexpected failure in the method.</exception>
            <example>This is an example of the FrameConnection method.
            <code>
            Dim frameConnection As FrameConnection = memberSystem.FrameConnection(MemberAxisEnd.End)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetMatrixAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the transformation matrix from the axis rotation at a given position along the member.
            </summary>
            <param name="posAlong">Position along a member system.</param>
            <returns>Matrix at a given position along the member.</returns>
            <exception cref="T:System.ArgumentNullException">Exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetMatrixAtPosition method.
            <code>
            Dim matrix As Matrix4X4 = memberSystem.GetMatrixAtPosition(New Position(0, 0, 0))
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.MemberSplitType)">
            <summary>
            Adds the splitter object to the splitting member system.
            </summary>
            <param name="splitter">The business object that is splitting the member system.  The splitter can be of
            type MemberSystem, GridPlane, GridElevationPlane, and PlateSystem. </param>
            <param name="splitType">Type of the split.</param>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create the split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the helper object from the split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error occurred while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on SplitMemberConnection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the split status on MemberConnection.</exception>
            <example>This is an example of the AddSplitters method.
            <code>
            memberSystem.AddSplitter(splitterMemberSystem, MemberSplitType.SplitBoth)
            MiddleServiceProvider.TransactionMgr.Commit("Split members.")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberSplitType)">
            <summary>
            Adds the splitter objects to the splitting member system.
            </summary>
            <param name="splitters">Collection of business objects that will split the member system.  The collection can be of
            type ProfileSystem, PlateSystem, and GridPlane.</param>
            <param name="splitType">Type of the split.</param>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action. </exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create the split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the helper object from the split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error occurred while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on SplitMemberConnection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the split status on MemberConnection. </exception>
            <example>This is an example of the AddSplitters method.
            <code>
            Dim colSplitters As New Collection(Of BusinessObject)
            colSplitters.Add(splitterMemberSystem)
            colSplitters.Add(gridPlane)
             
            memberSystem.AddSplitters(colSplitters, MemberSplitType.SplitBoth)
            MiddleServiceProvider.TransactionMgr.Commit("Place Splits")
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Gets the transformation matrix of the member rotation.
            </summary>
            <param name="transformMatrix">Matrix4X4 object.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure in the method.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim transformMatrix As New Matrix4X4()
            transformMatrix.SetIdentity()
            memberSystem.Transform(transformMatrix)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this member system.
            </summary>
            <param name="curveScopeType">Enumerator which shows the planarity of this member system.</param>
            <param name="normalVector">The normal vector of this member system.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim curveScopeType As CurveScopeType
            Dim normalVector As Vector
            memberSystem.ScopeNormal(curveScopeType, normalVector)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes the center, area, moments of inertia, and principle axes of lamina (e.g., a sheet metal) bounded by a closed planar curve.
            </summary>
            <param name="area">Area of the the lamina.</param>
            <param name="posCentroid">Centroid of the lamina.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="majorPrincipleInertia">Principle moment of inertia to major axis.</param>
            <param name="minorPrincipleInertia">Principle moment of inertia to minor axis.</param>
            <param name="polarInertia">Polar moment of inertia to the normal.</param>
            <param name="majorIAxis">Major principle axis.</param>
            <param name="minorIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim area, inertiaX, inertiaY, inertiaXY, majorPrincipleInertia, minorPrincipleInertia, polarInertia As Double
            Dim posCentroid As Position
            Dim majorIAxis, minorIAxis As Vector
            memberSystem.AreaCentroidMomentsOfInertia(area, posCentroid, inertiaX, inertiaY, inertiaXY, _
                         majorPrincipleInertia, minorPrincipleInertia, polarInertia, majorIAxis, minorIAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes length, centroid, moments of inertia, and principle axes of an open or closed thin wire.
            </summary>
            <param name="length">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="principleInertiaU">Principle moment of inertia to uDir.</param>
            <param name="principleInertiaV">Principle moment of inertia to vDir.</param>
            <param name="principleInertiaN">Principle moment of inertia to nDir.</param>
            <param name="axisU">Major principle axis.</param>
            <param name="axisV">Minor principle axis.</param>
            <param name="axisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim length, inertiaX, inertiaY, inertiaZ, principleInertiaU, principleInertiaV, principleInertiaN As Double
            Dim posCentroid As Position
            Dim axisU, axisV, axisN As Vector
            memberSystem.CentroidInertiaForWire(length, posCentroid, inertiaX, inertiaY, inertiaZ, _
                         principleInertiaU, principleInertiaV, principleInertiaN, axisU, axisV, axisN)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this member system.
            </summary>
            <param name="posStart">Start position.</param>
            <param name="posEnd">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim posStart, posEnd As Position
            memberSystem.EndPoints(posStart, posEnd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on this member system.
            </summary>
            <param name="posPoint">Point to determine whether on this member system.</param>
            <returns>True if the point is on this member system; False if the point is not on this member system.</returns>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim isPointOn As Boolean = memberSystem.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Unexpected failure while determining the distance between this curve and the input point.</exception>      
            <example>This is an example of DistanceBetween method.
            <code>
            Dim point3d As New Point3d(1.5, 0, 0)
            Dim distance As Double
            Dim posSrcPos As Position
            memberSystem.DistanceBetween(point3d, distance, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim distance As Double
            Dim posSrcPos, posInPos As Position
            memberSystem.DistanceBetween(inCurve, distance, posSrcPos, posInPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input surface at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim distance As Double 
            Dim posSrcPos, posInPos As Position 
            memberSystem.DistanceBetween(inSurface, distance, posSrcPos, posInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this member system and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="geometryIntersectionType">Enumerator describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">An exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometryIntersectionType As GeometryIntersectionType
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            memberSystem.Intersect(inCurve, colIntPos, colOverlapPos, geometryIntersectionType)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between member system and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Collection of curve objects.</param>
            <param name="geometryIntersectionType">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">An exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometryIntersectionType As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            memberSystem.Intersect(inSurface, colCurves, geometryIntersectionType)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of this member system.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            memberSystem.SelfIntersect(colIntPos, colOverlapPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along a member system at a given distance from the given 
            start point on the member system. If the given point does not lie on the member system, 
            it is along normal to the member system (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="distance">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim posStart As New Position(1, 1, 1)
            Dim distance As Double = 1.0
            Dim posPointDistanceAlong As Position = memberSystem.PointAtDistanceAlong(posStart, distance)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along a member system at a given distance from the start of the member system.
            </summary>
            <param name="distance">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim distance As Double = 1.0
            Dim posPointDistanceAlong As Position = memberSystem.PointAtDistanceAlong(distance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on this member system along the given vector from the given point.
            </summary>
            <param name="pos">Position to project to the curve.</param>
            <param name="projectionVector">Vector to project along. If the optional argument is null,
                                  then the function projects along the vector normal to the curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim projectionVector As New Vector(0, 0, 1)
            Dim posProjectPoint As Position = memberSystem.ProjectPoint(projectionVector, oVecProj)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on this member system from the given point.
            </summary>
            <param name="pos">Position to project to the curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim posProjectPoint As Position = memberSystem.ProjectPoint(pos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point on the member system.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim tangentPoint As Vector = memberSystem.ProjectPoint(pos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Adds the splitter object to the MemberSystem. On commit, a split connection of MemberSplitType SplitFirst will be created.
            </summary>
            <param name="splitter">The business object that will split the MemberSystem. 
            Valid splitter objects are MemberSystem, GridPlane, GridElevationPlane, GridRadialPlane, and TopologyPort of root PlateSystem.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">Raised if the splitter object is not MemberSystem, GridPlane, GridElevationPlane, GridRadialPlane, and TopologyPort of root PlateSystem.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Raised when an unexpected failure occurred while creating the split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Raised when an unexpected failure occurred while getting the helper object from a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Raised when an unexpected failure occurred while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Raised when an unexpected failure occurred while setting the parent objects on a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Raised when an unexpected failure occurred while setting the split status on a split connection.</exception>
            <example>This is an example of the AddSplitter method.
            <code>
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            Dim splitter as BusinessObject 'Substitute this line with the actual splitter instance.
            memberSystem.AddSplitter(splitter)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Adds the splitter objects to the MemberSystem. On commit, split connections of MemberSplitType SplitFirst will be created.
            </summary>
            <param name="splitters">Collection of business objects that will split the MemberSystem.
            Valid splitter objects are MemberSystem, GridPlane, GridElevationPlane, GridRadialPlane, and TopologyPort of root PlateSystem.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">Raised if splitter objects are not MemberSystem, GridPlane, GridElevationPlane, GridRadialPlane, and TopologyPort of root PlateSystem.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Raised when an unexpected failure occurred while creating the split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Raised when an unexpected failure occurred while getting the helper object from a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Raised when an unexpected failure occurred while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Raised when an unexpected failure occurred while setting the parent objects on a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Raised when an unexpected failure occurred while setting the split status on a split connection.</exception>
            <example>This is an example of the AddSplitters method.
            <code> 
            Dim splitter1 as BusinessObject 'Substitute this line with the actual splitter instance.
            Dim splitter2 as BusinessObject 'Substitute this line with the actual splitter instance.
            Dim splitters As New Collection(Of BusinessObject)
            splitters.Add(splitter1)
            splitters.Add(splitter2)
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            memberSystem.AddSplitters(splitters)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetSplit(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the split object from the MemberSystem with the given splitter.
            Returns null if there is no split object from the MemberSystem with the given splitter.
            </summary>
            <param name="splitter">The business object that is splitting the MemberSystem.</param>
            <returns>The split object from the member system.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception> 
            <example>This is an example of the GetSplit method.
            <code>  
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            Dim splitter as BusinessObject 'Substitute this line with the actual splitter instance.
            Dim split As ISplit = memberSystem.GetSplit(splitter)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetSplitConnections(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Returns particular split connections resulting from the given splitter.
            Returns an empty collection if there are no split connections resulting from the given splitter.
            </summary>
            <param name="splitter">The business object that is splitting the MemberSystem.</param>
            <returns>Read-only collection of split connections resulting from the given splitter.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception> 
            <example>This is an example of the GetSplitConnections method.
            <code>        
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            Dim splitter as BusinessObject 'Substitute this line with the actual splitter instance.
            Dim splitConnections As ReadOnlyCollection(Of IConnection) = memberSystem.GetSplitConnections(splitter)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.RemoveAllSplitters">
            <summary>
            Removes all splitters from the MemberSystem.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception> 
            <example>This is an example of the RemoveAllSplitters method.
            <code>
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            memberSystem.RemoveAllSplitters()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.RemoveSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Removes a splitter from the MemberSystem. If the splitter already splits the MemberSystem, it is removed from the split result.
            </summary>
            <param name="splitter">The business object that is splitting the MemberSystem and will be removed.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception> 
            <example>This is an example of the RemoveSplitter method.
            <code>
            Dim memberSystem as MemberSystem 'Substitute this line with the actual member system instance.
            Dim splitter as BusinessObject 'Substitute this line with the actual splitter instance.
            memberSystem.RemoveSplitter(splitter)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetAlign(System.Boolean)">
            <summary>
            Sets the align.
            </summary>
            <param name="isAlign">if set to <c>true</c> [is align].</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAlignException">Raised when an unexpected error occurred while setting the align of the axis of the member system.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ValidateSplitterType(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Validates the type of the split.
            </summary>
            <param name="splitter">The splitter.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Axis">
            <summary>
            Gets the axis of the member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AxisException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.PhysicalAxis">
            <summary>
            Gets the physical axis of the member curve.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException">Unexpected failure while trying to get the physical axis of the member system.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Sketch3D">
            <summary>
             Gets or sets the curve object on the logical axis of the member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Curved">
            <summary>
            Gets the curved property of the member system.
            </summary>
            <returns>True if member system is curved otherwise false.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Matrix">
            <summary>
            Gets the transformation matrix from the axis rotation.
            </summary>
            <returns>Transformation Matrix4X4 object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.OrientationVector">
            <summary>
            Gets or sets the orientation vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.BetaAngle">
            <summary>
            Gets or sets the beta angle.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Mirror">
            <summary>
            Gets or sets the mirror flag.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MirrorException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Align">
            <summary>
            Gets or sets the axis alignment of this member system.
            By default this returns False for a curved member system. The set cannot be valid for a curved member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAlignException">Raised when an unexpected error occurred while determining whether the axis of the member system is aligned or not.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAlignException">Raised when an unexpected error occurred while setting the alignment of the axis of the member system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.AxisPortType">
            <summary>
            Gets the read-only port index for along port.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Geometry">
            <summary>
            Gets the read-only port geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.TypeCategory">
            <summary>
            Gets or sets the type category of the member.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Type">
            <summary>
            Gets or sets the type of the member.
            Setting the type automatically sets the parent type category value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Priority">
            <summary>
            Gets or sets the priority of the member.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PriorityException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Connectable">
            <summary>
            Read-only property to get the connectable from the member system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Connections">
            <summary>
            Gets the connections connected to member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">Unexpected failure while getting the connections of the member system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.PortType">
            <summary>
            Read-only property to get the port type.
            </summary>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Length">
            <summary>
            Gets the length of this member system.
            </summary>
            <returns>Length value of this member system.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Area">
            <summary>
            Gets the area of this member system.
            </summary>
            <returns>Area value of this member system.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Form">
            <summary>
            Gets the form (closure) of this member system.
            </summary>
            <returns>Enumerated value of this member system closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Scope">
            <summary>
            Gets the scope (planarity) of this member system.
            </summary>
            <returns>Enumerated value of this member system planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Centroid">
            <summary>
            Gets the centroid of this member system.
            </summary>
            <returns>Position of the centroid of this member system. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.WBSItemParents">
            <summary>
            Read-only property to get WBSItem parents for this member system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.WBSProjects">
            <summary>
            Read-only property to get WBSProjects for this member system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.SplitConnections">
            <summary>
            Read-only collection of all MemberSplitConnections currently on the MemberSystem.
            Returns an empty collection if there are no current MemberSplitConnections on the MemberSystem.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception> 
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Splits">
            <summary>
            Gets the MemberSplitConnections from the MemberSystem.
            Returns an empty collection if there are no current MemberSplitConnections on the MemberSystem.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Raised when an unexpected failure occurred while getting the split connections.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>  
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper">
            <summary>
            Structure common interface helper class implementation 
            provides the common implementation for common interfaces across Plant and Marine.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.#ctor">
            <summary>
            Default constructor to create the instance of this class. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.Transform(Ingr.SP3D.Common.Middle.Matrix4X4,System.Object)">
            <summary>
            Transform the geometry with a given transformation matrix.
            </summary>
            <param name="oT4X4">Transfromation Matrix.</param>
            <param name="COMBO">COM Business Object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given T4X4.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetRange(System.Object)">
            <summary>
            Get the range box.
            </summary>
            <param name="COMBO">COM Business Object.</param>
            <returns>The objects range box.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetCatalogPart(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Get the catalog part for a specific object.
            </summary>
            <param name="businessObject">The object which will return its catalog part.</param>
            <returns>Returns the catalog part.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">Unexpected failure while getting the Catalog Part.</exception>
            <exception cref="T:System.ArgumentNullException">The partOccurrence object is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.SetCatalogPart(Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Set the catalog part (proxy) for a specific object.
            </summary>
            <param name="businessObject">The object which its part is being set.</param>
            <param name="part">The proxypart to be set.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">Unexpected failure while setting the Catalog Part.</exception>
            <exception cref="T:System.ArgumentNullException">The partOccurrence object is null.</exception>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.LogicalConnectionBase">
            <summary>
            Provides generalization of all entities supporting connection behavior and functionality.
            Base class for all logical connection classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Connection">
            <summary>
            Provides generalization of all entities supporting connection behavior and functionality.
            Base class for all connections.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Middle.Connection"/> class. Constructor needed by the 3D API to manage the COM BO.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Middle.Connection"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.FindPort(Ingr.SP3D.Common.Middle.IConnectable)">
            <summary>
            Finds a port from the connection on the given connectable parent.
            </summary>
            <param name="oConnectable"> Connectable on which the port is desired.</param>
            <returns> Port on the given connectable parent.</returns>
            <exception cref="T:System.ArgumentNullException">Given connectable is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FindPortException">Raised when there is failure to find the ports on the given connectable from the connection.</exception>
            <example>This is an example of the FindPort method.
            <code>
            Dim oFCStartSupported As FrameConnection = oMemberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim oFindPort As IPort = oFCStartSupported.FindPort(oMemberSystemSupported)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the read-only collection of ports of a given type from the connection.
            </summary>
            <param name="eType">PortType enumeration.</param>
            <returns>Read-only collection of ports participating in the connection.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the PortType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException">Raised when there is failure to enumerate the ports in the connection.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim allPorts As ReadOnlyCollection(Of IPort) = frameConnectionStartSupported.GetPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oFCStartSupported As FrameConnection = oMemberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            oFCStartSupported.SetUserDefinedName("Connection")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.OnSupportsInterface(System.String)">
            <summary>
            Called to determine if the derived class supports an interface through DynamicQI.
            This is called only if the class supports IJSupportsDynamicInteface in the metadata.
            </summary>
            <param name="strInterfaceName">Interface name.</param>
            <returns>
            True if the object supports the interface; otherwise False.
            </returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to the connection.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the given active name rule is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.Range">
            <summary>
            Gets the range of the connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Raised with an unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.SystemParent">
            <summary>
            Gets or sets the parent of the connection.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemParentException">Raised when there is failure to return the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToSetSystemParentException">Raised when there is failure to set the system hierarchy parent.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.AuxiliaryPorts">
            <summary>
            Gets or Sets a collection of auxiliary ports from a connection. Returns empty collection if no ports have been added.
            A value of null or empty for the property set will remove all auxiliary ports. 
            </summary>
            <value>
            The auxiliary ports.
            </value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.LogicalConnectionBase.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to the logical connection.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.LogicalConnectionBase.AuxiliaryPorts">
            <summary>
            Gets or Sets a collection of auxiliary ports from a connection. Returns empty collection if no ports have been added.
            A value of null or empty for the property set will remove all auxiliary ports.
            </summary>
            <value>
            The auxiliary ports.
            </value>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised if unable to get, set, or remove auxiliary ports from the member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the auxiliary ports collection conatain a duplicate object.</exception>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Plate">
            <summary>
             Plate base abstract class definition.
             Provides generalization of all entities supporting plate-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.#ctor">
            <summary>
            Constructor for the Plate class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Establishes the child relationship between this object and the child, given a system child.
            </summary>
            <param name="child"> A child to which a parent/child relationship should be created. </param>
            <example>This is an example of the AddSystemChild method.
            <code>
            Dim oParent As ISystem
            'Set the oParent to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oChild As ISystemChild 
            'Set the oChild object to an appropriate business object (e.g., ProfileSystem).
            oParent.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of the plate.
            </summary>
            <param name="Name">The new name.</param>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            oPlate.SetUserDefinedName("NewPlate")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the object.
            </summary>
            <param name="xAxisNew">X-axis of the plate or slab that needs to be set.</param>
            <param name="yAxisNew">Y-axis of the plate or slab that needs to be set.</param>
            <exception cref="T:System.NotImplementedException">Exception raised when the orientation is set on the plate or slab because it cannot be changed; as these objects are constrained.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">Unexpected failure while getting the connectable ports.</exception>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectablePorts As ReadOnlyCollection(Of IPort) = oPlate.GetConnectablePorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="portType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException">Unexpected failure while getting the connected ports.</exception>
            <example>This is an example of the GetConnectedPorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectedPorts As ReadOnlyCollection(Of IPort) = oPlate.GetConnectedPorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting the ports.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oPorts As ReadOnlyCollection(Of IPort) = oPlate.GetPorts(PortType.Edge)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="oConnectable"> A connectable object (IConnectable). </param>
            <param name="oConnectionEnum"> A read-only collection of connection objects. (IConnection) </param>
            <returns> True if the object is connected to this connectable; False otherwise. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsConnectedToException">Unexpected failure while IsConnected is called.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectable As IConnectable
            'Set the oConnectable object to an appropriate business object which can be connected with this connectable (e.g., stiffner, plate).
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oPlate.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectedObjects">
            <summary>
            Gets the connected objects.
            </summary>
            <returns>Read-Only collection of the connected objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectedObjects(System.Type)">
            <summary>
            Gets the connected objects of specific object type.
            </summary>
            <param name="connectedObjectType">Type of the connected object.</param>
            <returns>Read-Only collection of specific object type of the connected objects.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.SystemChildren">
            <summary>
            Gets a read-only collection of this object's system children.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.SystemParent">
            <summary>
            Gets the system parent of the Plate object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Range">
            <summary>
            Gets the range box representing the range of the plate.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Name">
            <summary>
            Gets the name of the plate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a plate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.XAxis">
            <summary>
            Gets the X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.YAxis">
            <summary>
            Gets the Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.ZAxis">
            <summary>
            Gets the Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Origin">
            <summary>
            Gets or sets the position of object.
            </summary>
            <exception cref="T:System.NotImplementedException">Exception raised when the origin is set on the plate or slab because it is not implemented.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
            <exception cref="T:System.NotImplementedException">Exception raised when the matrix is set on the plate or slab because these objects cannot be transformed.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Openings">
            <summary>
            Gets the openings on this plate.
            Returns an empty collection if an opening is not on this plate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate._ConnectableHelper">
            <summary>
            Gets the connectable helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior">
            <summary>     
            GraphicInputBehavior class is used to declare graphic input UI-related behavior in a custom GeometricConstructionDefinition class.
            </summary>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.#ctor(System.String,System.Drawing.Icon,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior"/> class.
            </summary>
            <param name="prompt">The prompt.</param>
            <param name="icon">The icon.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="enableSmartSketch">if set to <c>true</c> [enable smart sketch].</param>
            <param name="pointMakerProgID">The point maker.</param>
            <param name="roles">The roles.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.Prompt">
            <summary>
            Gets the prompt of the graphic input behavior.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.ToolTip">
            <summary>
            Gets the tool tip of the graphic input behavior.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.Icon">
            <summary>
            Gets the icon of the graphic input behavior.
            Returns null if there is no icon defined for this graphic input behavior.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.EnableSmartSketch">
            <summary>
            Gets a value indicating whether or not to enable smart sketch functionality.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.PointMakerProgID">
            <summary>
            Gets the point maker ProgID. If graphic input requiring a point for which the SmartSketch service need to enable.
            Returns null if there is no point maker defined for this graphic input behavior.
            <para>e.g. If locate the cursor near the intersection of 2 lines, then the intersection glyph shows up and the system will construct a point by using the PointMaker service.</para>
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInputBehavior.Roles">
            <summary>
            Gets the roles, to show that the input has been provided by the system.
            <para>e.g. If multiple GeometricConstructions require a CoordinateSystem as input and if this CoordinateSystem plays a role of “ActiveCS”, then,  
            if this role name is assigned to the input CoordinateSystem of all these GeometricConstructions, after locating the CoordinateSystem first 
            time for one of these GeometricConstructions, the moniker of the CoordinateSystem associated to the role name is persisted in the 
            value manager, so that any GeometricConstruction which requires an input CoordinateSystem playing the role of “ActiveCS” will have the 
            corresponding smart step on the GeometricConstruction ribbon bar pre-filled with this CoordinateSystem (the color of the smart step 
            is blue to show that the input has been provided by the system).</para>
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FacePosition">
            <summary>
            Face position of the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Bottom">
            <summary>
            Bottom face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Center">
            <summary>
            Center face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Top">
            <summary>
            Top face position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.PortFacePosition">
            <summary>
            Port face position of the member bounding the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Inner">
            <summary>
            Inner port face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Center">
            <summary>
            Center port face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Outer">
            <summary>
            Outer port face position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Continuity">
            <summary>
            Enumerated values for continuity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Continuity.Continuous">
            <summary>
            Profile system is continuous across a split.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Continuity.Intercostal">
            <summary>
            Profile system is split across a split.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GeometryOperationTypes">
            <summary>
            Enumerated values for geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Import">
            <summary>
            Sat file import geometry operation. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Cutout">
            <summary>
            Cutout or opening/cutout geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Bound">
            <summary>
            Bound geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Split">
            <summary>
            Split (design/planning/straking) geometry operation.  
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Generate">
            <summary>
            Generate operation (creates initial geometry of the entity).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.ChamferCut">
            <summary>
            Chamfer cut geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.FlangedEdge">
            <summary>
            Flanged edge geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.PartFinalTrim">
            <summary>
            Part final trim geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.AddFeature">
            <summary>
            Add feature geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.ThickenPlate">
            <summary>
            Thicken plate geometry operation.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GeometryStage">
            <summary>
            Enumerated values for geometry stage.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryStage.Initial">
            <summary>
            Initial geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryStage.Current">
            <summary>
            Current geometry.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.SectionFaceType">
            <summary>
            Enumerated values for section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Unknown">
            <summary>
            Unknown section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left">
            <summary>
            Left web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right">
            <summary>
            Right web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom">
            <summary>
            Bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top">
            <summary>
            Top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Profile">
            <summary>
            Profile section face type (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Top">
            <summary>
            Top left bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Bottom">
            <summary>
            Bottom left top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Top">
            <summary>
            Top right bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Bottom">
            <summary>
            Bottom right top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left">
            <summary>
            Left bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left">
            <summary>
            Left top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right">
            <summary>
            Right Bottom Flange.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right">
            <summary>
            Right top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Corner">
            <summary>
            Right web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Corner">
            <summary>
            Right web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Corner">
            <summary>
            Left web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Corner">
            <summary>
            Left web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Bottom_Corner">
            <summary>
            Top flange right bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Top_Corner">
            <summary>
            Bottom flange right top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Bottom_Corner">
            <summary>
            Top flange left bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Top_Corner">
            <summary>
            Bottom flange left top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Bottom_Corner">
            <summary>
            Bottom flange right bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Top_Corner">
            <summary>
            Top flange right top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Top_Corner">
            <summary>
            Top flange left top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Bottom_Corner">
            <summary>
            Bottom flange left bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Bottom">
            <summary>
            Bottom flange left bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Top">
            <summary>
            Top flange left top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Bottom">
            <summary>
            Bottom flange right bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Top">
            <summary>
            Top flange right top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Top_Corner">
            <summary>
            Left web bottom top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Bottom_Corner">
            <summary>
            Left web top bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Top_Corner">
            <summary>
            Right web bottom top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Bottom_Corner">
            <summary>
            Right web top bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom">
            <summary>
            Left web bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top">
            <summary>
            Left web top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom">
            <summary>
            Right web bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top">
            <summary>
            Right web top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Bottom_Corner">
            <summary>
            Left web bottom bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Top_Corner">
            <summary>
            Left web top top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Bottom_Corner">
            <summary>
            Right web bottom bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Top_Corner">
            <summary>
            Right web top top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left">
            <summary>
            Left section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right">
            <summary>
            Right section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left_Web_Top">
            <summary>
            The top of the left web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left_Web_Bottom">
            <summary>
            The bottom of the left web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right_Web_Top">
            <summary>
            The top of the right web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right_Web_Bottom">
            <summary>
            The bottom of the right web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Top">
            <summary>
            Top flange top (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Common">
            <summary>
            Common section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Left">
            <summary>
            Bottom left section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Right">
            <summary>
            Bottom right section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Left_Corner">
            <summary>
            Bottom left corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Left_Corner">
            <summary>
            Top left corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Right_Corner">
            <summary>
            Bottom right corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Right_Corner">
            <summary>
            Top right corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Idealized_Boundary">
            <summary>
            Idealized boundary section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Top">
            <summary>
            Top bottom flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Bottom">
            <summary>
            Bottom top flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Bottom">
            <summary>
            Bottom bottom flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Center">
            <summary>
            Web center section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Left">
            <summary>
            Left flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Right">
            <summary>
            Right flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Top">
            <summary>
            Top flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Bottom">
            <summary>
            Bottom flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Outer_Tube">
            <summary>
            Outer tube section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Tube">
            <summary>
            Inner tube section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left">
            <summary>
            Inner left web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right">
            <summary>
            Inner right web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Top">
            <summary>
            Inner left top web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Bottom">
            <summary>
            Inner left bottom web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Top">
            <summary>
            Inner right top web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Bottom">
            <summary>
            Inner right bottom web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Top">
            <summary>
            Inner top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Bottom">
            <summary>
            Inner bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Top_Corner">
            <summary>
            Inner left web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Bottom_Corner">
            <summary>
            Inner left web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Top_Corner">
            <summary>
            Inner right web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Bottom_Corner">
            <summary>
            Inner right web bottom corner section face type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ContextTypes">
            <summary>
            Enumerated values for topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.NoOperation">
            <summary>
            NoOperation topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Base">
            <summary>
            Base topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Offset">
            <summary>
            Offset topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Lateral">
            <summary>
            Lateral topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Split">
            <summary>
            Split topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Cutout">
            <summary>
            Cutout topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Chamfer">
            <summary>
            Chamfer topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Knuckle">
            <summary>
            Knuckle topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Miter">
            <summary>
            Miter topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Bend">
            <summary>
            Bend topology context.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyGeometryType">
            <summary>
            Enumerated values for topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Vertex">
            <summary>
            Vertex topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Edge">
            <summary>
            Edge topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Face">
            <summary>
            Face topology geometry type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GraphPosition">
            <summary>
            Enumerator for defining the position in the graph with respect to a geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GraphPosition.After">
            <summary>
            After graph position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GraphPosition.Before">
            <summary>
            Before graph position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPriority">
            <summary>
            Specifies values for member priority.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Undefined">
             <summary>
            Member priority is undefined.
             </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Primary">
            <summary>
            Member priority is primary.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Secondary">
             <summary>
            Member priority is secondary.
             </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Tertiary">
            <summary>
            Member priority is tertiary.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberAxisEnd">
            <summary>
            Specifies values for the member axis end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisEnd.Start">
            <summary>
            Start member axis end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisEnd.End">
            <summary>
            End member axis end.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberTypeCategory">
            <summary>
            Specifies values of the type category of the designed member, such as a beam or a column, etc.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Beam">
            <summary>
            Member category beam.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Column">
            <summary>
            Member category column.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Brace">
            <summary>
            Member category brace.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.TrussElement">
            <summary>
            Member category truss.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Cable">
            <summary>
            Member category cable.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.HandrailElement">
            <summary>
            Member category handrail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.StairElement">
            <summary>
            Member category stair.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.LadderElement">
            <summary>
            Member category ladder.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberType">
            <summary>
            Specifies to select the type of the designed member for a parent type category, such as cable or wire for cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Beam">
            <summary>
            Member type beam for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Girder">
            <summary>
            Member type girder for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Joist">
            <summary>
            Member type joist for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Girt">
            <summary>
            Member type girt for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Purlin">
            <summary>
            Member type purlin for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Stringer">
            <summary>
            Member type stringer for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Perimeter">
            <summary>
            Member type perimeter for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Column">
            <summary>
            Member type column for Column category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Stud">
            <summary>
            Member type stud for Column category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Brace">
            <summary>
            Member type brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HorizantalBrace">
            <summary>
            Member type horizantal brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.VerticalBrace">
            <summary>
            Member type vertical brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.KneeBrace">
            <summary>
            Member type knee brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.SagRod">
            <summary>
            Member type sag rod for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TrussElement">
            <summary>
            Member type truss element for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TopChord">
            <summary>
            Member type top chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.BottomChord">
            <summary>
            Member type bottam chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.MiddleChord">
            <summary>
            Member type middle chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Cable">
            <summary>
            Member type cable for Cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Wire">
            <summary>
            Member type wire for Cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HandrailElement">
            <summary>
            Member type handrail element for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Post">
            <summary>
            Member type post for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TopRail">
            <summary>
            Member type top rail for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.MidRail">
            <summary>
            Member type midrail for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.ToePlate">
            <summary>
            Member type toe plate for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.EndTreatment">
            <summary>
            Member type end treatment for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HandrailAttachment">
            <summary>
            Member type handrail attachment for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairElement">
            <summary>
            Member type stair element for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Thread">
            <summary>
            Member type thread for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairStringer">
            <summary>
            Member type stair stringer for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Support">
            <summary>
            Member type support for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Landing">
            <summary>
            Member type landing for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairAttachment">
            <summary>
            Member type stair attachment for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.LadderElement">
            <summary>
            Member type ladder element for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Rung">
            <summary>
            Member type rung for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Rail">
            <summary>
            Member type rail for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Hoop">
            <summary>
            Member type hoop for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.LadderAttachement">
            <summary>
            Member type ladder attachment for Ladder category.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus">
            <summary>
            Enumerator to provide validate status of the frame connection with the given set of related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.NoError">
            <summary>
            No error condition detected.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.UnexpectedError">
            <summary>
            Unexpected error condition detected.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.InvalidTypeOfObject">
            <summary>
            Invalid type of object in the related object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.BadNumberOfObjects">
            <summary>
            Insufficient number of related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.InconsistentRelations">
            <summary>
            Relations to the related objects inconsistently set.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.DuplicateObject">
            <summary>
            Duplicate related object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.BadGeometry">
            <summary>
            Geometry of the related object is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.NoWriteAccess">
            <summary>
            No write access to the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.AdditionalObjectsOptional">
            <summary>
            Additonal related objects are being set which might be optional.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.PositionRule">
            <summary>
            Enumerated values for member position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Intersection">
            <summary>
            Intersection position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Ratio">
            <summary>
            Ratio position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Distance">
            <summary>
            Distance position rule.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationValidationStatus">
            <summary>
            Enumerated values for foundation validation status.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.NoError">
            <summary>
            Supported or supporting objects are okay.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.SupportedObjectBad">
            <summary>
            Invalid supported object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.SupportingObjectBad">
            <summary>
            Invalid supporting object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.InvalidTypeOfSupportedObject">
            <summary>
            Type of object is not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.InvalidTypeOfSupportingObject">
            <summary>
            Type of object is not supporting.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberEndReleases">
            <summary>
            Enumerated values for member end releases.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.UserDefined">
            <summary>
            User-defined member end release.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZRYRZ">
            <summary>
            Free in X and Z-direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZRYRZ">
            <summary>
            Free in Z-direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRYRZ">
            <summary>
            Free in X and Y-direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRYRZ">
            <summary>
            Free in Y-direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRYRZ">
            <summary>
            Free in X-direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRYRZ">
            <summary>
            Free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRZ">
            <summary>
            Free in X and Y-direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRZ">
            <summary>
            Free in Y-direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRZ">
            <summary>
            Free in X-direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRZ">
            <summary>
            Free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZRY">
            <summary>
            Free in X and Z-direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZRY">
            <summary>
            Free in Z-direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRY">
            <summary>
            Free in X and Y-direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRY">
            <summary>
            Free in Y-direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRY">
            <summary>
            Free in X-direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRY">
            <summary>
            Free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZ">
            <summary>
            Free in X and Z-direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZ">
            <summary>
            Free in Z-direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXY">
            <summary>
            Free in X and Y-direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeY">
            <summary>
            Free in Y-direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeX">
            <summary>
            Free in X-direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeNone">
            <summary>
            Fixed in all directions and rotations.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.DisplacementType">
            <summary>
            Enumerated values for displacement type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.DisplacementType.Free">
            <summary>
            Free displacement on the specified direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.DisplacementType.Fixed">
            <summary>
            Fixed displacement on the specified direction.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FeatureType">
            <summary>
            Enumerated values for feature type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.Slot">
            <summary>
            Feature type slot.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.Edge">
            <summary>
            Feature type edge.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.Corner">
            <summary>
            Feature type corner.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.WebCut">
            <summary>
            Feature type web cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.FlangeCut">
            <summary>
            Feature type flange cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.WaterStop">
            <summary>
            Feature type water stop.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.Chamfer">
            <summary>
            Feature type chamfer.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.Trim">
            <summary>
            Trims the end of a profile. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FeatureType.GeneralCutOut">
            <summary>
            Cope feature or any other feature which removes material.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.EdgeFeatureConstructionMethod">
            <summary>
            Enumerated values for defining the edge feature construction method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EdgeFeatureConstructionMethod.AlongPoint">
            <summary>
            Edge feature construction method defines point along the edge.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EdgeFeatureConstructionMethod.SeamOrKnuckleIntersectionPoint">
            <summary>
            Edge feature construction method defines the point at the intersection of seam/knuckle and edge.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EdgeFeatureConstructionMethod.OffsetPoint">
            <summary>
            Edge feature construction method defines the point based upon the reference plane, offset method, and offset value.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod">
            <summary>
            Enumerated values for defining the landing curve offset method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod.Girth">
            <summary>
            Girth landing curve offset type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod.Vertical">
            <summary>
            Vertical landing curve offset type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod.Transverse">
            <summary>
            Transverse landing curve offset type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod.Longitudinal">
            <summary>
            Longitudinal landing curve offset type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry">
            <summary>
            Enumerated values for symmetry options for board management.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry.NotSet">
            <summary>
            Symmetry not set.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry.PortAndStarboard">
            <summary>
            Symmetry along port and starboard.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry.PortOnly">
            <summary>
            Symmetry along port only.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry.StarboardOnly">
            <summary>
            Symmetry along starboard only.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoardManagementSymmetry.Centered">
            <summary>
            Symmetry along center.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.PilePattern">
            <summary>
            Pattern type for placement of piles on a surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PilePattern.Rectangular">
            <summary>
            Rectangular pile pattern.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PilePattern.Circular">
            <summary>
            Circular pile pattern.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PilePattern.Triangular">
            <summary>
            Triangular pile pattern.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PilePattern.Undefined">
            <summary>
            Undefined pile pattern.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ContourType">
            <summary>
            Enumerated values for the contour type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourType.Close">
            <summary>
            Closed contour curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourType.Open">
            <summary>
            Open contour curve.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ContourUsageType">
            <summary>
            Enumerated values for the objects on which the contour is applied.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.OpeningOnSlab">
            <summary>
            Opening objects on slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.OpeningOnWall">
            <summary>
            Opening objects on wall.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.OpeningOnMember">
            <summary>
            Opening objects on member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.OpeningOnGenericPlatePart">
            <summary>
            Opening objects on generic plate part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.OpeningOnPlate">
            <summary>
            Opening objects on plate.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.SlabBoundary">
            <summary>
            Boundary contours on slab.        
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.WallBoundary">
            <summary>
            Boundary contours on wall.        
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.PlateBoundary">
            <summary>
            Boundary contours on plate.        
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.Seam">
            <summary>
            Contour for seams.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.Stiffener">
            <summary>
            Contour for stiffeners.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.Features">
            <summary>
            Contour for features.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContourUsageType.ManufacturingMarking">
            <summary>
            Contour for manufacturing markings.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.InputType">
            <summary>
            Used to document which entity by index is retrieved from the symbol reference collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.InputType.SketchingPlane">
            <summary>
            Identifies the sketching plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.InputType.ReferenceCollection">
            <summary>
            Identifies the reference collection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.InputType.CoordinateSystem">
            <summary>
            Identifies the coordinate system.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CuttingLimitType">
            <summary>
            Enumerated values for the opening object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CuttingLimitType.ThroughAll">
            <summary>
            Completely penetrates the object.
            This option is available for all objects in which an opening can be placed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CuttingLimitType.ThroughNext">
            <summary>
            Penetrates only one side of an object.
            This option is available only when the object that is selected for the opening
            is a member whose cross section has parallel webs or flanges, or 
            a wall that turns back on itself. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CuttingLimitType.UserDefined">
            <summary>
            The penetration depth of the opening.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.OpeningDesignType">
            <summary>
            Enumerated values for the opening design type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.PermanentAccess">
            <summary>
            Permanent access = 0
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.TemporaryAccess">
            <summary>
            Temporary access = 1
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.Lightening">
            <summary>
            Lightening = 2
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.AirEscape">
            <summary>
            Air escape = 3
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.LiquidEscape">
            <summary>
            Liquid escape = 4
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.AirAndLiquidEscape">
            <summary>
            Air and liquid escape = 5
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.Foothold">
            <summary>
            Foothold = 6
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningDesignType.Martyr">
            <summary>
            Martyr = 7
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.OpeningPlanningMethod">
            <summary>
            Enumerated values for the opening planning method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningPlanningMethod.Design">
            <summary>
            Design = 0
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningPlanningMethod.Shop">
            <summary>
            Shop = 1
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningPlanningMethod.Field">
            <summary>
            Field = 2
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.OpeningProductionMethod">
            <summary>
            Enumerated values for the opening production method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningProductionMethod.Cut">
            <summary>
            Cut = 0
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningProductionMethod.Mark">
            <summary>
            Mark = 1
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningProductionMethod.Bridge">
            <summary>
            Bridge = 2
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.OpeningProductionMethod.ChillHolePatch">
            <summary>
            Chill hole patch = 3
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.BoundaryDefinitionType">
            <summary>
            Enumerated values for the boundary definition type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinitionType.BoundingObject">
            <summary>
            Bounding object = 0
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinitionType.BoundingObjectFace">
            <summary>
            Bounding object face = 1
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinitionType.Contour">
            <summary>
            Contour = 2
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GenericPlatePartType">
            <summary>
            Enumerated values for the generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Bracket">
            <summary>
            Bracket generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Collar">
            <summary>
            Collar generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Pad">
            <summary>
            Pad generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Parametric">
            <summary>
            Parametric generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.BasePlate">
            <summary>
            Base plate generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Stiffener">
            <summary>
            Stiffener generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.Gusset">
            <summary>
            Gusset generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.BearingPlate">
            <summary>
            Bearing plate generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.SplicePlate">
            <summary>
            Splice plate generic plate part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartType.BentPlate">
            <summary>
            Bent plate generic plate part type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory">
            <summary>
            Enumerated values for the generic plate part Category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Untyped">
            <summary>
            Untyped generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Bracket">
            <summary>
            Bracket generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Collar">
            <summary>
            Collar generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Pad">
            <summary>
            Pad generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Parametric">
            <summary>
            Parametric generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.BasePlate">
            <summary>
            Base plate generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Stiffener">
            <summary>
            Stiffener generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.Gusset">
            <summary>
            Gusset generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.BearingPlate">
            <summary>
            Bearing plate generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.SplicePlate">
            <summary>
            Splice plate generic plate part category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GenericPlatePartCategory.BentPlate">
            <summary>
            Bent plate generic plate part category.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.EndCutType">
            <summary>
            Enumerator for identifying the type of end cut of the profile part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.WebCut">
            <summary>
            The end cut of the member part is a web cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.FlangeCutTop">
            <summary>
            The end cut of the member part is a flange cut top.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.FlangeCutBottom">
            <summary>
            The end cut of the member part is a flange cut bottom.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberAxisPortType">
            <summary>
            Enumerator for identifying the axis port type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.Along">
            <summary>
            Port is not at an end of the axis of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.Start">
            <summary>
            Port is at the start of the axis of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.End">
            <summary>
            Port is at the end of the axis of the member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ChamferExtensionType">
            <summary>
            Enumerator for identifying the chamfer extension.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ChamferExtensionType.NoExtension">
            <summary>
            No extension.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ChamferExtensionType.EntireEdge">
            <summary>
            The chamfer entire edge.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ChamferExtensionType.ExtendByValue">
            <summary>
            Extend by value.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CornerFeatureConstructionMethod">
            <summary>
            Enumerated values for defining the corner feature construction method.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CornerFeatureConstructionMethod.PortsOrPosition">
            <summary>
            Defines corner feature constructed with adjacent ports or corner position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CornerFeatureConstructionMethod.PortAndSlotEdge">
            <summary>
            Defines corner feature constructed with adjacent port and slot edge. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CornerFeatureConstructionMethod.SlotEdgeAndPort">
            <summary>
            Defines corner feature constructed with slot edge and adjacent port. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CornerFeatureConstructionMethod.SlotEdges">
            <summary>
            Defines corner feature constructed with slot edges.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousPatch">
            <summary>
            AmbiguousPatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousPatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor used to create the AmbiguousPatch object.
            </summary>
            <param name="oGeometry">BusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousPatch.Calculate(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Calculates the range for a given geometry.
            </summary>
            <param name="oGeometry">BusinessObject</param>
            <returns>Range box.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousPatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousPatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch">
            <summary>
            AmbiguousSurfacePatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousSurfacePatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch">
            <summary>
            AmbiguousCurvePatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousPatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch">
            <summary>
            AmbiguousSolidPatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousSurfacePatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyPort">
            <summary>
            Wrapper for CommonStruct and ship structure TopologyPort. This class provides
            ports on the actual geometry of the entity.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructPortBase">
            <summary>
            Base class for the Port classes. This class provides generalization of all 
            entities supporting port-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortBase.GetConnection(Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Gets the connection with another port. The connection can be logical, assembly, or physical. 
            Returns null if there is no connection between this port and another port.
            </summary>
            <param name="candidatePort">The other port used in the connection.</param>
            <returns>The connection between this and another port.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the candidate port argument is null.</exception>
            <example>This is an example of how to use the GetConnection method.
            <code>
            Dim structPortBase As StructPortBase 'Substitute this line with the actual structure port base instance.
            Dim candidatePort As IPort 'Substitute this line with the actual IPort instance.
            
            Dim connection As IConnection = structPortBase.GetConnection(candidatePort)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortBase.GetRelatedFreeEndCutFromPort">
            <summary>
            Gets the related free end cut from port.
            </summary>
            <returns></returns>
            <example>This is an example of the GetRelatedFreeEndCutFromPort method. 
            <code>
            Dim port As StructPortBase = Nothing 'Get start/base port from stiffener part or member part
            Dim freeEndCut As BusinessObject = port.GetRelatedFreeEndCutFromPort()
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Connectable">
            <summary>
            Gets the connectable of the port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">Failed to find the port on the given connectable.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Connections">
            <summary>
            Gets the connections in which this port participates.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">Unexpected failure while getting the connections.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.PortType">
            <summary>
            Gets the type of port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the port type.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Geometry">
            <summary>
            Gets the port geometry. 
            MemberAxisPort returns the end point or the axis. 
            TopologyPort returns the topology geometry. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException">Unexpected failure while getting the port geometry.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetRelatedPort(System.Boolean,System.Boolean)">
            <summary>
            Gets the global topology port.
            </summary>
            <param name="priorGeometry">Indicates whether or not to use the prior geometry.</param>
            <param name="globalPort">Indicates whether or not to use the global port.</param>
            <returns>Global topology port.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetRelatedPort(Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Boolean)">
            <summary>
            Gets the global topology port before geometry operation for plant objects and subport topology port for marine objects.
            </summary>
            <param name="operationType">Type of the operation.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="globalPort">If set to True, then a global port.</param>
            <returns>A related topology port based on the provided inputs.</returns>  
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if an input enumerator value is not valid.</exception>  
            <example>This is an example of the GetRelatedPort method.
            <code>     
            'Substitute with actual topology port instance.
            Dim relatedPort As TopologyPort = topologyPort.GetRelatedPort(GeometryOperationTypes.Generate, GraphPosition.After, False)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Equals(Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Indicates whether the current topology port is equal to another topology port. 
            Recommended type-safe equals method.
            </summary>
            <param name="other">The topology port to test for equality.</param>
            <returns>True if the other topology port is equal; otherwise, False.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, False.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance. Suitable for use in hashing algorithms and data structures such as a hash table.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.op_Equality(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="topologyPort1">The 1st topology port.</param>
            <param name="topologyPort2">The 2nd topology port.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.op_Inequality(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="topologyPort1">The 1st topology port.</param>
            <param name="topologyPort2">The 2nd topology port.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether a given point is on this topology port or not.
            </summary>
            <param name="pos">Point to determine whether on this surface or curve.</param>
            <returns>If True, then the point is on the surface or curve; if False, then the point is not on the surface or curve.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim bIsPointOn As Boolean = oSurface.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ScopeNormal(Ingr.SP3D.Common.Middle.SurfaceScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Determines the planarity and normal of the topology port.
            </summary>
            <param name="eScope">SurfaceScopeType defining the planarity of the surface.</param>
            <param name="vecNormal">Normal vector.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>SurfaceScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Surface scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Surface is planar.</description>
               </item>
               <item>
                   <term>NonPlanar = 2</term>
                   <description>Surface is non-planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim eScope As SurfaceScopeType
            Dim oVecNormal As Vector
            oSurface.ScopeNormal(eScope, oVecNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the topology port along the vector from the given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <param name="vecProj">Vector in which to project along. As an optional argument, if null,
                                  then the function projects along the vector normal to the curve or surface.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oVecProj As New Vector(0, 0, 1)
            Dim oProjectPoint As Position = topologyPort.ProjectPoint(oPos, oVecProj)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the surface or curve along the normal vector from the given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oProjectPoint As Position = topologyPort.ProjectPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.OutwardNormalAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the outward normal at a given point.
            </summary>
            <param name="pos">Position in which to find the outward normal.</param>
            <returns>Vector - outward normal.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the OutwardNormalAtPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oOutwardNormal As Vector = oSurface.OutwardNormalAtPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this surface or curve and an input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point at the minimum distance on this surface or curve.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim point3d As New Point3d(1.5, 0, 0)
            Dim minimumDistance As Double
            Dim posSrcPos As Position
            topologyPort.DistanceBetween(point3d, dDist, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface or curve and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point at the minimum distance on this surface or curve.</param>
            <param name="posInPos">Point at the minimum distance on the input curve.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim dDist As Double
            Dim posSrcPos, posInPos As Position
            oSurface.DistanceBetween(oInCurve, dDist, posSrcPos, posInPos)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface or curve and an input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point at the minimum distance on this surface or curve.</param>
            <param name="posInPos">Point at the minimum distance on the input surface.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper or CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim dDist As Double 
            Dim oPosSrcPos, oPosInPos As Position 
            oSurface.DistanceBetween(oInSurface, dDist, oPosSrcPos, oPosInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this surface and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colCurves">Output collection of curves.  
                                    Note that this could be a collection of Point3d objects.</param>
            <param name="eIntersectCode">GeometryIntersectionType describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            oSurface.Intersect(oInCurve, colCurves, eIntersectCode)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and an input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Output collection of curves.
                                    Note that this could be a collection of Point3D objects.</param>
            <param name="eIntersectCode">GeometryIntersectionType describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of ICurve) = Nothing
            oSurface.Intersect(oInSurface, colCurves, eIntersectCode)
            </code>
            </example>    
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroid(Ingr.SP3D.Common.Middle.Line3d,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds one or more centroids of this surface or curve.
            </summary>
            <param name="line">Optional, but if given, helps locate which centroid to return.</param>
            <param name="colCentroids">Multiple centroids are returned only when a projection can be broken.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Centroid method.
            <code>
            oSurface.Centroid(oLine, colCentroids)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.LocatedCentroids(Ingr.SP3D.Common.Middle.Line3d)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="line">Line for locating the centroids.</param>
            <returns>Centroid positions which are located with the input line.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroids">
            <summary>
            Finds one or more centroids of the surface.
            </summary>
            <returns>All centroid positions.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroid">
            <summary>
            Finds the centroid of the surface.
            </summary>
            <returns>Centroid of the whole surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of this curve.</param>
            <param name="vecNormal">The normal vector of this curve.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim eScope As CurveScopeType
            Dim oVecNormal As Vector
            oCurve.ScopeNormal(eScope, oVecNormal)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes the center, area, moments of inertia, and principle axes of lamina (e.g., a sheet metal) bounded by a closed planar curve.
            </summary>
            <param name="dArea">Area of the the lamina.</param>
            <param name="posCentroid">Centroid of the lamina.</param>
            <param name="dInteriaX">Moment of inertia to the centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to the centroidal Y-axis.</param>
            <param name="dInertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="dMajorPrncplInertia">Principle moment of inertia to the major axis.</param>
            <param name="dMinorPrncplInertia">Principle moment of inertia to the minor axis.</param>
            <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
            <param name="MjIAxis">Major principle axis.</param>
            <param name="MnIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim dArea, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis As Vector
            oCurve.AreaCentroidMomentsOfInertia(dArea, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia, oMjIAxis, oMnIAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes length, centroid, moments of inertia, and principle axes of an open or closed thin wire.
            </summary>
            <param name="dLength">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="dInteriaX">Moment of inertia to the centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to the centroidal Y-axis.</param>
            <param name="dInertiaZ">Moment of inertia to the centroidal Z-axis.</param>
            <param name="dPrncplInertiaU">Principle moment of inertia to uDir.</param>
            <param name="dPrncplInertiaV">Principle moment of inertia to vDir.</param>
            <param name="dPrncplInertiaN">Principle moment of inertia to nDir.</param>
            <param name="AxisU">Major principle axis.</param>
            <param name="AxisV">Minor principle axis.</param>
            <param name="AxisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim dLength, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertiaN As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis, oNIAxis As Vector
            oCurve.CentroidInertiaForWire(dLength, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertiaN, dPolarInertia, oMjIAxis, oMnIAxis, oNAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this curve.
            </summary>
            <param name="posStart">Start position.</param>
            <param name="posEnd">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim oPosStart, oPosEnd As Position
            oCurve.EndPoints(oPosStart, oPosEnd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this curve and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="eIntersectCode">Enumerator describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            oCurve.Intersect(oInCurve, colIntPos, colOverlapPos, eIntersectCode)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this curve and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Collection of curve objects.</param>
            <param name="eIntersectCode">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            oCurve.Intersect(oInSurface, colCurves, eIntersectCode)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of this curve.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            oCurve.SelfIntersect(colIntPos, colOverlapPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            This method finds a point along a curve at a given distance from the given 
            start point on the curve. If the given point does not lie on the curve, 
            it is along normal to the curve (minimum distance). 
            </summary>
            <param name="posStart">Position from which to start.</param>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim oPosStart As New Position(1, 1, 1)
            Dim dDist As Double = 1.0
            Dim oPointDistanceAlong As Position = oCurve.PointAtDistanceAlong(oPosStart, dDist)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along a curve at a given distance from the start of the curve.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim dDist As Double = 1.0
            Dim oPointDistanceAlong As Position = oCurve.PointAtDistanceAlong(dDist)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oTangentPoint As Vector = oCurve.ProjectPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="complexString">ComplexString3d</param>
            <exception cref="T:System.ArgumentNullException">iCS cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            oPlane.AddBoundary(oCS)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.RemoveBoundary(System.Int32)">
            <summary>
            Removes boundary i.
            </summary>
            <param name="i">Integer value specifying the boundary to be removed.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the RemoveBoundary method.
            <code>
            oPlane.RemoveBoundary(1)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the RemoveAllBoundaries method.
            <code>
            oPlane.RemoveAllBoundaries()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at index i.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="complexString">Output boundary.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the GetBoundary method.
            <code>
            Dim oCS As ComplexString3d
            oPlane.GetBoundary(1, oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at index i.
            <para>Note: This method is not adding a boundary, but replacing the boundary which is at index i.</para>
            </summary>
            <param name="i">Integer index value.</param>
            <param name="complexString">ComplexString3d</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the SetBoundary method.
            <code>
            oPlane.SetBoundary(1, oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the GetBoundaries method.
            <code>
            oPlane.GetBoundaries(colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries and removes any previous boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the SetBoundaries method.
            <code>
            oPlane.SetBoundaries(oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a hole to one or more existing boundaries.
            </summary>
            <param name="complexString">ComplexString3d defining a hole.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
            <example>This is an example of the AddHole method.
            <code>
            oPlane.AddHole(oCS)
            </code>
            </example>         
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.OnSupportsInterface(System.String)">
            <summary>
            Determines whether the input interface is supported by the dynamic query interface mechanism.
            </summary>
            <param name="strInterfaceName">Interface name.</param>
            <returns>True if the objects support the interface by the dynamic query interface; otherwise False.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetVertexPortsOnEdge(Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Gets the vertex ports on the given edge port.
            </summary>
            <param name="edgePort">The edge port.</param>
            <returns>
            Read-only collection of TopologyPorts.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if edgePort argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised if given port is not an edge port.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the vertex ports on the edge.</exception>
            <example>This is an example of the GetVertexPortsOnEdge method.
            <code>
            Dim edgePort As TopologyPort ' Subsitute this line with the actual code to get the edge port.
            Dim vertexPorts As ReadOnlyCollection(Of TopologyPort) = TopologyPort.GetVertexPortsOnEdge(edgePort)
            </code>
            </example>          
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetFirstPointFromBody">
            <summary>
            Gets the first point from body. Port objects in COM do not implement IJPoint, so direct query for IJPoint will not work
            Instead use point graph body from its geometry and get the first position from that.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceFromPoint(Ingr.SP3D.Common.Middle.IPoint)">
            <summary>
            Finds the distance between two points.
            </summary>
            <param name="point">Point from which to calculate the distance.</param>
            <returns>
            Distance as a double.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is performed on a port whose type is not a vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while getting the distance from the point.</exception>
            <example>This is an example of the DistanceFromPoint method.
            <code>
            Dim vertexPort As TopologyPort ' Subsitute this line with the actual code to get the vertex port.
            Dim point As Point3d = new Point3d(0,0,0) 
            Dim distance As Double = vertexPort.DistanceFromPoint(point)
            </code>
            </example>          
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.EqualPositions(Ingr.SP3D.Common.Middle.IPoint)">
            <summary>
            Determines whether this point and an input point are equal.
            </summary>
            <param name="point">Point in which to check the position.</param>
            <returns>
            True, if the position of the given point is equal; False otherwise. 
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is performed on a port whose type is not a vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while trying to determine whether the position is equal.</exception>
            <example>This is an example of the EqualPositions method.
            <code>
            Dim vertexPort As TopologyPort ' Subsitute this line with the actual code to get the vertex port.
            Dim point As Point3d = new Point3d(0,0,0) 
            Dim isPositionEqual As Boolean = vertexPort.EqualPositions(point)
            </code>
            </example>          
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.OperatorId">
            <summary>
            Gets the operator identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException">Unexpected failure while getting the OperatorId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.OperationId">
            <summary>
            Gets the operation identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetOperationIdException">Unexpected failure while getting the OperationId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.ContextId">
            <summary>
            Gets the context identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetContextIdException">Unexpected failure while getting the ContextId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.SectionId">
            <summary>
            Gets the section face identifier (subport ID) associated with the structure port moniker. This can be extended by using the Symbol Editor XML file.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionIdException">Unexpected failure while getting the SectionId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.TopologyGeometryType">
            <summary>
            Gets the geometry type of the topology proxy for the port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException">Unexpected failure while getting the TopologyProxyType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Range">
            <summary>
            Gets the range box of this topology port. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.uForm">
            <summary>
            Gets the closure of the topology port in U-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.vForm">
            <summary>
            Gets the closure of the topology port in V-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Length">
            <summary>
            Gets the length of this curve.
            </summary>
            <returns>Length value of this curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Area">
            <summary>
            Gets the area of this surface or curve.
            </summary>
            <returns>Area value of this curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Form">
            <summary>
            Gets the form (closure) of this curve.
            </summary>
            <returns>Enumerated value of this curve closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Scope">
            <summary>
            Gets the scope (planarity) of this curve.
            </summary>
            <returns>Enumerated value of this curve planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#Centroid">
            <summary>
            Gets the centroid of this curve.
            </summary>
            <returns>Position of the centroid of this curve. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.RootPoint">
            <summary>
            Gets or sets the root point.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Normal">
            <summary>
            Gets or sets the plane normal.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.VDirection">
            <summary>
            Gets the V-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Reversed">
            <summary>
            Gets or sets the Reversed property. Get reverses the V-direction of the plane.
            Normally (Reversed=False) the V-direction is determined by the normal X U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method..</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.BoundaryCount">
            <summary>
            Returns the number of boundaries.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Infinite">
            <summary>
            Gets or sets whether this line is infinite.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state, as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            <para>Note: Do not call this routine for set if your line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.EndPoint">
            <summary>
            Gets or sets the end point of the line.
            <para>Note: Do not call this routine for set if your line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Direction">
            <summary>
            Gets or sets the direction vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state, as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument has been used with the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.PortAfterGenerate">
            <summary>
            Gets the port after generate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.EquivalentCurrentPort">
            <summary>
            Gets the equivalent port corresponding to the current geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Position">
            <summary>
            Gets or sets the position. Get returns a read-only Position object.
            </summary>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is performed on a port whose type is not a vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while trying to get or set the position from a point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to set position on Port.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.X">
            <summary>
            Gets or sets the X-coordinate.
            </summary>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is tried on a port whose type is not a vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while trying to get or set the X-coordinate from a point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to set X-coordinate on a port.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Y">
            <summary>
            Gets or sets the Y-coordinate.
            </summary>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is tried on a port whose type is not vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while trying to get or set the Y-coordinate from a point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to set the Y-coordinate on a port.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Z">
            <summary>
            Gets or sets the Z-coordinate.
            </summary>
            <exception cref="T:System.InvalidOperationException">Raised if the operation is tried on a port whose type is not a vertex.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected exception occurred while trying to get or set the Z-coordinate from a point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error is encountered while getting the point geometry from a vertex port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to set the Z-coordinate on a port.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Foundation">
            <summary>
            Implementation for Foundation abstract class. This class provides generalization
            of all behavior which is supported by all foundations.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetInputHelper">
            <summary>
            Gets the input helper.  Must be implemented by the derived class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetSupportElements(System.Object,System.Object)">
            <summary>
            Gets the supported and supporting elements.  Must be implemented by the derived class.
            </summary>
            <param name="supportedElements">Supported elements.</param>
            <param name="supportingElements">Supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the supported and supporting elements.  Must be implemented by the derived class.
            </summary>
            <param name="supportedElements">Supported elements.</param>
            <param name="supportingElements">Supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetSupportCollection(System.Object)">
            <summary>
            Converts the COM elements to .NET business objects.  Must be implemented by the derived class.
            </summary>
            <param name="elements">IJElement collection.</param>
            <returns>Collection of .NET business objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetInputCriteria">
            <summary>
            Gets the input criteria string to get the input values based upon this.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateInputObjectType(System.Object)">
            <summary>
            Checks whether the input object passed is valid or not.
            </summary>
            <param name="supportedObject">The input supported object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Gets the valid supported objects.
            </summary>
            <param name="supportedObjects">Collection of input supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Applies the given matrix on the foundation.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given oT4X4.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <example>
            <code>
            'Example code to use Transform method.
            Dim matrix As New Matrix4X4() 
            'Translate by 20m. 
            matrix.SetIndexValue(12, 20R) 
            footing.Transform(matrix) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validates the supported and supporting collections for a given part.
            </summary>
            <param name="part">Foundation part.</param>
            <param name="supportedObjects">Collection of supported business objects.</param>
            <param name="supportingObjects">Collection of supporting business objects.</param>
            <returns>Returns an enumerator of FoundationValidationStatus.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if a parameter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateInputsForPart(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            
            </summary>
            <param name="part"></param>
            <param name="supportedObjects"></param>
            <param name="supportingObjects"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.SetMaterial(System.String,Ingr.SP3D.ReferenceData.Middle.Material)">
            <summary>
            Sets the material on the foundation for the given component.
            </summary>
            <param name="componentName">Name of the component.</param>
            <param name="material">The catalog material.</param>
            <exception cref="T:System.ArgumentNullException">Raised if any of the parameters are null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">Raised if there is a failure while setting the material.</exception>   
            <example>This is an example of SetMaterial.
            <code>        
            'Need to get material object by providing valid material type and material grade
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            'Need to get valid footing or equipment foundation object
            Dim footing As Footing = Nothing
            
            'Set the material on the grout component of the footing
            footing.SetMaterial("Grout", material)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetMaterial(System.String)">
             <summary>
             Gets the material for the specified component. If the material is not set then it returns null.
             </summary>
             <param name="componentName">Name of the component.</param>
             <returns>The material business object.  If the material is not set then it returns null.</returns>
             <exception cref="T:System.ArgumentNullException">Raised if any of the paramters are null.</exception>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">Raised if there is a failure while getting the material.</exception>
             <example>This is an example of GetMaterial.
             <code>        
             'Need to get valid footing or equipment foundation object
             Dim footing As Footing = Nothing
            
             'Get the material of the grout component from the footing
             Dim material As Material = footing.GetMaterial("Grout")
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.RemoveMaterial(System.String)">
            <summary>
            Removes the material on the foundation for the specified component.
            </summary>
            <param name="componentName">Name of the component.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the componentName parameter is null or empty.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException">Raised if an unexpected error occurred while removing the relation.</exception>
            <example>This is an example of RemoveMaterial.
            <code>        
            'Need to get valid footing or equipment foundation object
            Dim footing As Footing = Nothing
            
            'Remove the material of the grout component from the footing
            footing.RemoveMaterial("Grout")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.SetMaterialRelationship(Ingr.SP3D.ReferenceData.Middle.Material,System.String)">
            <summary>
            Sets the material relationship on the foundation for the given component.
            </summary>
            <param name="material">The material.</param>
            <param name="componentName">Name of the component.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">Raised if there is a failure while setting the material.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetTargetObjects">
            <summary>
            Gets the target objects.
            </summary>
            <returns>Target object relations collection.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised if there is an error while getting the relations collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetDefinitionObject">
            <summary>
            Gets the smart occurrence definition object.
            </summary>
            <returns>Definition object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsSingleSupported(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Checks whether the part is single-supported.
            </summary>
            <param name="part">Foundation part.</param>
            <returns>Returns True if the supported cardinality of this part is 1 (one); False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsSupportingPlaneReqdOrOpt(Ingr.SP3D.ReferenceData.Middle.Part,System.Boolean@,System.Boolean@)">
            <summary>
            Checks whether the supporting plane for the part is required or optional.
            </summary>
            <param name="oPart">Foundation part.</param>
            <param name="bPlaneReq">Identifies whether the plane is required.</param>
            <param name="bPlaneOpt">Identifies whether the plane is optional.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ProcessCardinalityString(System.String,System.Int32@,System.Int32@)">
            <summary>
            Parses the cardinality string.
            </summary>
            <param name="strCarnalityString">The cardinality string.</param>
            <param name="lLowerLimit">The cardinality lower limit.</param>
            <param name="lUpperLimit">The cardinality upper limit.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsValidInputForSupportedObject(System.Object,System.Object)">
            <summary>
            Validates the supported objects.
            </summary>
            <param name="oInputSupportedElem">Supported element to validate.</param>
            <param name="oSupportedElems">Supported element collection.</param>
            <returns>True if valid; otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException">Failed to retrieve the information of the supported object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsValidInputForSupportingObject(System.Object,System.Object)">
            <summary>
            Validates the supporting object.
            </summary>
            <param name="oInputSupportingElem">Supporting element to validate.</param>
            <param name="oSupportedElems">Supported element collection.</param>
            <returns>True if valid; otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException">Failed to retrieve the information of the supporting object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateSupportedObj(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Private method to validate the supported objects.  
            </summary>
            <param name="supportedObjects">The collection of supported objects.</param>
            <returns>FoundationValidationStatus.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateSupportingObj(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Private method to validate the supporting objects.
            </summary>
            <param name="oSupportingObjectColl">The collection of supporting objects.</param>
            <param name="oSupportedObjectColl">The collection of supported objects.</param>
            <returns>FoundationValidationStatus</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.Part">
            <summary>
            Gets or sets the definition or part on the foundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.SupportedObjects">
            <summary>
            Gets or sets the supported objects for foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Unexpected failure while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentNullException">Passed value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the supported objects collection count is less than one.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Unexpected failure while setting the supported objects.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.SupportingObjects">
            <summary>
            Gets or sets the supporting objects for foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException">Unexpected failure while getting the supporting objects.</exception>
            <exception cref="T:System.ArgumentNullException">Passed value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the supporting objects collection count is less than one.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException">Unexpected failure while setting the supporting objects.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute">
            <summary>
            ParameterAttribute is followed by Parameter field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a Parameter in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, and type.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter which is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, and default value.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, 0.2)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, and default value.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, default value, and whether or not the parameter will be displayed in theribbon bar.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2, true)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary unit name, and default value.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">The type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, 0.2)]
                public Parameter parameter;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary-secondary-tertiary unit name, and default value.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">The type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2)]
                public Parameter parameter;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary-secondary-tertiary unit name, 
            default value, and whether or not the parameter will be displayed in the ribbon bar.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">The type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2, true)]
                public Parameter parameter;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, and type.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, 0.2)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, default value, and whether or not the parameter will be displayed in theribbon bar. 
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2, true)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary unit name, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than once ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
            //define mandatory parameters
            [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, 0.2)]
            public Parameter parameter;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary-secondary-tertiary unit name, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.#ctor(System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterAttribute class with the given parameter name, user name, type, unit type, primary-secondary-tertiary unit name, 
            default value, and whether or not the parameter will be displayed in the ribbon bar. 
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterAttribute is not found on Parameter.
                                                           <para>Raised if there is more than one ParameterAttribute found on Parameter.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the Parameter is not preceded by the ParameterAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters
                [Parameter("Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2, true)]
                public Parameter parameter;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.Name">
            <summary>
            Gets or sets the parameter name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.UserName">
            <summary>
            Gets or sets the user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.UserNameResourceID">
            <summary>
            Gets or sets the ResourceID for user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.DefaultUserName">
            <summary>
            Gets or sets the default user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.Type">
            <summary>
            Gets or sets the type of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.UnitType">
            <summary>
            Gets or sets the unit type of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.PrimaryUnitName">
            <summary>
            Gets or sets the primary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.SecondaryUnitName">
            <summary>
            Gets or sets the secondary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.TertiaryUnitName">
            <summary>
            Gets or sets the tertiary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.Value">
            <summary>
            Gets or sets the parameter default value.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterAttribute.IsShownOnRibbonBar">
            <summary>
            Gets or sets a value indicating whether the parameter will be displayed in ribbon bar or not.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d">
            <summary>
            Provides generalization of all entities supporting geometric construction plane-like behavior and functionality.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d">
            <summary>
            Surface3d abstract class definition.
            Provides generalization of all entities supporting geometric construction surface-like behavior and functionality.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction">
            <summary>
            GeometricConstruction is an object that represents one or multiple outputs of a function. 
            A geometric construction occurrence can generate geometries or coordinate systems independently from the applicative context. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase">
            <summary>
            GeometricConstructionBase abstract class definition.
            Provides generalization of all entities supporting geometric construction-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase"/> class.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating the geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if the geometric construction type name is not available in the catalog and disk.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase"/> class.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating the geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if the geometric construction type name is not available in the catalog and disk.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.#ctor(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase"/> class.
            </summary>
            <param name="modelDBConnection">The model DB connection.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating the geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if the geometric construction type name is not available in the catalog and disk.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of this geometric construction and removes any existing relationship with the name rule.
            </summary>
            <param name="name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the geometric construction is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the geometric construction.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim geometricConstruction as GeometricConstruction 'Substitute this line with the actual geometric construction instance.
            geometricConstruction.SetUserDefinedName("GC_1")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsParameterInCatalog(System.String)">
            <summary>
            Determines whether or not the specified parameter is in the catalog. 
            If a new parameter is added to the geometric construction definition, 
            it’s not available on the custom interface for the geometric construction type until 
            the bulkload is completed to modify the geometric construction type in the catalog.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>True if the specified parameter is in the catalog; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while determining whether the specified parameter is in the catalog.</exception>
            <example>Example for the method IsParameterInCatalog.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim parameterName As String = "Offset"
            Dim isParameterInCatalog As Boolean = geometricConstruction.IsParameterInCatalog(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetInputs(System.String)">
            <summary>
            Gets all the inputs of this geometric construction with the given input collection name.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <returns>All the inputs of this geometric construction.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting all the inputs of this geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">Raised if the input collection is not defined in the geometric construction definition.</exception>
            <example>Example for the method GetInputs.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim inputCollectionName As String = "Surface"
            Dim allInputs As GeometricConstructionCollection = geometricConstruction.GetInputs(inputCollectionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetInput(System.String)">
            <summary>
            Gets the input of this geometric construction with the given input collection name.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <returns>The input of this geometric construction.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the input of this geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">Raised if the input collection is not defined in the geometric construction definition.</exception>
            <example>Example for the method GetInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim inputCollectionName As String = "Surface"
            Dim input As BusinessObject = geometricConstruction.GetInput(inputCollectionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetInput(System.String,System.Object)">
            <summary>
            Gets the input of this geometric construction with the given input collection name and key.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="key">The ordinal index (integer or string) in the input collection.</param>
            <returns>The input of this geometric construction.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the input of this geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">Raised if the input collection is not defined in the geometric construction definition.</exception>
            <example>Example for the method GetInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim inputCollectionName As String = "Surface"
            Dim input As BusinessObject = geometricConstruction.GetInput(inputCollectionName, 1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetInput(System.String,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Sets the input with the given input collection name. 
            It will add the new input if it is not available, or update the input if it is already available.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="input">The input object to add.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the input to this geometric construction.</exception>
            <example>Example for the method SetInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim input As BusinessObject 'Substitute this line with the actual input object instance.
            Dim inputCollectionName As String = "Surface"
            geometricConstruction.SetInput(inputCollectionName, input)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetInput(System.String,Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Sets the input with the given input collection name and key. 
            It will add the new input if it is not available, or update the input if it is already available.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="input">The input object to add.</param>        
            <param name="key">The ordinal index (integer or string) in the input collection.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the input to this geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <example>Example for the method SetInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim input As BusinessObject 'Substitute this line with the actual input object instance.
            Dim inputCollectionName As String = "Surface"
            geometricConstruction.SetInput(inputCollectionName, input)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetParameterType(System.String)">
            <summary>
            Gets the type of the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>SP3DPropType parameter type.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">Raised if the parameter is not defined in the geometric construction definition.</exception>
            <example>Example for the method GetParameterType.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim parameterName As String = "Offset"
            Dim parameterType As SP3DPropType = geometricConstruction.GetParameterType(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetParameter(System.String)">
            <summary>
            Gets the shared parameter or parameter value from this geometric construction.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The shared parameter or parameter value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">Raised if the parameter is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the parameter from this geometric construction.</exception>
            <example>Example for the method GetParameter.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim parameterName As String = "Offset"
            Dim parameter As Integer = geometricConstruction.GetParameter(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetParameter(System.String,System.Object)">
            <summary>
            Sets the shared parameter or parameter value in this geometric construction.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="parameter">The shared parameter or parameter value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">Raised if the parameter is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the parameter for this geometric construction.</exception>
            <example>Example for the method SetParameter.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim parameterName As String = "Offset"
            geometricConstruction.SetParameter(parameterName, 1.5)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetParameterOfInput(System.String,System.String)">
            <summary>
            Gets the shared parameter or parameter value for the given input from this geometric construction.
            A parameter for input is associated with a specific input. This parameter is used to specify some designated behavior to be applied to the input.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="inputCollectionName">Name of the input collection, to which the parameter is relative.</param>
            <returns>The shared parameter or parameter value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if this method is accessed on the geometric construction set.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">Raised if the input collection is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">Raised if the parameter of input is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the parameter for the given input from this geometric construction.</exception>
            <example>Example for the method GetParameterOfInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim inputCollectionName As String = "Surface"
            Dim parameterName As String = "Offset"
            Dim parameter As Integer = geometricConstruction.GetParameterOfInput(inputCollectionName, parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetParameterOfInput(System.String,System.String,System.Object)">
            <summary>
            Sets the shared parameter or parameter value for the given input in this geometric construction.
            A parameter for input is associated with a specific input. This parameter is used to specify some designated behavior to be applied to the input.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="inputCollectionName">Name of the input collection, to which the parameter is relative.</param>
            <param name="parameter">The shared parameter or parameter value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if this method is accessed on the geometric construction set.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">Raised if the input collection is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">Raised if the parameter of input is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the parameter for the given input for this geometric construction.</exception>
            <example>Example for the method SetParameterOfInput.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            Dim inputCollectionName As String = "Surface"
            Dim parameterName As String = "Offset"
            geometricConstruction.SetParameterOfInput(inputCollectionName, parameterName, 1.5)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Evaluate">
            <summary>
            Allows evaluation of the geometric construction output outside the semantic. 
            When the geometric construction occurrence inputs have been connected, this Evaluate() method allows evaluation of the geometric construction output outside the semantic.
            Useful for the preview or the dynamic placement.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while evaluating the geometric construction output.</exception>
            <example>Example for the method Evaluate.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            geometricConstruction.Evaluate()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.StopComputeOnOutputs">
            <summary>
            Adds stop compute on all outputs. For GeometricConstructionAssembly or GeometricConstructionSet, it sets a stop compute on each output. 
            For a stand-alone GeometricConstruction, it sets itself as a stop compute. 
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while adding stop compute on all outputs of this geometric construction.</exception>
            <example>Example for the method StopComputeOnOutputs.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            geometricConstruction.StopComputeOnOutputs()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Update">
            <summary>
            Forces a recompute of the geometric construction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while updating the geometric construction.</exception>
            <example>Example for the method Update.
            <code>
            Dim geometricConstruction as GeometricConstructionBase 'Substitute this line with the actual geometric construction instance.
            geometricConstruction.Update()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsDeclaredAsInput(System.String)">
            <summary>
            Determines whether the specified input collection name is declared as input in GCDefinition or not.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <returns>True if the specified input collection name is declared as input in GCDefinition; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsComputedInput(System.String)">
            <summary>
            Determines whether the specified input collection name is computed input or not.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <returns>True if the specified input collection name is computed input; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsDeclaredAsParameter(System.String)">
            <summary>
            Determines whether the specified parameter name is declared as parameter in GCDefinition or not.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>True if the specified parameter name is declared as parameter in GCDefinition; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsParameterOfInputValid(System.String,System.String)">
            <summary>
            Determines whether [is parameter of input valid] [the specified parameter name].
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="inputName">Name of the input.</param>
            <returns>
              <c>true</c> if [is parameter of input valid] [the specified parameter name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetNodeChildren(System.Object,System.Collections.Generic.List{System.String}@)">
            <summary>
            Gets the node children.
            </summary>
            <param name="hierarchyNode">The gc hierarchy node.</param>
            <param name="typeNames">The gc type names.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetTypeNames">
            <summary>
            Gets the GC type names.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetOutputType(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the type of the output.
            </summary>
            <param name="output">The output.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsValidKeyType(System.Object)">
            <summary>
            Determines whether [is valid key type] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if [is valid key type] [the specified key]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.CreateGC(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates the GC.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid to create geometric construction of type :</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.CreateGC(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Creates the GC.
            </summary>
            <param name="modelDBConnection">The model DB connection.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>        
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid to create geometric construction of type :</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetParameterType(SP3DPIA.GeometricConstruction.GCParameterType)">
            <summary>
            
            </summary>
            <param name="comParameterType"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsValidType(Ingr.SP3D.Common.Middle.Services.Catalog,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Determines whether [is valid GC type] [the specified catalog].
            </summary>
            <param name="catalog">The catalog.</param>
            <param name="gcType">Type of the gc.</param>
            <param name="isGCTypeInCatalog">if set to <c>true</c> [is GC type in catalog].</param>
            <param name="isGCSet">if set to <c>true</c> [is GC set].</param>
            <param name="isGCSetContainer">if set to <c>true</c> [is GC set container].</param>
            <returns>
              <c>true</c> if [is valid GC type] [the specified catalog]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetClassID(Ingr.SP3D.Common.Middle.Services.Catalog,System.String)">
            <summary>
            Gets the class CLSID.
            </summary>
            <param name="catalog">The catalog.</param>
            <param name="className">Name of the class.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetCOMClassName(System.Boolean)">
            <summary>
            Get the equivalent COM class name for this SOM class.
            </summary>
            <param name="isGCSetContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsTypeInCatalog(System.Object)">
            <summary>
            Determines whether the GCType is in catalog or not.
            </summary>
            <param name="comGCType">Type of the COM GC.</param>
            <returns>True if GCType is in catalog; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsSetType(System.String)">
            <summary>
            
            </summary>
            <param name="geometricConstructionTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsSetContainerType(System.String)">
            <summary>
            
            </summary>
            <param name="geometricConstructionTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetTypeByName(System.String,System.Object,Ingr.SP3D.Common.Middle.Services.Catalog)">
            <summary>
            Gets the COM GCType objcet by GCType name.
            </summary>
            <param name="typeName">Name of the GCType.</param>
            <param name="resourceManager">The resource manager.</param>
            <param name="catalog">The catalog.</param>
            <returns>COM GCType object</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetFormattedTypeName(System.String,System.Boolean)">
            <summary>
            Formatteds the name of the type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="isInModel">if set to <c>true</c> [is in model].</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GetGraphicOrComputedInput(System.String,System.Object)">
            <summary>
            Gets the graphic or computed input.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SetGraphicOrComputedInput(System.String,Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Sets the graphic or computed input.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="input">The input.</param>
            <param name="key">The key.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.SystemParent">
            <summary>
            Gets or sets the system parent of this geometric construction.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised when the geometric construction does not support IJDesignChild interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemParentException">Raised when there is failure to get the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToSetSystemParentException">Raised when there is failure to set the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the geometric construction is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if this property is accessed on the geometric construction which is not public.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Name">
            <summary>
            Gets the name of this geometric construction.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Range">
            <summary>
            Gets the range box representing the range of this geometric construction.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure occurred while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.TypeName">
            <summary>
            Gets the name of the geometric construction type. 
            Returns null if the geometric construction is not public. This also returns an empty string if the geometric construction set is without a template.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the name of the geometric construction type.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Description">
            <summary>
            Gets the geometric construction type description.
            Returns null if the geometric construction is not public. This also returns an empty string if the geometric construction set is without a template.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the description of the geometric construction type.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.DefinitionProgId">
            <summary>
            Gets the geometric construction type definition programmatic identifier.
            Returns null if the geometric construction is not public. This also returns an empty string if the geometric construction set is without a template.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the definition programmatic identifier of the geometric construction type.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.IsPublic">
            <summary>
            Gets or sets the public property that allows determination whether the geometric construction occurrence is public or private.
            If the geometric construction is not public, then it will not be shown in the Work Space Explorer. It will be visible only in the geometric construction explorer. 
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the public property of the geometric construction.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.Definition">
            <summary>
            Gets the initialized read-only transient geometric construction definition for this geometric construction occurrence.
            </summary>
            <returns>Initialized read-only transient geometric construction definition.</returns>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the initialized geometric construction definition.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.OwningGeometricConstruction">
            <summary>
            Gets the geometric construction for which this geometric construction is an output. 
            Returns null if there is no geometric construction for which this geometric construction is an output.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if this property is accessed on the geometric construction set.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the geometric construction that possesses this geometric construction.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.AvailableGeometricContructionTypes">
            <summary>
            Gets all the available geometric construction type names from the catalog and disk.
            Returns an empty collection if there are no geometric construction types available.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the available geometric construction type names from the catalog and disk.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase.GeometricConstructionType">
            <summary>
            Gets the geometric construction type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type GeometricConstruction.</para></exception>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction occurrence under the given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type GeometricConstruction.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.#ctor(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Creates a persistent geometric construction occurrence with the geometric construction type name.
            </summary>
            <param name="modelDBConnection">The model DB connection.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type GeometricConstruction.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Applies the given matrix on the geometric construction.
            FOR INTERNAL USE ONLY, will be evaluated for public exposure later once we need it from outside.
            </summary>
            <param name="transformationMatrix">The transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometric construction with the given transformation matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.ConvertArrayDouble(System.Array)">
            <summary>
            Converts array of doubles to a collection of double.        
            </summary>
            <param name="doubles">The array doubles.</param>
            <returns>Collection of double.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.ConvertArrayPosition(System.Array)">
            <summary>
            Converts array of points to collection of position.
            </summary>
            <param name="points">The array of points.</param>
            <returns>Collection of position.</returns>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure occurs while getting or setting the output of this geometric construction.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if this property is accessed on the geometric construction assembly.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectTypeOfOutputException">Raised if the output type does not match with the type defined on the geometric construction definition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d"/> class.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Surface3d.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d"/> class.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Surface3d.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether or not a given point is on this geometric construction surface.
            </summary>
            <param name="pos">Point in which to determine whether or not on this surface.</param>
            <returns>If True, then the point is on the surface; if False, then the point is not on the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim isPointOn As Boolean = geometricConstructionSurface3d.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.ScopeNormal(Ingr.SP3D.Common.Middle.SurfaceScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Determines the planarity of the geometric construction surface and normal.
            </summary>
            <param name="scope">SurfaceScopeType defining the planarity of the surface.</param>
            <param name="normal">Normal vector.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim curveScopeType As CurveScopeType
            Dim normal As Vector
            geometricConstructionSurface3d.ScopeNormal(curveScopeType, normal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the geometric construction surface along the vector from a given point.
            </summary>
            <param name="pos">Position in which to project to this surface.</param>
            <param name="vecProj">Vector to project along. If null, then the function projects along vector normal to this surface.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim projectPoint As Position = geometricConstructionSurface3d.ProjectPoint(New Position(1, 1, 0), New Vector(0, 0, 1))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the geometric construction surface along normal vector from the given point.
            </summary>
            <param name="pos">Position in which to project to surface.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim projectPoint As Position = geometricConstructionSurface3d.ProjectPoint(New Position(1, 1, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.OutwardNormalAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the outward normal at a given point.
            </summary>
            <param name="pos">Position in which to find the outward normal.</param>
            <returns>Vector - outward normal.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the OutwardNormalAtPoint method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.        
            Dim outwardNormalAtPoint As Vector = geometricConstructionSurface3d.OutwardNormalAtPoint(New Position(1, 1, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this geometric construction surface and an input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point at minimum distance on this surface.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim minimumDistance As Double
            Dim posSrcPos As Position
            geometricConstructionSurface3d.DistanceBetween(New Point3d(1.5, 0, 0), minimumDistance, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this geometric construction surface and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point at the minimum distance on this surface.</param>
            <param name="posInPos">Point at the minimum distance on input curve.</param>
            <exception cref="T:System.ArgumentNullException">Raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim inCurve as ICurve 'Substitute this line with the actual curve instance.
            Dim minimumDistance As Double
            Dim posSrcPos, posInPos As Position
            geometricConstructionSurface3d.DistanceBetween(inCurve, minimumDistance, posSrcPos, posInPos)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this geometric construction surface and an input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point at the minimum distance on this surface.</param>
            <param name="posInPos">Point at the minimum distance on input surface.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim inSurface as ISurface 'Substitute this line with the actual surface instance.
            Dim minimumDistance As Double 
            Dim posSrcPos, posInPos As Position
            geometricConstructionSurface3d.DistanceBetween(inSurface, minimumDistance, posSrcPos, posInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this geometric construction surface and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="curves">Output collection of curves.  
                                    Note that this could be a collection of Point3d objects.</param>
            <param name="intersectionCode">GeometryIntersectionType describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim inCurve as ICurve 'Substitute this line with the actual curve instance.
            Dim intersectionCode As GeometryIntersectionType
            Dim curves As Collection(Of BusinessObject) = Nothing        
            geometricConstructionSurface3d.Intersect(inCurve, curves, intersectionCode)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this geometric construction surface and input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="curves">Output collection of curves.
                                    Note that this could be a collection of Point3D objects.</param>
            <param name="intersectionCode">GeometryIntersectionType describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim inSurface as ICurve 'Substitute this line with the actual surface instance.
            Dim intersectionCode As GeometryIntersectionType
            Dim curves As Collection(Of ICurve) = Nothing        
            geometricConstructionSurface3d.Intersect(inSurface, curves, intersectionCode)
            </code>
            </example>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Centroid(Ingr.SP3D.Common.Middle.Line3d,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds one or more centroids of this geometric construction surface.
            </summary>
            <param name="line">Optional. If given, it helps to locate which centroid to return.</param>
            <param name="centroids">Multiple centroids are returned only when a projection can be broken.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Centroid method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.
            Dim line as Line3d 'Substitute this line with the actual line instance.        
            Dim centroids As Collection(Of Position) = Nothing        
            geometricConstructionSurface3d.Centroid(line, centroids)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Centroid">
            <summary>
            Finds the centroid of the surface.
            </summary>
            <returns>The position of the centroid.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Centroid method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.        
            Dim centroid As Position = geometricConstructionSurface3d.Centroid()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Centroids">
            <summary>
            Finds one or more centroids of the surface.
            For a projection surface it breaks into faces and returns all centroids.
            </summary>
            <returns>All centroid positions.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Centroids method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.             
            Dim centroids As Collection(Of Position) = geometricConstructionSurface3d.Centroids()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.LocatedCentroids(Ingr.SP3D.Common.Middle.Line3d)">
            <summary>
            Finds the centroids of the surface faces.  Surface will be broken into separate surfaces and faces. The input line will 
            locate which faces in which to have the centroid return.  <para>If more than one face is located, then centroids will 
            be ordered with regard to the face that is nearest to line root point.</para>  <para>Note: That only the projection surface is working for this method.</para>
            </summary>
            <param name="line">Line input for locating the centroids. </param>
            <returns>The collection of Position objects.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the LocatedCentroids method.
            <code>
            Dim geometricConstructionSurface3d as Surface3d 'Substitute this line with the actual geometric construction surface instance.  
            Dim line as Line3d 'Substitute this line with the actual line instance.
            Dim centroids As Collection(Of Position) = geometricConstructionSurface3d.LocatedCentroids(line)
            </code>
            </example> 
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.uForm">
            <summary>
            Gets the closure of the geometric construction surface in U-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.vForm">
            <summary>
            Gets the closure of the geometric construction surface in V-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d.Area">
            <summary>
            Gets the area of a bounded surface.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Surface3d._SurfaceHelper">
            <summary>
            Gets the surface helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Plane3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Plane3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction Plane3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "PlaneFromCS"
            
            Dim plane3d As New Plane3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Plane3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction Plane3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid to in which create a geometric construction of type Plane3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction Plane3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "PlaneByPoints"
            
            Dim plane3d As New Plane3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="complexString">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">iCS cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim complexString3d As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            geometricConstructionPlane3d.AddBoundary(complexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.RemoveBoundary(System.Int32)">
            <summary>
            Removes boundary i.
            </summary>
            <param name="i">Integer</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the RemoveBoundary method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            geometricConstructionPlane3d.RemoveBoundary(1)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the RemoveAllBoundaries method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            geometricConstructionPlane3d.RemoveAllBoundaries()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at i.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="complexString">Output boundary.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the GetBoundary method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim complexString3d As ComplexString3d
            geometricConstructionPlane3d.GetBoundary(1, complexString3d)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at index i.
            <para>Note: This method is not adding a boundary, but replacing the boundary that is at index i.</para>
            </summary>
            <param name="i">Integer</param>
            <param name="complexString">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the SetBoundary method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim complexString3d As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            geometricConstructionPlane3d.SetBoundary(1, complexString3d)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the GetBoundaries method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim colComplexString As Collection(Of ComplexString3d) = Nothing
            geometricConstructionPlane3d.GetBoundaries(1, colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries and removes any previous boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the SetBoundaries method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim colComplexString As Collection(Of ComplexString3d) 'Substitute this line with the actual collection of ComplexString3d instance.
            geometricConstructionPlane3d.SetBoundaries(colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a hole to one or more existing boundaries.
            </summary>
            <param name="complexString">ComplexString3d defining a hole.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the AddHole method.
            <code>
            Dim geometricConstructionPlane3d As Plane3d 'Substitute this line with the actual geometric construction plane instance.
            Dim complexString As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            geometricConstructionPlane3d.AddHole(complexString)
            </code>
            </example>         
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.RootPoint">
            <summary>
            Gets or sets the root point.
            Returns an immutable position.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.Normal">
            <summary>
            Gets or sets the plane normal.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.VDirection">
            <summary>
            Gets the V-direction.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.Reversed">
            <summary>
            Gets or sets the Reversed property. Get reverses the V-direction of the plane.
            Normally (Reversed=False) the V-direction is determined by the normal X U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d.BoundaryCount">
            <summary>
            Returns the number of boundaries.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Plane3d._PlaneHelper">
            <summary>
            Gets the _ plane helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Layer">
            <summary>
            Layer class is the .NET wrapper class for StructLayer COM Business Object. This class
            provides material and thickness information for a single layer in the SlabComposition.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructMaterial">
            <summary>
            Realized by all wrapper objects that allow setting a material. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.Material">
            <summary>
            Gets or sets the material part. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialStandard">
            <summary>
            Gets the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialType">
            <summary>
            Gets the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialGrade">
            <summary>
            Gets the grade of the material.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Layer.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.IsReference">
            <summary>
            Gets or sets the IsReference flag on the layer. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Thickness">
            <summary>
            Gets or sets the thickness on the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Continuity">
            <summary>
            Gets or sets continuity of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.CatalogPart">
            <summary>
            Gets or sets the catalog part corresponding to the layer definition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Material">
            <summary>
            Gets or sets the material of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialType">
            <summary>
            Gets or sets the material type of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialStandard">
            <summary>
            Gets the material standard.
            However, not implemented at this time.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialGrade">
            <summary>
            Gets the material grade of the layer.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Run">
            <summary>
            Class definition for a wall run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Run.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a wall run from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Run.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.WallSystem">
            <summary>
            Returns the wall system which is connected to this wall run.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructLocalizer.GetStringWithParameters(System.Int32,System.String,System.String[])">
            <summary>
            Gets the string with parameters.
            </summary>
            <param name="iID">The i ID.</param>
            <param name="defMsgStr">The def MSG STR.</param>
            <param name="parameterArray">The parameter array.</param>
            <returns></returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSplitType">
            <summary>
            Provides the type of split of the member split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.ByRule">
            <summary>
            Split By Rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitFirst">
            <summary>
            Split First.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitSecond">
            <summary>
            Split Second.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitBoth">
            <summary>
            Split Both.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitNone">
            <summary>
            Split None.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSplitConnection">
            <summary>
            MemberSplitConnection class represents the split point geometry as well as the logical connection between the split objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a MemberSplitConnection from the database.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the member split connection with the given root selection or part. 
            The root selector is set to the catalog item given by the input string.        
            </summary>
            <param name="rootSelectorOrPart">The root selector or part.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a selection rule the return value
            is the first part selected by the selection rule.  If the input value is an empty string the return value is the first part selected by 
            the selection rule based on the object current root selector.</returns>
            <exception cref="T:System.ArgumentNullException">rootSelectorOrPart</exception>
            <exception cref="T:System.ArgumentNullException">Root selection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Exception raised if an error is encountered in the ExecuteSelectionRule method.</exception>
            <example>
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim selectionRule As String =  memberSplitConnection.ExecuteSelectionRule(memberSplitConnection.PartName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level.
            These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim partClassName As String 'Substitute this line with the actual part class name instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = memberSplitConnection.GetAvailableSelections(partClassName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = memberSplitConnection.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>        
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim selectionRuleAnswer As PropertyValue = memberSplitConnection.GetSelectionRuleAnswer(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>        
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim isSelectionQuestionOverridden As Boolean = memberSplitConnection.IsSelectionQuestionOverridden(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            memberSplitConnection.OverrideSelectionQuestion(questionName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim isParameterOverridden As Boolean = memberSplitConnection.IsParameterOverridden(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            memberSplitConnection.OverrideParameter(parameterName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = memberSplitConnection.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim memberSplitConnection As MemberSplitConnection 'Substitute this line with the actual member split connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = memberSplitConnection.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            memberSplitConnection.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Results">
            <summary>
            Read-only property to get member parts resulting from the split.  
            </summary>          
            <value>Read-only collection of member parts resulting from the split.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.SplitType">
            <summary>
            Gets or sets the type of split.  
            </summary>
            <value>For non-marine entities, set is currently not supported and
            get always returns design SplitType.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitTypeException">Cannot set the split type on the member split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.PartName">
            <summary>
            Gets or sets the definition or part by name on the member split connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when an unexpected error occurred while setting part name.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Part">
            <summary>
            Gets or sets the definition or part on the member split connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the member split connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.WBSParent">
            <summary>
            WBSItem parent for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Position">
            <summary>
            Read-only property to get the position of the member split connection.
            </summary>
            <value>The position.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException">Failed to get the position of the split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.MemberSplitType">
            <summary>
            Gets or sets the member split type on the member split connection.
            </summary>
            <value>The type of member split.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException">Failed to get the member split type of the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException">Failed to set the member split type on the member split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Parents">
            <summary>
            Gets all the parents of the member split connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException">Raised when an unexpected error occurred while getting all the parents of the member split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterValueAttribute">
            <summary>
            Multiple ParameterValueAttributes is followed by Parameter or ParameterOfInput field variables for parameter type of PTCodelist in a custom GeometricConstructionDefinition class.
            This is used to fully describe a ParameterValue in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterValueAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of a ParameterValueAttribute class with the given long description of the codelist item.
            </summary>
            <param name="longDescription">The long description of the codelist item. It must be unique for each parameter value on the Parameter or ParameterOfInput field variables in a custom GeometricConstructionDefinition class.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidParameterTypeException">Raised if the ParameterValueAttribute added on Parameter or ParameterOfInput with a parameter type that is not PTCodelist.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the long description is not unique for each parameter value defined for a single Parameter or ParameterOfInput in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterValueAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                [Parameter("CSOrientation", 5, SP3DPropType.PTCodelist, 1)]
                [ParameterValue("Direct")]
                [ParameterValue("Indirect")]
                public Parameter axesRoles;    
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterValueAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of a ParameterValueAttribute class with the given long description and valueID of the codelist item.
            </summary>
            <param name="longDescription">The long description of the codelist item. It must be unique for each parameter value on the Parameter or ParameterOfInput field variables in a custom GeometricConstructionDefinition class.</param>
            <param name="valueID">The valueID of the codelist item.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidParameterTypeException">Raised if the ParameterValueAttribute added on Parameter or ParameterOfInput with a parameter type that is not PTCodelist.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the long description is not unique for each parameter value defined for a single Parameter or ParameterOfInput in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterValueAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                [Parameter("CSOrientation", 5, SP3DPropType.PTCodelist, 1)]
                [ParameterValue("Direct", 1)]
                [ParameterValue("Indirect", 2)]
                public Parameter axesRoles;    
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterValueAttribute.LongDescription">
            <summary>
            Gets or sets the long description of the CodeList item.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterValueAttribute.ValueID">
            <summary>
            Gets or sets the valueID of the CodeList item.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d">
            <summary>
            Provides generalization of all entities supporting geometric construction line-like behavior and functionality.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d">
            <summary>
            Curve3d abstract class definition that
            provides generalization of all entities supporting geometric construction curve-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d"/> class.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d"/> class.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this geometric construction curve.
            </summary>
            <param name="eScope">Enumerator that shows the planarity of this geometric construction curve.</param>
            <param name="normal">The normal vector of this geometric construction curve.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim curveScopeType As CurveScopeType
            Dim normal As Vector
            geometricConstructionCurve3d.ScopeNormal(curveScopeType, normal)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the center, area, moments of inertia, and principle axes of a closed planar geometric construction curve.
            </summary>
            <param name="area">Area of this geometric construction curve.</param>
            <param name="centroid">Centroid of this geometric construction curve.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="majorPrincipleInertia">Principle moment of inertia to major axis.</param>
            <param name="minorPrincipleInertia">Principle moment of inertia to minor axis.</param>
            <param name="polarInertia">Polar moment of inertia to the normal.</param>
            <param name="majorAxis">Major principle axis.</param>
            <param name="minorAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim area, inertiaX, inertiaY, inertiaXY, majorPrincipleInertia, minorPrincipleInertia, polarInertia As Double
            Dim centroid As Position
            Dim majorAxis, minorAxis As Vector
            geometricConstructionCurve3d.AreaCentroidMomentsOfInertia(area, centroid, inertiaX, inertiaY, inertiaXY, majorPrincipleInertia, minorPrincipleInertia, polarInertia, majorAxis, minorAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes length, centroid, moments of inertia, and principle axes of an open or closed thin geometric construction wire.
            </summary>
            <param name="length">Length of this geometric construction wire.</param>
            <param name="centroid">Centroid of this geometric construction curve.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="principledinertiaU">Principle moment of inertia to U-direction.</param>
            <param name="principledinertiaV">Principle moment of inertia to V-direction.</param>
            <param name="principledinertiaN">Principle moment of inertia to N-direction.</param>
            <param name="axisU">Major principle axis in U-direction.</param>
            <param name="axisV">Minor principle axis in V-direction.</param>
            <param name="axisN">Minor principle axis in N-direction.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim length, inertiaX, inertiaY, inertiaZ, principledinertiaU, principledinertiaV, principledinertiaN As Double
            Dim centroid As Position        
            Dim axisU, axisV, axisN As Vector
            geometricConstructionCurve3d.CentroidInertiaForWire(length, centroid, inertiaX, inertiaY, inertiaZ, principledinertiaU, principledinertiaV, principledinertiaN, axisU, axisV, axisN)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this geometric construction curve.
            </summary>
            <param name="start">Start position.</param>
            <param name="end">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim start, end As Position
            geometricConstructionCurve3d.EndPoints(start, end)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on this geometric construction curve.
            </summary>
            <param name="pos">Point in which to determine whether on this geometric construction curve.</param>
            <returns>True if the point is on this geometric construction curve; False if the point is not on this geometric construction curve.</returns>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim isPointOn As Boolean = geometricConstructionCurve3d.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this geometric construction curve and the input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this geometric construction curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Unexpected failure occurred while determining the distance between this geometric construction curve and the input point.</exception>      
            <example>This is an example of DistanceBetween method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.        
            Dim minimumDistance As Double
            Dim posSrcPos As Position
            geometricConstructionCurve3d.DistanceBetween(New Point3d(1.5, 0, 0), minimumDistance, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this geometric construction curve and the input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this geometric construction curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim inCurve As ICurve 'Substitute this line with the actual curve instance.
            Dim minimumDistance As Double
            Dim posSrcPos, posInPos As Position
            geometricConstructionCurve3d.DistanceBetween(inCurve, minimumDistance, posSrcPos, posInPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this geometric construction curve and the input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="minimumDistance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this geometric construction curve at minimum distance.</param>
            <param name="posInPos">Point on input surface at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim inSurface As ISurface 'Substitute this line with the actual surface instance.
            Dim minimumDistance As Double 
            Dim posSrcPos, posInPos As Position
            geometricConstructionCurve3d.DistanceBetween(inSurface, minimumDistance, posSrcPos, posInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this geometric construction curve and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="intersectionPoints">Output collection of intersection points.</param>
            <param name="overlapPoints">Output collection of overlap points.</param>
            <param name="intersectionCode">Enumerator describing the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim inCurve As ICurve 'Substitute this line with the actual curve instance.
            Dim intersectionCode As GeometryIntersectionType
            Dim intersectionPoints As Collection(Of Position) = Nothing
            Dim overlapPoints As Collection(Of Position) = Nothing
            geometricConstructionCurve3d.Intersect(inCurve, intersectionPoints, overlapPoints, intersectionCode)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this geometric construction curve and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="curves">Collection of curve objects.</param>
            <param name="intersectionCode">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim inSurface As ISurface 'Substitute this line with the actual surface instance.
            Dim intersectionCode As GeometryIntersectionType
            Dim curves As Collection(Of BusinessObject) = Nothing
            geometricConstructionCurve3d.Intersect(inSurface, curves, intersectionCode)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self intersections and overlaps of this geometric construction curve.
            </summary>
            <param name="intersectionPoints">Collection of intersection points.</param>
            <param name="overlapPoints">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim intersectionPoints As Collection(Of Position) = Nothing
            Dim overlapPoints As Collection(Of Position) = Nothing
            geometricConstructionCurve3d.SelfIntersect(intersectionPoints, overlapPoints)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along this geometric construction curve at a given distance from the given start point on this geometric construction curve. 
            If the given point does not lie on this geometric construction curve, it is along the normal to the geometric construction of this curve (minimum distance). 
            </summary>
            <param name="posStart">Position from which to start.</param>
            <param name="dist">Distance along.</param>
            <returns>Point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create COM Geometry Factory</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim pointAtDistanceAlong As Position = geometricConstructionCurve3d.PointAtDistanceAlong(New Position(1, 1, 1), 1.0)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along this geometric construction curve at a given distance from the start of this geometric construction curve.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create the COM Geometry Factory.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim pointAtDistanceAlong As Position = geometricConstructionCurve3d.PointAtDistanceAlong(1.0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on this geometric construction curve along given vector from given point.
            </summary>
            <param name="pos">Position in which to project to the curve.</param>
            <param name="vecProj">Vector to project along. If argument is null, then the function projects along vector normal to this geometric construction curve.</param>
            <returns>Projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim projectPoint As Position = geometricConstructionCurve3d.ProjectPoint(New Position(1, 1, 0), New Vector(0, 0, 1))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on this geometric construction curve from the given point.
            </summary>
            <param name="pos">Position in which to project to the curve.</param>
            <returns>Projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim projectPoint As Position = geometricConstructionCurve3d.ProjectPoint(New Position(1, 1, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim geometricConstructionCurve3d As Curve3d 'Substitute this line with the actual geometric construction curve instance.
            Dim tangentAtPoint As Vector = geometricConstructionCurve3d.TangentAtPoint(New Position(1, 1, 0))
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Length">
            <summary>
            Gets the length of this geometric construction curve.
            </summary>
            <returns>Length value of this geometric construction curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Area">
            <summary>
            Gets the area of this geometric construction curve.
            </summary>
            <returns>Area value of this geometric construction curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Form">
            <summary>
            Gets the form (closure) of this geometric construction curve.
            </summary>
            <returns>Enumerated value of this geometric construction curve closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Scope">
            <summary>
            Gets the scope (planarity) of this geometric construction curve.
            </summary>
            <returns>Enumerated value of this geometric construction curve planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d.Centroid">
            <summary>
            Gets the centroid of this geometric construction curve.
            </summary>
            <returns>Position of centroid of geometric construction this curve. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Curve3d._CurveHelper">
            <summary>
            Gets the curve helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Line3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Line3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction Line3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "LineFromCS"
            
            Dim line3d As New Line3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Line3d occurrence under the given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction Line3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Line3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction Line3d occurrence under the given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "LineByPoints"
            
            Dim line3d As New Line3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.Infinite">
            <summary>
            Gets or sets whether or not this geometric construction line is infinite.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state since the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.StartPoint">
            <summary>
            Gets or sets the start point of this geometric construction line.
            Returns an immutable position.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.EndPoint">
            <summary>
            Gets or sets the end point of this geometric construction line.
            Returns an immutable position.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.RootPoint">
            <summary>
            Gets or sets the root point of this geometric construction line.
            Returns an immutable position.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d.Direction">
            <summary>
            Gets or sets the direction of this geometric construction line.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in an invalid state since the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Line3d._LineHelper">
            <summary>
            Gets the line helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices">
            <summary>
            Weight and center of gravity-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices.#ctor">
            <summary>
            Constructor for the WeightCOGServices class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices.SetWeightAndCOG(Ingr.SP3D.Common.Middle.BusinessObject,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called from a symbol VB.Net project to implement ICustomWeightCG interface. 
            This method is delegating the actual call to the respective business object where the actual weight and center of gravity is being set.
            </summary>
            <param name="businessObject">BusinessObject such as Stair, Ladder, HandRail and Footing.</param>
            <param name="weight">Double value of weight.</param>
            <param name="globalCOGX">Double value of position X for center of gravity in respect to the global coordinate system.</param>
            <param name="globalCOGY">Double value of position Y for center of gravity in respect to the global coordinate system.</param>
            <param name="globalCOGZ">Double value of position Z for center of gravity in respect to the global coordinate system.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetWCGException">Exception raised if an error is encountered while trying to set weight and center of gravity.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SymbolServices">
            <summary>
            Symbol-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.#ctor">
            <summary>
            Constructor for the SymbolServices class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.AddNonDrawableOutput(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.AspectDefinition@,System.String)">
            <summary>
            Adds the output to the given AspectDefinition but not display it in the graphics.
            </summary>
            <param name="businessObject">Business Object.</param>
            <param name="aspectDefinition">AspectDefinition where to add the output.</param>
            <param name="outPutName">Output name.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException">Exception raised if an error is encountered while trying set control flags.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.GetSourceObject(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the reference object from proxy object.
            </summary>
            <param name="businessObject">Proxy object whose source object is required.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException">Exception raised if an error is encountered while getting the reference object from the proxy object.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput">
            <summary>
            GraphicInput class is used to declare graphic input field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the GraphicInputAttribute.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.ICollection{System.String},Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput"/> class.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="prompt">The prompt.</param>
            <param name="filterOrStepFilterProgid">The filter or step filter progid.</param>
            <param name="minimumNumberOfConnectedObject">The minimum no of connected object.</param>
            <param name="maximumNumberOfConnectedObject">The maximum no of connected object.</param>
            <param name="notificationInterfaceNames">The notification interface names.</param>
            <param name="occurrence">The geometric construction occurrence for which this graphic input is defined.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.CollectionName">
            <summary>        
            Gets the graphic input collection name.
            It will be unique for each graphic input defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.Prompt">
            <summary>
            Gets the prompt of the graphic input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.FilterOrStepFilterProgid">
            <summary>
            Gets the filter string or step filter ProgID for the graphic input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.MinimumNumberOfConnectedObject">
            <summary>
            Gets the minimum number of connected objects with the graphic input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.MaximumNumberOfConnectedObject">
            <summary>
            Gets the maximum number of connected objects with the graphic input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.NotificationInterfaceNames">
            <summary>
            Gets the compute notification interface names for this graphic input.
            Returns null if there are no compute notification interface names defined for this graphic input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.Values">
            <summary>
            Gets the graphic input values.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.InputBehavior">
            <summary>
            Gets the graphic input behavior for this graphic input.
            Returns null if there is no GraphicInputBehaviorAttribute defined for this graphic input in the custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicInput.Occurrence">
            <summary>
            Gets or sets the geometric construction occurrence for which this graphic input is defined.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StairLadderBase">
            <summary>
            Base class for the Stair and Ladder classes. This class provides generalization of
            all behavior supported by the stair and ladder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor">
            <summary>
            Constructor for .NET to access this class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Constructor for the derived classes to create a stair or ladder.
            </summary>
            <param name="parentSystem">Parent system of the traffic entity.</param>
            <param name="part">The traffic entity catalog part.</param>
            <param name="topEdge">The edge or plane which provides the top support for the traffic entity.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the traffic entity.</param>
            <param name="refEdge">The edge or plane which provides side reference for the traffic entity for offset calculations.</param>
            <param name="objectType">Identifies whether the traffic entity is either a stair or ladder.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the creation of stair or ladder.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">Raised when the CreateStair method for the stair factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">Raised when the the CreateLadder method for the ladder factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidInputsException">if top support or side reference (if top support is surface) is on or below the bottom support.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidTopSupportException"> if given top surface is not perpendicular to the bottom surface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBottomSupportException"> if the given surface is neither plane nor surface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSideReferenceException"> if the side reference is equal to top support.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException"> if the side reference is not required.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.IsCurve(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether [is curve] [the specified top edge].
            </summary>
            <param name="topEdge">The top edge.</param>
            <returns>
            	<c>true</c> if [is closed curve] [the specified top edge]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Structure.Middle.StairLadderBase,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Copy constructor for the StairLadderBase class.
            </summary>
            <param name="stairLadderBase">Traffic entity to be copied.</param>
            <param name="objectType">Identifies whether the traffic entity is a stair or ladder.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the enumerated argument is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when there is failure to create the factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The CreateStair method for the stair factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The CreateLadder method for the ladder factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.GetConnection(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Private method to retrieve a connection object.
            </summary>
            <param name="parentSystem">The objects parent system.</param>
            <returns>Returns an SP3DConnection object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.AreSupportsIntersecting(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the top support and side reference are intersecting.  If the inputs are ICurve for both
            top support and side reference then the dot product of the vectors cannot be anything other than zero (0) since
            for example a 1 or -1 in this case means they are parallel.  If the inputs are ICurve for top support and IPlane 
            for side reference (or the other way around) then their dot product of the vectors must be a value other than zero (0)
            since the normal of the plane cannot be perpendicular to the top support (or the side reference if the top support is a plane).
            </summary>
            <param name="topSupport">The plane or edge which provides the top support for the stair or ladder.</param>
            <param name="sideReference">The plane or edge which provides side reference for the stair or ladder for offset calculations.</param>
            <returns>True if supports are intersecting.  Otherwise returns false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the local coordinate system.
            </summary>
            <param name="xAxisNew">New X-axis of the local coordinate system.</param>
            <param name="yAxisNew">New Y-axis of the local coordinate system.</param>
            <exception cref="T:System.ArgumentNullException">Axis object is null.</exception>
            <exception cref="T:System.ArgumentException">Vectors are not perpendicular to each other.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.DefineStairLadder(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Sets the support properties (TopSupport, SideReference, and BottomSupport) for a stair or ladder.
            </summary>
            <param name="topSupport">The stair or ladder top support.</param>
            <param name="sideReference">The stair or ladder side reference.</param>
            <param name="bottomPlane">The stair or ladder bottom plane.</param>
            <param name="objectType">Enumerator which determines whether the object is a stair or ladder.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the Stair or Ladder object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.ValidateInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Validates the inputs.
            </summary>
            <param name="topSupport">The top support.</param>
            <param name="sideReference">The side reference.</param>
            <param name="bottomPlane">The bottom plane.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.IsBottomSupportAtHigherElevation(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.ISurface,System.String,System.String@)">
            <summary>
            Determines whether [is bottom support at higher elevation] [the specified top support or edge reference].
            </summary>
            <param name="topSupportOrEdgeReference">The top support or edge reference.</param>
            <param name="bottomSurface">The bottom surface.</param>
            <param name="inputName">Name of the input.</param>
            <param name="errMsg">The err MSG.</param>
            <returns>
            	<c>true</c> if [is bottom support at higher elevation] [the specified top support or edge reference]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.Origin">
            <summary>
            Gets or sets the origin of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.XAxis">
            <summary>
            Gets the read-only X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.YAxis">
            <summary>
            Gets the read-only Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.ZAxis">
            <summary>
            Gets the read-only Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.TopSupport">
            <summary>
            Abstract property that gets the top support. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.SideReference">
            <summary>
            Abstract property that gets the side reference. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.BottomSupport">
            <summary>
            Abstract property that gets the bottom support. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType">
            <summary>
            Enumerator for identifying the type of object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType.Stair">
            <summary>
            Identifies the Stair object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType.Ladder">
            <summary>
            Identifies the Ladder object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurveBase">
            <summary>
            TopologyCurveBase class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.#ctor(Ingr.SP3D.Structure.Middle.TopologyCurve)">
            <summary>
            TopologyCurveBase constructor.
            </summary>
            <param name="oTopologyCurve">TopologyCurve object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.GetTopologyCurveCOMBO">
            <summary>
            Gets the TopologyCurve COM BusinessObject.
            </summary>
            <returns>Returns the COM BusinessObject.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
             <summary>
             Gets the center, area, moment of inertia, and principle axes of a closed planar curve.
             </summary>
             <param name="dArea">Area of the curve.</param>
             <param name="posCentroid">Centroid of the curve.</param>
             <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
             <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
             <param name="dInertiaXY">Product of inertia (zero if it is symmetrical).</param>
             <param name="dMajorPrncplInertia">Principle moment of inertia to major axis.</param>
             <param name="dMinorPrncplInertia">Principle moment of inertia to minor axis.</param>
             <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
             <param name="MjIAxis">Major principle axis.</param>
             <param name="MnIAxis">Minor principle axis.</param>
             <example>This is an example of finding the center, area, moments of inertia, and principal axes of a closed planar curve.
             <code>
             Dim dArea As Double, dInX As Double, dInY As Double, dInXY As Double, dMajPrincplIn As Double, dMinPrincplIn As Double, _ 
             dPolIn As Double 
             Dim oCentroidPos As Position 
             Dim vMajIAxis As Vector, vMinIAxis As Vector 
            
             oTopologyCurve.AreaCentroidMomentsOfInertia(dArea, oCentroidPos, dInX, dInY, dInXY, dMajPrincplIn, _ 
             dMinPrincplIn, dPolIn, vMajIAxis, vMinIAxis)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Compute length, centroid, moments of inertia, principle axes of an open or closed thin wire.
            </summary>
            <param name="dLength">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="dPrncplInertiaU">Principle moment of inertia to uDir.</param>
            <param name="dPrncplInertiaV">Principle moment of inertia to vDir.</param>
            <param name="dPrncplInertiaN">Principle moment of inertia to nDir.</param>
            <param name="AxisU">Major principle axis.</param>
            <param name="AxisV">Minor principle axis.</param>
            <param name="AxisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">Raised when CurveHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised when an invalid argument was used with the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim dLength, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertiaN As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis, oNIAxis As Vector
            oTopologyCurve.CentroidInertiaForWire(dLength, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertiaN, dPolarInertia, oMjIAxis, oMnIAxis, oNAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Determines the distance between this curve and the input surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="dDist">Output minimum distance.</param>
             <param name="posSrcPos">Point on this curve at minimum distance.</param>
             <param name="posInPos">Point on input surface at minimum distance.</param>
             <example>This is an example of finding the distance between this curve and an input surface.
             <code>
             Dim oPlnPoint1 As New Position(0R, -1R, 2R) 
             Dim oPlnPoint2 As New Position(0R, 3R, 2R) 
             Dim oPlnPoint3 As New Position(0R, 0R, 4R) 
             Dim oPlaneColl As New Collection(Of Position)() 
             oPlaneColl.Add(oPlnPoint1) 
             oPlaneColl.Add(oPlnPoint2) 
             oPlaneColl.Add(oPlnPoint3) 
             Dim oPlane As IPlane = New Ingr.SP3D.Common.Middle.Plane3d(oPlaneColl) 
             Dim oInSurf As ISurface = DirectCast(oPlane, ISurface) 
            
             oTopologyCurve.DistanceBetween(oInSurf, dDist, oPosSrcPos, oPosInPos)        
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this curve and the input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <example>This is an example of finding the distance between this curve and an input curve.
            <code>  
            Dim dDist As Double 
            Dim oPosSrcPos As Position, oPosInPos As Position 
            oTopologyCurve.DistanceBetween(oInCurve, dDist, oPosSrcPos, oPosInPos)       
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Determines the distance between this curve and the input point.
             </summary>
             <param name="oPoint3d">Input point.</param>
             <param name="dDist">Output minimum distance.</param>
             <param name="posSrcPos">Point on this curve at minimum distance.</param>
             <example>This is an example of finding the distance between this curve and an input point.
             <code>  
             Dim dDist As Double 
             Dim oPosSrcPos As Position 
             Dim oPoint3d As New Point3d(2, 2, 6) 
            
             oTopologyCurve.DistanceBetween(oPoint3d, dDist, oPosSrcPos)    
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the end points of this curve.
            </summary>
            <param name="posStart">Start position of the curve.</param>
            <param name="posEnd">End position of the curve.</param>
            <example>This is an example of finding a curve end points.
            <code>
            Dim oPos1 As Position, oPos2 As Position 
            oTopologyCurve.EndPoints(oPos1, oPos2) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
             <summary>
             Finds the intersection between this curve and a surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="colCurves">Collection of curve objects.</param>
             <param name="eIntersectCode">Enumerated value for the type of intersection.</param>
             <example>This is an example of finding the intersection between this curve and a surface.
             <code>
             Dim eIntersectCode As GeometryIntersectionType 
             Dim oIntPointColl As Collection(Of BusinessObject) 
            
             oTopologyCurve.Intersect(oInSurf, oIntPointColl, eIntersectCode) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
             <summary>
             Finds the intersection between this curve and another curve.
             </summary>
             <param name="oInCurve">Input curve.</param>
             <param name="colPos">Output collection of intersection points.</param>
             <param name="colOverlaps">Output collection of overlap points.</param>
             <param name="eIntersectCode">Enumerator describing the type of intersection.</param>
             <example>This is an example of finding the intersection between this curve and another curve.
             <code>
             Dim eIntersectCode As GeometryIntersectionType 
             Dim oIntPosColll As Collection(Of Position) 
             Dim oOverlapColll As Collection(Of Position)
            
             oTopologyCurve.Intersect(oInCurve, oIntPosColl, oOverlapColl, eIntersectCode)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on the curve.
            </summary>
            <param name="pos">Point to determine if on this curve.</param>
            <returns>True if the point is on the curve; False if the point is not on the curve.</returns>
            <example>This is an example of finding whether the input point is on the curve.
            <code>
            Dim point As New Position(3, 0, 0) 
            Dim isPointOn As Boolean = oTopologyCurve.IsPointOn(point)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of the curve.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <example>This is an example of finding the curve self-intersections.
            <code>
            Dim oIntPosColl As Collection(Of Position), oOverLapPosColl As Collection(Of Position) 
            oTopologyCurve.SelfIntersect(oIntPosColl, oOverLapPosColl) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along a curve at a given distance from 
            the start of the curve.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <example>This is an example of finding a point along a curve at a given distance.
            <code>
            Dim posAtDistanceAlong As Position = oTopologyCurve.PointAtDistanceAlong(oTopologyCurve.Length)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along a curve at a given distance from the given 
            start point on the curve. If the given point does not lie on the curve, 
            it is along normal to curve (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <example>This is an example of finding a point along a curve at a given distance from a given start point on the curve.
            <code>
            Dim posAtDistanceAlong As Position = oTopologyCurve.PointAtDistanceAlong(startPos, oTopologyCurve.Length)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the curve along the normal vector from the given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the curve along normal vector from a given point.
            <code>
            Dim pointToProject As New Position(10, 5, 5) 
            Dim projectPoint As Position = oTopologyCurve.ProjectPoint(pointToProject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the curve along the given vector from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <param name="vecProj">Vector to project along. If null,
            then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the curve along the given vector from a given point.
            <code>
            Dim pointToProject As New Position(10, 5, 5) 
            Dim projectPoint As Position = oTopologyCurve.ProjectPoint(pointToProject, New Vector(0, 1, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <example>This is an example of finding the tangent at a given point.
            <code>
            Dim tangentAtPoint As Vector = oTopologyCurve.TangentAtPoint(New Position(1, 0, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the curve.</param>
            <param name="vecNormal">The normal vector of the curve.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>No normal returned.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Normal returned, if curve is closed; then this is an oriented normal.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>A normal returned.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Least squares normal returned.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of finding the planarity and the normal for this curve.
            <code>
            Dim eScope As CurveScopeType 
            Dim vNormal As Vector 
            oTopologyCurve.ScopeNormal(eScope, vNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ParameterRange(System.Double@,System.Double@)">
            <summary>
            Gets the parameter range of the curve.
            </summary>
            <param name="dStartParam">Parameter value at start.</param>
            <param name="dEndParam">Parameter value at end.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ParameterAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the curve parameter at the position.
            </summary>
            <param name="oPos">Given position.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PositionAtParameter(System.Double)">
            <summary>
            Gets the curve position at the parameter.
            </summary>
            <param name="dParam">Given parameter value.</param>
            <returns>Position along the curve at the parameter.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.TangentAtParameter(System.Double)">
            <summary>
            Gets the tangent along the curve at the parameter value.
            </summary>
            <param name="dParam">Given parameter value.</param>
            <returns>Tangent vector.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Area">
            <summary>
            Gets the area of the curve.
            </summary>
            <returns>Area value of the curve.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Centroid">
            <summary>
            Gets the centroid of the curve.
            </summary>
            <returns>Position of centroid of the curve. </returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Form">
            <summary>
            Gets the form (closure) of the curve.
            </summary>
            <returns>Enumerated value of the curve closure.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Length">
            <summary>
            Gets the length of the curve.
            </summary>
            <returns>Length value of the curve.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Scope">
            <summary>
            Gets the scope (planarity) of the curve.
            </summary>
            <returns>Enumerated value of the curve planarity.</returns>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.EquipmentFoundation">
            <summary>
            Implementation for the EquipmentFoundation class. This class is used for supporting
            equipment. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.Equipment)">
            <summary>
            Creates an equipment foundation with an equipment and catalog part.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedEquipment">Equipment where the equipment foundation needs to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported object.
            <para>Raised when an invalid supported object is used to create an equipment foundation.</para></exception>
            <example>This is an example of how to create an equipment foundation with an equipment.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            'Create an equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
            'Create EquipmentFoundation with part and equipment. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipment)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.FoundationPort)">
             <summary>
             Creates an equipment foundation with a foundation port and catalog part.
             </summary>
             <param name="parentSystem">Parent system under which equipment foundation needs to be created.</param>
             <param name="part">The equipment foundation catalog part.</param>
             <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported object.
             <para>Raised when an invalid supported object is used to create an equipment foundation.</para></exception>
             <example>This is an example of how to create equipment foundation with a foundation port.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem)
             
             'Create an equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create EquipmentFoundation with part and foundation port. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, foundationPort)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.Equipment,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates an equipment foundation with an equipment and catalog part to the supporting object.
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="part">The equipment foundation catalog part.</param>
             <param name="supportedEquipment">Equipment where the equipment foundation needs to be created.</param>
             <param name="supportingObject">Bottom plane or supporting surface for the equipment foundation.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported or supporting object.
             <para>Raised when an invalid supported or supporting object is used to create an equipment foundation.</para></exception>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create an equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
             'Create EquipmentFoundation with part, equipment, and plane. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipment, supportingObject)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.FoundationPort,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates an equipment foundation with a foundation port and catalog part upto the supporting object.
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="part">The equipment foundation catalog part.</param>
             <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
             <param name="supportingObject">Bottom plane or supporting surface for the equipment foundation.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported or supporting object.
             <para>Raised when an invalid supported or supporting object is used to create an equipment foundation.</para></exception>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create an equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
             
             'Create EquipmentFoundation with part, foundation port, and supporting object. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, foundationPort, supportingObject)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Creates an equipment foundation with multiple equipment or foundation port and catalog part.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedObjects">Collection of supported objects where the equipment foundation needs to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported objects.
            <para>Raised when invalid supported objects are used to create an equipment foundation.</para></exception>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Create equipment1. 
            Dim posEquipment1 As New Position(5, 5, 5) 
            Dim equipment1 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment1.Origin = posEquipment1 
            
            'Create Equipment2. 
            Dim posEquipment2 As New Position(2, 0, 5) 
            Dim equipment2 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment2.Origin = posEquipment2 
            
            Dim equipments As New Collection(Of Equipment.Middle.Equipment)() 
            equipments.Add(equipment1) 
            equipments.Add(equipment2)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
            'Create EquipmentFoundation with part and equipment collection. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipments)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Creates an equipment foundation with multiple equipment or foundation port and catalog part upto supporting objects.
            </summary>
            <param name="parentSystem">Parent system under which equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedObjects">Collection of supported objects where the equipment foundation needs to be created.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported or supporting objects.
            <para>Raised when invalid supported or supporting objects are used to create an equipment foundation.</para></exception>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Create equipment1. 
            Dim posEquipment1 As New Position(5, 5, 5) 
            Dim equipment1 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment1.Origin = posEquipment1 
            
            'Create Equipment2. 
            Dim posEquipment2 As New Position(2, 0, 5) 
            Dim equipment2 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment2.Origin = posEquipment2 
            
            Dim equipments As New Collection(Of Equipment.Middle.Equipment)() 
            equipments.Add(equipment1) 
            equipments.Add(equipment2)
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            Dim supportingObjects As New Collection(Of BusinessObject)() 
            supportingObjects.Add(supportingObject)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
            'Create EquipmentFoundation with part, equipment collection, and supporting object collection.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipments, supportingObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.Equipment)">
            <summary>
            Creates an equipment foundation with equipment.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedEquipment">Supported equipment where the equipment foundation needs to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when an invalid supported object is used to create an equipment foundation.</exception>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Create EquipmentFoundation with equipment. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, equipment)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.FoundationPort)">
             <summary>
             Creates an equipment foundation with a foundation port
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when an invalid supported object is used to create an equipment foundation.</exception>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Get the plant. 
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             'Get the root system object. 
             Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
             Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
             
             'Create equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create EquipmentFoundation with foundation port. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, foundationPort)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.Equipment,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates an equipment foundation with an equipment upto the supporting object.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedEquipment">Supported equipment where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Bottom plane or supporting surface for the equipment foundation.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when an invalid supported or supporting object is used  to create an equipment foundation.</exception>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            'Create EquipmentFoundation with equipment and plane. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, equipment, supportingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.FoundationPort,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates an equipment foundation with a foundation port upto the supporting object.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Bottom plane or supporting surface for the equipment foundation.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when an invalid supported or supporting object is used to create an equipment foundation.</exception>
            <example> This is an example for creating an equipment foundation.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
            Dim foundationPort As FoundationPort = Nothing 
            If foundationPorts IsNot Nothing Then 
                foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
            End If 
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            'Create equipment foundation with foundation port and supporting object. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, foundationPort, supportingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d)">
            <summary>
            Creates an equipment foundation at the given point and catalog part.        
            </summary>
            <param name="parentSystem">Parent system to which the equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedPoint">Point where the equipment foundation needs to be created.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised when the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Exception is raised when connection to the database fails.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Exception is raised when an entity failed to be created.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">Exception is raised when there is failure to get the root selection name from the catalog.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">Exception is raised while getting the foundation from the foundation port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">Exception is raised when the supported object collection contains points and equipment together.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Exception is raised when the input part is invalid for the supported objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Exception is raised when a failure occurred while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception is raised when the supported objects' count is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Exception is raised when a failure occurred in setting the supported objects.</exception>
            <example> This example is to create equipment foundation by single point.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            
            'Get the root system object. 
            Dim rootSystem As ISystem = plant.RootSystem
            Dim structuralSystem As New StructuralSystem(rootSystem)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = catalogStructHelper.GetPart("BlockAndSlabEqpFndnAsm")
            
            'Origin point of the EquipmentFoundation
            Dim point3d As New Point3d(4, 8, 1) 
            
            'Create equipment foundation with part and point.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, point3d)
            MiddleServiceProvider.TransactionMgr.Commit("EquipmentFoundationByPoint")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates an equipment foundation at the given point and catalog part upto the supporting surface.        
            </summary>
            <param name="parentSystem">Parent system to which the equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedPoint">Point where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Bottom plane or supporting surface for the equipment foundation.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised when null arguments are passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Exception is raised when the connection to the database fails.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Exception is raised when an entity is failed to be created.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">Exception is raised when there is failure to get the root selection name from the catalog.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">Exception is raised while getting the foundation from the foundation port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">Exception is raised when the supported object collection contains points and equipment together.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Exception is raised when an input part is not valid for the supported objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Exception is raised when a failure occurred while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception is raised when the supported objects count is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Exception is raised when a failure occurred in setting the supported objects.</exception>
            <example>This example is to create equipment foundation by single point with plane as a supporting object.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = catalogStructHelper.GetPart("BlockAndSlabEqpFndnAsm")
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            'Creating the point where equipment foundation needs to be placed. 
            Dim point3d As New Point3d(0, 15, 3) 
            
            'Create equipment foundation with part, point, and plane.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, point3d, supportingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Structure.Middle.EquipmentFoundation)">
            <summary>
            Creates an equipment foundation using an existing equipment foundation.
            </summary>
            <param name="equipmentFoundation">The equipment foundation to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <example>This is an example of how to create equipment foundation with an existing equipment foundation.
            <code>
            'Create an equipment foundation which will be copied.
            Dim equipmentFoundationToCopy As EquipmentFoundation
            
            Dim equipmentFoundation As New EquipmentFoundation(equipmentFoundationToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetInputHelper">
            <summary>
            Retrieves the equipment foundation input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetSupportElements(System.Object,System.Object)">
            <summary>
            Retrieves the supported and supporting elements for the equipment foundation.
            </summary>
            <param name="supportedElements">Instance of equipment foundation supported elements.</param>
            <param name="supportingElements">Instance of equipment foundation supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the supported and supporting elements on the equipment foundation.
            </summary>
            <param name="supportedElements">Collection of supported elements.</param>
            <param name="supportingElements">Collection of supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetSupportCollection(System.Object)">
            <summary>
            Converts IJElements collections to a BusinessObject collection.
            </summary>
            <param name="elements">Collections of IJElements.</param>
            <returns>Collection of Business Objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetInputCriteria">
            <summary>
            Retrieves the equipment foundation input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ValidateInputObjectType(System.Object)">
            <summary>
            Abstract method to check whether the input object is valid or not.
            </summary>
            <param name="oSupportedObject">Input supported object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Abstract method to get the valid supported objects.
            </summary>
            <param name="supportedObjects">Collection of input supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the EquipmentFoundation
            </summary>
            <param name="xAxisNew">X-axis of the foundation port that needs to be set.</param>
            <param name="yAxisNew">Y-axis of the Foundation port that needs to be set.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetEquipmentFoundation(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Helper method to get equipment foundation using COM factory method.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">The equipment foundation catalog part.</param>
            <param name="supportedObjects">Collection of supported objects.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <returns>COM equipment foundation.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Raised when input part is invalid for the supported or supporting objects passed in.
            <para>Raised when invalid supported or supporting objects to create an equipment foundation.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ValidateEquipmentFoundationInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate the equipment foundation inputs.
            </summary>
            <param name="part">Equipment foundation Part.</param>
            <param name="supportedObjects">Collection of Supported Business Objects.</param>
            <param name="supportingObjects">Collection of Supporting Business Objects.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.XAxis">
            <summary>
            Returns the X-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.YAxis">
            <summary>
            Returns the Y-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ZAxis">
            <summary>
            Returns the Z-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.Origin">
            <summary>
            Gets or sets the position of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of EquipmentFoundation.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute">
            <summary>
            ComputedOutputAttribute is followed by ComputedOutput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a ComputedOutput in a custom GeometricConstructionDefinition.
            The lifetime of a ComputedOutput is controlled inside the Evaluate method.
            <para>The ComputedOutput can exist before the GeometricConstructionAssembly is created and
            the GeometricConstructionAssembly takes control of some of its interfaces described in the array of compute notification interface names.</para> 
            <para>The ComputedOutput can be created by the GeometricConstructionAssembly.
            When the GeometricConstructionAssembly is deleted, the ComputedOutput can stay active or be deleted depending upon the override delete propagation value.</para>
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of a ComputedOutputAttribute class with the given computed output collection name and array of compute notification interface names.
            </summary>
            <param name="collectionName">The computed output collection name. It must be unique for each computed output parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="notificationInterfaceNames">The array of compute notification interface names.
                                        <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                        If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                        If an empty array is given, then a notification is not triggered.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ComputedOutputAttribute is not found on ComputedOutput.
                                                           <para>Raised if more than one ComputedOutputAttribute is found on ComputedOutput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ComputedOutput is not preceded by the ComputedOutputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the computed output collection name is not unique for each computed output defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
            <example>This is an example of using ComputedOutputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define computed outputs
                [ComputedOutput("CopiedGeometricConstructions", new string [] {"IJGeometricConstructionAE"})]
                public ComputedOutput computedOutput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.#ctor(System.String,Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType,System.String[])">
            <summary>
            Initializes a new instance of a ComputedOutputAttribute class with the given computed output collection name, type of the override delete propagation, and array of compute notification interface names.
            </summary>
            <param name="collectionName">The computed output collection name. It must be unique for each computed output parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="overrideDeletePropagationType">Type of the override delete propagation.</param>
            <param name="notificationInterfaceNames">The array of compute notification interface names.
                                        <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                        If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                        If an empty array is given, then a notification is not triggered.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the OverrideDeletePropagationType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if there is no ComputedOutputAttribute found on ComputedOutput.
                                                           <para>Raised if more than one ComputedOutputAttribute is found on ComputedOutput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ComputedOutput is not preceded by the ComputedOutputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the computed output collection name is not unique for each computed output defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
            <example>This is an example of using ComputedOutputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define computed outputs
                [ComputedOutput("CopiedGeometricConstructions", OverrideDeletePropagationType.PropagateFromAssembly, new string [] {"IJGeometricConstructionAE"})]
                public ComputedOutput computedOutput;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.CollectionName">
            <summary>
            Gets or sets the computed output collection name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.NotificationInterfaceNames">
            <summary>
            Gets or sets the notification interface names.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedOutputAttribute.OverrideDeletePropagationType">
            <summary>
            Gets or sets the type of the override delete propagation.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection">
            <summary>
            Geometric construction collection is a sealed transient class to manipulate the geometric construction graphic inputs, computed inputs, graphic outputs, and components.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection"/> class.
            </summary>        
            <param name="comCollection">The COM collection.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Add(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Adds an item to the geometric construction collection.
            </summary>
            <param name="item">The object to add to the geometric construction collection.</param>        
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while adding the item to the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Clear">
            <summary>
            Removes all items from the geometric construction collection.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while removing all the elements from the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Contains(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether the geometric construction collection contains the specific item.
            </summary>
            <param name="item">The object to locate in the geometric construction collection.</param>
            <returns>True if the item is found in the geometric construction collection; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while searching the item in the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.CopyTo(Ingr.SP3D.Common.Middle.BusinessObject[],System.Int32)">
            <summary>
            Copies the entire geometric construction collection to a compatible one-dimensional BusinessObject array, starting at the specified index of the target array.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Remove(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Removes the first occurrence of a specific object from the geometric construction collection.
            </summary>
            <param name="item">The object to remove from the geometric construction collection.</param>
            <returns>True if an item was successfully removed from the geometric construction collection; otherwise, False.
               <para>This method also returns False if an item is not found in the original geometric construction collection.</para></returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the geometric construction collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator of type BusinessObject that can be used to iterate through the geometric construction collection.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a geometric construction collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Equals(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection)">
            <summary>
            Indicates whether the current geometric construction collection is equal to another geometric construction collection. 
            Recommended type-safe equals method.
            </summary>
            <param name="other">The geometric construction collection to test for equality.</param>
            <returns>True if the other geometric construction collection is equal; otherwise, False.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Add(Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Adds an item to the geometric construction collection with the specified key.
            </summary>
            <param name="item">The object to add to the geometric construction collection.</param>
            <param name="key">The ordinal index of the item being added. It can be integer or string.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while adding the item to the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.AddItems(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection)">
            <summary>
            Adds the items of another geometric construction collection to this geometric construction collection. 
            </summary>
            <param name="collection">The other geometric construction collection.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while adding the items to the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.RemoveItemByKey(System.Object)">
            <summary>
            Remove the item from the geometric construction collection that is associated with the specified key.
            </summary>
            <param name="key">The ordinal index of the item being added. It can be integer or string.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while removing an item by key from the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Remove(System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Removes the items from this geometric construction collection with specified keys also delete the items.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.GetKey(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the key for the given item.
            Returns null if the given item is not present in the geometric construction collection.
            </summary>
            <param name="item">The item for which the key is required.</param>
            <returns>The ordinal index of the item in the geometric construction collection. It can be integer or string.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while getting the key from the geometric construction collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.RenameKey(System.Object,System.Object)">
            <summary>
            Renames the key.
            </summary>
            <param name="oldKey">The old key.</param>
            <param name="newKey">The new key.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this geometric construction collection.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>True if the specified object is equal to this instance; otherwise, False.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.GetHashCode">
            <summary>
            Returns a hash code for this geometric construction collection.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.op_Equality(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="collection1">The first geometric construction collection.</param>
            <param name="collection2">The second geometric construction collection.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.op_Inequality(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="collection1">The first geometric construction collection.</param>
            <param name="collection2">The second geometric construction collection.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Count">
            <summary>
            Gets the count of items in this geometric construction collection.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while getting the count of items in the geometric construction collection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the geometric construction collection is read-only.
            Returns False since this geometric construction collection is not read-only.
            </summary>
            <returns>True if the geometric construction collection is read-only; otherwise, False.</returns>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Item(System.Object)">
            <summary>
            Gets an item at the specified key location.        
            </summary>
            <param name="key">The ordinal index of the item being added. It can be integer or string.</param>
            <returns>The item at the specified key location.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while getting the item from the geometric construction collection..</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.Keys">
            <summary>
            Gets the keys of items in this geometric construction collection.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionCollection.COMCollection">
            <summary>
            Gets the COM collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CustomSurfaceOutput">
            <summary>
            Class to represent the component of a business object, whose geometry consists of surfaces that represent an assembly of components. 
            These do not have separate business objects to represent the components.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CustomOutput">
            <summary>
            Abstract class to represent the component of a business object that represents an assembly of components. 
            The class does not have separate business objects to represent the components.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.CustomOutput.#ctor(System.String,System.String,System.String,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.PropertyValue})">
            <summary>
            Creates a custom output object to set the component name, material, and other properties.
            </summary>
            <param name="name">Name of the component.</param>
            <param name="materialType">Material type defining the material of the component.</param>
            <param name="materialGrade">Material grade defining the material of the component.</param>
            <param name="properties">Properties describing the component.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomOutput.Geometry">
            <summary>
            Abstract property to get the geometry of the component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomOutput.Name">
            <summary>
            Gets the name of the component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomOutput.Properties">
            <summary>
            Gets the properties that describe the component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomOutput.MaterialType">
            <summary>
            Gets the material type of the material associated with the component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomOutput.MaterialGrade">
            <summary>
            Gets the material grade of the material associated with the component.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.CustomSurfaceOutput.#ctor(System.String,System.String,System.String,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Surface3d},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.PropertyValue})">
            <summary>
            Creates a custom surface output object to set the component name, material, faces, and other properties.
            </summary>
            <param name="name">Name of the component.</param>
            <param name="materialType">Material type defining the material of the component.</param>
            <param name="materialGrade">Material grade defining the material of the component.</param>
            <param name="faces">Collection of surfaces defining the geometry of the component.</param>
            <param name="properties">Properties describing the component.</param>        
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>        
            <example>This is an example of how to create custom surface output object.
            <code>        
            Dim componentName As String = "Block"
            Dim materialType As String = "Concrete"
            Dim materialGrade As String = "Fc 3000"
            Dim blockFaces As New Collection(Of Surface3d) 'Substitute this line with the actual geometry of the component.  
            Dim blockProperties As New Collection(Of PropertyValue) 'Substitute this line with the actual properties specific to the component. 
            Dim blockComponent As New CustomSurfaceOutput(componentName, materialType, materialGrade, blockFaces, blockProperties)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomSurfaceOutput.Geometry">
            <summary>
            Gets the geometry of the component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomSurfaceOutput.Faces">
            <summary>
            Gets or sets the Collection of surfaces defining the geometry of the component.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructConnectableHelper">
            <summary>
            Helper class to implement IStructConnectable.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for the StructConnectableHelper class.
            </summary>
            <param name="structConnectable">Business Object which is a StructConnectable. </param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets a collection of StructPorts from an entity filtered by PortType and GeometryStage.
            </summary>
            <param name="ePortType">PortType enumerated values. </param>
            <param name="eGeometryStage">GeometryStage enumerated values.</param>
            <returns>TopologyPort ReadOnlyCollection.</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerater is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType value.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by PortType and GeometryStage.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets a collection of StructPorts from an entity filtered by PortType and GeometryOperationTypes in the graph.
            </summary>
            <param name="ePortType">PortType enumerated values.</param>
            <param name="eGeometryOperation">GeometryOperationTypes enumerated values.</param>
            <param name="eGraphPosition">GraphPosition enumerated values.</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType. PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this Geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets a collection of StructPorts from an entity filtered by Context and GeometryStage in the graph.
            </summary>
            <param name="ePortType">PortType enumerated values.</param>
            <param name="eContext">ContextTypes enumerated values.</param>
            <param name="eGeometryStage">GeometryStage enumerated values.</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerated value is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType. PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by Context and GeometryStage.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets a collection StructPorts from an entity filtered by Context and GeometryOperationTypes in the graph.
            </summary>
            <param name="ePortType">PortType enumerated values.</param>
            <param name="eContext">ContextTypes enumerated values.</param>
            <param name="eGeometryOperation">GeometryOperationTypes enumerated values.</param>
            <param name="eGraphPosition">GraphPosition enumerated values.</param>
            <returns>TopologyPort ReadOnlyCollection.</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.NotImplementedException">GraphPosition.After is not implemented at this time.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerated value is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this Geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by Context and GeometryOperationTypes.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port whose geometry will be created by a later operation. The port is needed to hook-up a connection.
            Typical use is for creating a physical connection with port geometry to be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID which will create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to create a port with the given port moniker data in case port is not found.</param>
            <returns>
            Structport created by the given moniker data.
            </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is failure to retrieve the PortType.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meet the given criteria.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port whose geometry will be created by a later operation. The port is needed to hook-up a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meet the given criteria.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortException">Raised when more than one port met the given criteria.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected exception occurs while gettign the port data for feature segment.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">Raised if context type is not base or offset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity. 
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>          
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at specific operation in the graph  from a given entity for a given sub id while ignoring Operator and Operation Id for filtering.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">operator id for the queried port.</param>
            <param name="operationType">Flag to specify the operation type</param>
            <param name="contextID">Flag to specify context Id</param>
            <param name="graphPosition">The graph position</param>
            <param name="subID">ID on the sub port. Also, type of the section face</param>
            <param name="createPort">Flag to create a port with given data in case port is not found</param>
            <returns>Gets sub port of the entity in the given conditions</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FromSOMToCOMPortType(Ingr.SP3D.Structure.Middle.TopologyGeometryType)">
            <summary>
            Convert enum .NET TopologyGeometryType to COM PortType.
            </summary>
            <param name="ePortType">enum TopologyGeometryType.</param>
            <returns>COM equivalent PortType.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FromSOMToCOMGeometrySelector(Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Convert enum .NET GeometryStage to COM StructGeometrySelector.
            </summary>
            <param name="eGeometryStage">enum GeometryStage.</param>
            <returns>COM equivalent StructGeometrySelector.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetProgIdFromGeometryOperation(Ingr.SP3D.Structure.Middle.GeometryOperationTypes)">
            <summary>
            Get the prog id from the geometry operation.
            </summary>
            <param name="geometryOperation">enum GeometryOperationTypes.</param>
            <returns>Prog id based on the passed geometry operation.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetLateBindingPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the late binding port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">The operation id.</param>
            <param name="operatorId">The operator id.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="ctx">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.ConvertElementsToTopologyPort(IMSCoreCollections.IJElements)">
            <summary>
            Converts the elements to topology port collection.
            </summary>
            <param name="elements">The elements.</param>
            <returns>Read-only collection of TopologyPorts</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FilterPorts(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Filter ports based on given criteria
            </summary>
            <param name="eGeometryType">Geometry type. Considered for filtering if greater than 1.</param>
            <param name="iOperatorId">Operator ID. Considered for filtering if greater than 0.</param>
            <param name="iOperationId">Operation ID. Considered for filtering if greater than 0.</param>
            <param name="iCtx">Context Type. Considered for filtering if greater than 0.</param>
            <param name="iXid">Section ID. Considered for filtering if greater than equal to -1.</param>
            <param name="oCOMElements">Collection (IJElements) of candidate ports.</param>
            <returns>Collection of ports meeting filter criteria.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetMemberFeatureData(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.MemberPart,System.Int32@,System.Int32@,Ingr.SP3D.Structure.Middle.ContextTypes@)">
            <summary>
            Gets the port data from the member at the feature.
            </summary>
            <param name="endCut">The end cut.</param>
            <param name="memberPart">The memberpart.</param>
            <param name="operationId">The operation id.</param>
            <param name="operatorId">The operator id.</param>
            <param name="contextType">Type of the context.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. 
            Order of the collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FrameConnection">
            <summary>
            FrameConnection class describes the positioning relationship between the parent member system and constraining objects.
            Two Frame connections (one at either end) are generated by the parent MemberSystem.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a frame connection from the database.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetEndMemberSystems">
            <summary>
            Gets the member systems connected at this end.
            </summary>
            <returns>Read-only collection of member system objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException">Raised when there is failure to get the member systems connected at the frame connection.</exception>
            <example>This is an example of the GetEndMemberSystems method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim colEndMemberSystems As ReadOnlyCollection(Of MemberSystem) = frameConnectionStartSupported.GetEndMemberSystems()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@)">
            <summary>
            Validates the given located objects for the frame connection and returns the related objects.
            </summary>
            <param name="locatedObjects">Collection of located objects.</param>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>Validate status of the connection.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException">Unexpected exception encountered during validation of the related objects from the frame connection.</exception>
            <example>This is an example of the ValidateRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)
            Dim locatedObjects As New Collection(Of BusinessObject)()
            Dim relatedObjects As Collection(Of BusinessObject) = Nothing
            locatedObjects.Add(frameConnectionSupporting)
            Dim connectionValidateStatus As ConnectionValidateStatus = frameConnectionStartSupported.ValidateRelatedObjects(locatedObjects, relatedObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Sets the related objects to the connection.
            These related objects can be any of the following:
            MemberSystem, Point, Surface, FrameConnection, Plane, or GridLine. 
            Each combination of objects should result in a unique position on that end. Therefore, 
            the following combinations are currently supported on an end: 
            <para>MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, persistent point, 
            Gridline/Gridline, and Gridplane/Gridline.</para>
            <para>This also accepts the empty collection to disconnect the member system from its related objects, if any.</para>
            </summary>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>Validation status of the connection.</returns>
            <exception cref="T:System.ArgumentNullException">Given collection of related objects to the frame connection is null or contains null objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Given collection of related objects to the frame connection does not provide a valid constraint for the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Given collection of related objects to the frame connection is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">Given frame connection is already disconnected, or the frame connection cannot be disconnected.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failure occurred in getting the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when an error occurs in getting the point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when an error occurs in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when an error occurs in setting the point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when an error occurs in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when an error occurs in setting the point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system Sketch3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get the end points on the curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3d path is not compatible with the given related object at the start or end of the member.</exception>
            <example>This is an example of the SetRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjects As New Collection(Of BusinessObject)()
            relatedObjects.Add(frameConnectionSupporting)
            Dim connectionValidateStatus As ConnectionValidateStatus = frameConnectionStartSupported.SetRelatedObjects(relatedObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjectsAndSetMemberPosition(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Validates the related objects and set member position.
            </summary>
            <param name="relatedObjects">The related objects.</param>
            <param name="memberEnd">The member end.</param>
            <returns>
            True, is members need to be disconnected, else false
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.String)">
            <summary>
            Sets the related objects to the connection and sets the given part name by overriding the selection by rule.
            These related objects can be any of the following:
            MemberSystem, Point, Surface, FrameConnection, Plane, or GridLine. 
            Each combination of objects should result in a unique position on that end. Therefore, the 
            following combinations are currently supported on an end: 
            <para>MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, persistent point, 
            Gridline/Gridline, and Gridplane/Gridline.</para>
            This also accepts the empty collection to disconnect the member system from its related objects if any.
            </summary>
            <param name="relatedObjects">Collection of related objects.</param>
            <param name="partName">Name of the frame connection part to override the selection of frame connection by rule.</param>
            <returns>Validation status of the connection.</returns>
            <exception cref="T:System.ArgumentNullException">Given collection of related objects to the frame connection is null, contains null objects, or if the given partName is null or empty string.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Given collection of related objects to the frame connection does not provide a valid constraint for the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Given collection of related objects to the frame connection is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">Given frame connection is already disconnected, or the frame connection cannot be disconnected.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failure occurred in getting the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when an error occurs in getting the point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when an error occurs in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when an error occurs in setting the point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when an error occurs in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when an error occurs in setting the point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system Sketch3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get the end points on the curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3d path is not compatible with the given related object at the start or end of the member.</exception>
            <example>This is an example of the SetRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjects As New Collection(Of BusinessObject)()
            relatedObjects.Add(frameConnectionSupporting)
            relatedObjects.Add(new Position(0,0,1))  //Subsitute position with a position along the supporting member
            Dim connectionValidateStatus As ConnectionValidateStatus = frameConnectionStartSupported.SetRelatedObjects(relatedObjectsSetRelatedObjects(oRelatedObjStart, "Tangent-Default")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetRelatedObjects">
            <summary>
            Gets the collection of related objects.
            If there are no related objects, an empty collection will be returned.
            </summary>
            <returns>Collection of related objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException">Raised when there is failure to get the related objects from the frame connection.</exception>
            <example>This is an example of the GetRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)       
            Dim relatedObjects As Collection(Of BusinessObject) = frameConnectionStartSupported.GetRelatedObjects()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnLocation(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.PositionRule,System.Double)">
            <summary>
            Sets the point-on member end rule, point-on position rule, and point-on ratio or point-on distance depending upon the point-on position rule. 
            </summary>
            <param name="memberEnd">Enumerated values for point-on member end rule.</param>
            <param name="positionRule">Enumerated values for point-on position rule.</param>
            <param name="value">The point-on ratio or point-on distance value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd or PositionRule enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point-on distance value is less than 0 or greater than the member length for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">Exception raised for the frame connection on a curved member system.</exception>
            <example>This is an example of the SetPointOnLocation method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)       
            frameConnectionStartSupported.SetPointOnLocation(MemberAxisEnd.Start, PositionRule.Ratio, 0.2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnLocation(Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.PositionRule,System.Double)">
            <summary>
            Sets the frame connection as point-on to the given supporting member system with the given point-on member end rule, point-on position rule, and point-on ratio or point-on distance value.
            </summary>
            <param name="memberEnd">Enumerated values for point-on member end rule.</param>
            <param name="positionRule">Enumerated values for point-on position rule.</param>
            <param name="value">The point-on ratio or point-on distance value.</param>
            <param name="supportingMember">The supporting member system on which the frame connection connected as point-on.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd or PositionRule enumerated values.</exception>
            <exception cref="T:System.ArgumentNullException">Member system is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Exception raised when supporting and supported members are the same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio is greater than 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the point-on ratio in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point-on distance is greater than 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting point-on distance in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">Exception raised for the frame connection on a curved member system.</exception>
            <example>This is an example of the SetPointOnLocation method.
            <code>
            Dim memberSystemSupported As MemberSystem 'Create a member system using member system constructor.
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            'Create memberSystemSupporting on which the FC should be set as pointOn.
            Dim memberSystemSupporting As MemberSystem  'Create member system on which the FC of other member should be set as point-on using member system constructor.
            frameConnectionStartSupported.SetPointOnLocation(memberSystemSupporting, MemberAxisEnd.Start, PositionRule.Ratio, 0.25)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the frame connection with the given root selection. 
            Returns the item which results from the selection rule.
            </summary>
            <param name="rootSelection">Root selection from which to start.</param>
            <returns>Item selected by selector rule.</returns>
            <exception cref="T:System.ArgumentNullException">Root selection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Exception raised if an error is encountered in the ExecuteSelectionRule method.</exception>
            <example>
            <code>
            'Example for method ExecuteSelectionRule.
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim selectionRule As String =  frameConnection.ExecuteSelectionRule("Seated-Top")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class for the selections.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim partClassName As String 'Substitute this line with the actual part class name instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = frameConnection.GetAvailableSelections(partClassName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = frameConnection.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim selectionRuleAnswer As PropertyValue = frameConnection.GetSelectionRuleAnswer(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim isSelectionQuestionOverridden As Boolean = frameConnection.IsSelectionQuestionOverridden(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            frameConnection.OverrideSelectionQuestion(questionName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim isParameterOverridden As Boolean = frameConnection.IsParameterOverridden(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            frameConnection.OverrideParameter(parameterName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = frameConnection.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim frameConnection As FrameConnection 'Substitute this line with the actual frame connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = frameConnection.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            frameConnection.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Applies the given matrix on the frame conenction.
            </summary>
            <param name="transformMatrix">Transformation matrix.</param>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException">Raised when there is failure to apply a transform on the frame connection.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)        
            Dim transformMatrix As New Matrix4X4()
            transformMatrix.SetIndexValue(12, 100)
            frameConnectionSupporting.Transform(transformMatrix)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsRelObjTypeBad(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks to see if the related object is a valid type or not.
            </summary>
            <param name="oRelatedObject">Related object.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsRelatedObjectFrameConnOrMemberSys(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            This method checks to see if any item in the relatedObjects collection is a member system or a frame connection.
            </summary>
            <param name="colRelatedObjects">The objects that are related to the connection.</param>
            <returns>True if any object in the collection is either a member system or a frame connection, otherwise false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ConvertFCValidateStatusToSOM(Ingr.SP3D.SPSMembers.SPSFCInputHelperStatus)">
            <summary>
            Converts SPSFCInputHelperStatus to ConnectionValidateStatus.
            </summary>
            <param name="eStatus"> SPSFCInputHelperStatus enumerator.</param>
            <returns> Equivalent ConnectionValidateStatus.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsValidPointOnRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate related objects for point-on condition to set.
            </summary>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>True if it is valid to set point-on properties.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">Raised if there is a failure in finding a valid member end from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Raised if there is a failure in getting the position of the frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnMemberEnd(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Sets the point-on member end for this frame connection.
            </summary>
            <param name="axisEnd">Refers to which member end.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnPositionRule(Ingr.SP3D.Structure.Middle.PositionRule)">
            <summary>
            Sets the point-on position rule for this frame connection.
            </summary>
            <param name="positionRule">Enumerated value for position rule.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error in setting point-on position rule in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnRatio(System.Double)">
            <summary>
            Sets the point-on ratio for this frame connection. 
            </summary>
            <param name="pointOnRatio">Point-on ratio value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error in setting point-on ratio value in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnDistance(System.Double)">
            <summary>
            Sets the point-on distance for this frame connection. 
            </summary>
            <param name="pointOnDistance">Point-on distance value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetPointOnDistanceRatioValue(System.Double@,System.Double@)">
            <summary>
            Gets the point-on ratio and point-on distance value for this frame connection. 
            </summary>
            <param name="pointOnRatio">Point-on ratio value.</param>
            <param name="pointOnDistance">Point-on distance value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when error in getting point-on distance or ratio value from the frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetObjectsAtEnd(Ingr.SP3D.Structure.Middle.MemberAxisEnd,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Boolean,System.String)">
            <summary>
            Sets the Related Objects to the member end.
            </summary>
            <param name="memberEnd">Which member end.</param>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="isDisconnectRelatedObjects"></param>
            <param name="partName">Name of the frame connection part to override the selection of frame connection by rule.</param>
            <returns>Enumerator to provide validate status of the frame connection with the given set of related objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when error in getting point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error in setting point-on ratio value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error in setting point-on position rule in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when error in setting point-on member end in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPositionAndAxis(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            This method sets the Position and Orientation of the Member Axis.
            </summary>
            <param name="colRelatedObjects">The collection related objects.</param>
            <param name="eMemberEnd">The member end.</param>
            <param name="oMemSys">The member system.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Related objects at start or end do not provide a valid constraint for the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Cannot retrieve the curved member system sketched or end points.</exception> 
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system sketched 3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Skech 3d path is not compatible with the given related object at the start or end of the member.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjectConstraints(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Checks to see the related objects are valid in terms of constraints
            </summary>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="eMemberEnd">Member End</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjectType(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Checks to see if the related objects is a valid in terms of count and type or not.
            </summary>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="eMemberEnd">Member End</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.MemberEnd">
            <summary>
            Read-only property to get the member end where the frame connection is located.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">Raised when there is failure to find a valid member end from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.Position">
            <summary>
            Gets the position of the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Raised when there is failure to get the position of the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.MemberSystem">
            <summary>
            Gets the member system to which the frame connection belongs.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException">Raised when there is failure to get the member system from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOGlobal">
            <summary>
            Gets or sets the global work point offset vector definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">Raised when there is failure to get or set the global work point offset on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the given WPOGlobal vector is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOLocal">
            <summary>
            Gets or sets the local work point offset vector definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">Raised when there is failure to get or set local work point offset on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Given WPOLocal vector is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOCardinalPoint">
            <summary>
            Gets or sets the work point offset cardinal point definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException">Raised when there is failure to get or set the work point offset cardinal point on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">Invalid work point offset cardinal point being set on the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOn">
            <summary>
            Read-only property that indicates if the member system end as identified by this frame connection is point-on.
            </summary>
            <returns>True if point-on condition is satisfied.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException">Raised when there is failure to get the point-on condition from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnDistance">
            <summary>
            Gets or sets the point-on distance for this frame connection. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException">Exception raised when there is an error in getting the point-on distance from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point-on distance value is less than 0 or greater than the member length for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnRatio">
            <summary>
            Gets or sets the point-on ratio for this frame connection. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException">Exception raised when there is an error in getting point-on ratio from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnPositionRule">
            <summary>
            Gets or sets the point-on position rule for this frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException">Exception raised when there is an error in getting the point-on position rule from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within PositionRule enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnMemberEnd">
            <summary>
            Gets or sets the point-on member end for this frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException">Exception raised when there is an error in getting the point-on member end from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PartName">
            <summary>
            Gets or sets the definition or part by name on the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when an unexpected error occurred while setting part name.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Given collection of related objects to the frame connection does not provide a valid constraint for the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Given collection of related objects to the frame connection is invalid.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.Part">
            <summary>
            Gets or sets the definition or part on the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginOid">
            <summary>
            Gets or sets the object identifier associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppId">
            <summary>
            Gets or sets the identifier associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WBSProjects">
            <summary>
            Gets the WBSProjects
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.ActiveNameRule">
            <summary>
            Gets or sets the active name rule. This method should be overriden because NameRule is associated to the FrameConnection.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute">
            <summary>
            GraphicInputAttribute is followed by GraphicInput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a GraphicInput in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of a GraphicInputAttribute class with the given graphic input collection name, prompt, filter, and minimum and maximum number of connected objects.
            If the input is modified on the IJGeometry interface, the GeometricConstruction is re-evaluated.
            </summary>
            <param name="collectionName">The graphic input collection name. It must be unique for each graphic input parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="promptResourceID">The ResourceID for prompt of the graphic input that is defined in localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input in case the promptResourceID is not found in localizer assembly.</param>
            <param name="filterOrStepFilterProgID">The filter string or step filter ProgID for the graphic input.</param>
            <param name="minimumNumberOfConnectedObject">The minimum number of connected objects with the graphic input.</param>
            <param name="maximumNumberOfConnectedObject">The maximum number of connected objects with the graphic input.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if GraphicInputAttribute is not found on GraphicInput.
                                                           <para>Raised if there is more than one GraphicInputAttribute found on GraphicInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicInput is not preceded by the GraphicInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the graphic input collection name is not unique for each graphic input defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the minimum or maximum number of connected objects is less than 0.</exception>
            <example>This is an example of using GraphicInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("OriginPoint", "ResourceName", "LocalizerAssemblyName", 100, "Select a point", "IJPoint", 1, 1)]
                public GraphicInput originPoint;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Initializes a new instance of a GraphicInputAttribute class with the given graphic input collection name, prompt, filter, array of compute notification interface names, and minimum and maximum number of connected objects.
            </summary>
            <param name="collectionName">The graphic input collection name. It must be unique for each graphic input parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="promptResourceID">The ResourceID for prompt of the graphic input that is defined in localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input in case the promptResourceID is not found in localizer assembly.</param>
            <param name="filterOrStepFilterProgID">The filter string or step filter ProgID for the graphic input.</param>
            <param name="minimumNumberOfConnectedObject">The minimum number of connected objects with the graphic input.</param>
            <param name="maximumNumberOfConnectedObject">The maximum number of connected objects with the graphic input.</param>
            <param name="notificationInterfaceNames">The array of compute notification interface names.
                                        <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                        If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                        If an empty array is given, then a notification is not triggered.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if a GraphicInputAttribute is not found on GraphicInput.
                                                           <para>Raised if there is more than one GraphicInputAttribute found on GraphicInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicInput is not preceded by the GraphicInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the graphic input collection name is not unique for each graphic input defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the minimum or maximum number of connected objects is less than 0.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
            <example>This is an example of using GraphicInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("OriginPoint", "ResourceName", "LocalizerAssemblyName", 100, "Select a point", "IJPoint", 1, 1, new string [] {"IJCurve", "IJArc"})]
                public GraphicInput originPoint;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.#ctor(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of a GraphicInputAttribute class with the given graphic input collection name, prompt, filter, and minimum and maximum number of connected objects.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            If the input is modified on IJGeometry interface, the GeometricConstruction is re-evaluated.
            </summary>
            <param name="collectionName">The graphic input collection name. It must be unique for each graphic input parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="promptResourceID">The ResourceID for prompt of the graphic input that is already defined in the default localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input in case the promptResourceID is not found in default localizer assembly.</param>
            <param name="filterOrStepFilterProgID">The filter string or step filter ProgID for the graphic input.</param>
            <param name="minimumNumberOfConnectedObject">The minimum number of connected objects with the graphic input.</param>
            <param name="maximumNumberOfConnectedObject">The maximum number of connected objects with the graphic input.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if GraphicInputAttribute is not found on GraphicInput.
                                                           <para>Raised if there is more than one GraphicInputAttribute found on GraphicInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicInput is not preceded by the GraphicInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the graphic input collection name is not unique for each graphic input defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the minimum or maximum number of connected objects is less than 0.</exception>
            <example>This is an example of using GraphicInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("OriginPoint", 1, "Select a point", "IJPoint", 1, 1)]
                public GraphicInput originPoint;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.#ctor(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Initializes a new instance of a GraphicInputAttribute class with the given graphic input collection name, prompt, filter, array of compute notification interface names, and minimum and maximum number of connected objects.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="collectionName">The graphic input collection name, must be unique for each graphic input parameters in a GeometricConstructionDefinition class.</param>        
            <param name="promptResourceID">The ResourceID for prompt of the graphic input that is already defined in the default localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input in case the promptResourceID is not found in default localizer assembly.</param>
            <param name="filterOrStepFilterProgID">The filter string or step filter ProgID for the graphic input.</param>
            <param name="minimumNumberOfConnectedObject">The minimum number of connected objects with the graphic input.</param>
            <param name="maximumNumberOfConnectedObject">The maximum number of connected objects with the graphic input.</param>
            <param name="notificationInterfaceNames">The array of compute notification interface names.
                                        <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                        If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                        If an empty array is given, then a notification is not triggered.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if GraphicInputAttribute is not found on GraphicInput.
                                                           <para>Raised if there is more than one GraphicInputAttribute found on GraphicInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicInput is not preceded by the GraphicInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the graphic input collection name is not unique for each graphic input defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the minimum or maximum number of connected objects is less than 0.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
            <example>This is an example of using GraphicInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("OriginPoint", 1, "Select a point", "IJPoint", 1, 1, new string [] {"IJCurve", "IJArc"})]
                public GraphicInput originPoint;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.CollectionName">
            <summary>
            Gets or sets the graphic input collection name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.PromptResourceID">
            <summary>
            Gets or sets the ResourceID for prompt of the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.Prompt">
            <summary>
            Gets or sets the prompt of the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.DefaultPrompt">
            <summary>
            Gets or sets the default prompt of the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.FilterOrStepFilterProgid">
            <summary>
            Gets or sets the filter string or step filter ProgID for the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.MinimumNumberOfConnectedObject">
            <summary>
            Gets or sets the minimum number of connected objects with the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.MaximumNumberOfConnectedObject">
            <summary>
            Gets or sets the maximum number of connected objects with the graphic input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputAttribute.NotificationInterfaceNames">
            <summary>
            Gets or sets the notification interface names.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedInputAttribute">
            <summary>
            ComputedInputAttribute is followed by ComputedInput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a ComputedInput in a custom GeometricConstructionDefinition.    
            <para>A computed input is evaluated internally during the Evaluate method. It is not selected by the user and 
            is not displayed on the GeometricConstruction ribbon bar.</para>
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedInputAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of a ComputedInputAttribute class with the given computed input collection name.
            If the input is modified on IJGeometry interface, the GeometricConstruction is re-evaluated.
            </summary>        
            <param name="collectionName">The computed input collection name. It must be unique for each computed input parameter defined in a custom GeometricConstructionDefinition class.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ComputedInputAttribute is not found on ComputedInput.
                                                           <para>Raised if more than one ComputedInputAttribute is found on ComputedInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ComputedInput is not preceded by the ComputedInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the computed input collection name is not unique for each computed input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ComputedInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define computed inputs
                [ComputedInput("Points")]
                public ComputedInput points;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedInputAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of a ComputedInputAttribute class with the given computed input collection name and array of compute notification interface names. 
            </summary>
            <param name="collectionName">The computed input collection name. It must be unique for each computed input parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="notificationInterfaceNames">The array of compute notification interface names.
                                        <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                        If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                        If an empty array is given, then a notification is not triggered.</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ComputedInputAttribute is not found on ComputedInput.
                                                           <para>Raised if more than one ComputedInputAttribute is found on ComputedInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ComputedInput is not preceded by the ComputedInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the computed input collection name is not unique for each computed input defined in custom GeometricConstructionDefinition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
            <example>This is an example of using ComputedInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define computed inputs
                [ComputedInput("Points", new string [] {"IJDObject"})]
                public ComputedInput points;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedInputAttribute.CollectionName">
            <summary>
            Gets or sets the computed input collection name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ComputedInputAttribute.NotificationInterfaceNames">
            <summary>
            Gets or sets the notification interface names.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ProfilePart">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all parts belonging to a profile group.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructCrossSection">
            <summary>
            Derived from ICrossSection. 
            Realized by all wrapper classes that allow setting a cross section and returning key point dimensions and nominal dimensions. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICrossSection">
            <summary>
            Realized by all wrapper classes that allow setting a cross section. 
            Should be defined in CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.CrossSection">
            <summary>
            Gets or sets the cross section catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionStandard">
            <summary>
            Gets the section standard of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionType">
            <summary>
            Gets the section type of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionName">
            <summary>
            Gets the section name of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.CrossSectionTypeName">
            <summary>
            Gets the type name (alias) of the cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="uCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoord"> V-coordinate for the keypoint in the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space at the given position along the profile.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="PositionAlong"> Position along the profile.</param>
            <param name="uCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoord"> V-coordinate for the keypoint in the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            </summary>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            </summary>
            <param name="PositionAlong"></param>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IManufacturable">
            <summary>
            Interface to be implemented by all classes with object instances that may be manufactured.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IManufacturable.Manufacture">
            <summary>
            Returns a reference to the manufactured object associated
            with the part to which this method is called.
            
            If this part is not already manufactured, the implementation
            must manufacture it and return the manufactured object.
            </summary>
            <returns>A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to
            either ManufacturingPlate or ManufacturingProfile).</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IManufacturable.Manufacture(System.String,System.String)">
            <summary>
            Returns a reference to the manufactured object associated
            with the part to which this method is called.
            
            If this part is not already manufactured, the implementation
            must manufacture it with the input process and marking settings
            and return the manufactured object.
            
            If the part is already manufactured, the implementation must
            ensure that the new settings are applied on the manufactured part.
            </summary>
            <param name="processSettings">The process settings.</param>
            <param name="markingSettings">The marking settings.</param>
            <returns>A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to
            either ManufacturingPlate or ManufacturingProfile).</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.#ctor">
            <summary>
            Constructor for the ProfilePart class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.PlaceEndCutFeature(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.EndCutType)">
            <summary>
            Places an end cut feature on a profile part.
            </summary>
            <param name="boundedPort">End of the profile part used for the end cut feature placement.</param>
            <param name="feature">End cut feature to be placed.</param>
            <param name="endCutType">Type of end cut feature - web or flange.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException">Error in placing end cut feature.</exception>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerater is out of range.</exception>
            <example>This is an example of the PlaceEndCutFeature method. 
            <code>
            Dim feature As Feature 'Substitute this line with actual feature instance
            Dim boundedPort As IPort 'Substitute this line with actual bounded port from profile part
            Dim profilePart As ProfilePart 'Substitute this line with actual profile part instance        
            profilePart.PlaceEndCutFeature(boundedPort, feature, EndCutType.FlangeCutTop) 
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetSectionEdgesAtPlane(Ingr.SP3D.Common.Middle.IPlane,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Structure.Middle.TopologyCurve}@,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}@)">
            <summary>
            Gets section edges of a profile part at a given plane for end cut feature computation.    
            </summary>
            <param name="plane">Intersecting section plane.</param>
            <param name="isExtend">Flag to extend the profile part before intersecting the plane.</param>
            <param name="sectionEdges">Collection of section edges.</param>
            <param name="sectionFaceTypes">Collection of edge names.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException">Error in getting section edges at plane.</exception>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception>
            <example>This is an example of the GetSectionEdgesAtPlane method. 
            <code>
            Dim plane As IPlane = Nothing 'Substitute this line with actual intersecting plane instance
            Dim sectionEdges As ReadOnlyCollection(Of TopologyCurve) = Nothing
            Dim sectionFaceTypes As ReadOnlyCollection(Of Integer) = Nothing
            Dim profilePart As ProfilePart 'Substitute this line with actual profile part instance
            profilePart.GetSectionEdgesAtPlane(oPlane, False, sectionEdges, sectionFaceTypes)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetSectionFaces(System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.BusinessObject}@,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}@)">
            <summary>
            Gets the section faces from a profile part.
            </summary>
            <param name="isExtend">Flag to extend the profile part before intersecting the plane.</param>
            <param name="sectionFaces">Collection of section faces. </param>
            <param name="sectionFaceTypes">Collection of edge names. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException">Error in getting section faces.</exception>
            <example>This is an example of the GetSectionFaces method. 
            <code>        
            Dim sectionFaces As ReadOnlyCollection(Of BusinessObject) = Nothing
            Dim sectionFaceTypes As ReadOnlyCollection(Of Integer) = Nothing
            Dim profilePart As ProfilePart 'Substitute this line with actual profile part instance
            profilePart.GetSectionFaces(False, sectionFaces, sectionFaceTypes)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetEndCutSketchingPlaneOrigin(Ingr.SP3D.Common.Middle.Matrix4X4,Ingr.SP3D.Structure.Middle.EndCutType)">
            <summary>
            Gets the end cut sketching plane origin for the end cut type.
            </summary>
            <param name="matrix">Matrix4X4 object.</param>
            <param name="endCutType">EndCutType enumerator.</param>
            <returns>Position</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException">Error in getting the end cut sketching plane origin.</exception>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enumerater is out of range.</exception>
            <example>This is an example of the GetEndCutSketchingPlaneOrigin method. 
            <code>        
            Dim matrix As Matrix4X4 'Substitute this line with actual matrix instance
            Dim profilePart As ProfilePart 'Substitute this line with actual profile part instance
            Dim endCutSketchingPlaneOrigin As Position = profilePart.GetEndCutSketchingPlaneOrigin(matrix, EndCutType.FlangeCutTop)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetAssemblyConnectionsAtEnd(System.Boolean)">
            <summary>
            Gets the existing assembly connections from the end of this profile part.
            Returns an empty collection if assembly connections are not on the end of this profile part.
            </summary>
            <param name="isStart">Boolean to indicate whether this is the base/offset side of a stiffener part base or the start/end of a member part.</param>
            <returns>Read-only collection of existing assembly connections from the end of this profile part.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetFreeEndCut(System.Boolean)">
            <summary>
            Gets the existing free end cut from the end of this profile part.
            Returns null if no free end cut at the end of this profile part.
            </summary>
            <param name="isStart">Boolean to indicate whether this is the base/offset side of a stiffener part base or the start/end of a member part.</param>
            <returns>Existing free end cut from the end of this profile part.</returns>
            <example>This is an example of the GetFreeEndCut method. 
            <code>        
            Dim profilePart As ProfilePart 'Get profile part
            Dim freeEndCut As BusinessObject = profilePart.GetFreeEndCut(True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetMatrixAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the matrix at the position along the profile.
            </summary>
            <param name="positionAlong">The position along.</param>
            <returns>Matrix at the given position.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPortForEndCut(System.Boolean)">
            <summary>
            Gets the port for an end cut.
            </summary>
            <param name="isStart">Boolean to indicate whether this is the base/offset side of a stiffener part base or the start/end of a member part.</param>
            <returns>Port as IPort object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetMinimumDistanceFromSectionFaces(Ingr.SP3D.Structure.Middle.SectionFaceType,Ingr.SP3D.Structure.Middle.SectionFaceType)">
            <summary>
            Gets the minimum distance from section faces.
            </summary>
            <param name="faceType1">The face type1.</param>
            <param name="faceType2">The face type2.</param>
            <returns>The minimum distance between the faces.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if called on designed members.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the distance between faces.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetMinimumDistanceFromSectionFaces(Ingr.SP3D.Structure.Middle.IStructConnectable,Ingr.SP3D.Structure.Middle.SectionFaceType,Ingr.SP3D.Structure.Middle.SectionFaceType)">
            <summary>
            Gets the minimum distance from section faces.
            </summary>
            <param name="connectableHelper">The connectable helper.</param>
            <param name="faceType1">The first section face type.</param>
            <param name="faceType2">The second section face type.</param>
            <returns>The minimum distance between the input faces.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the distance between faces.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the object.
            </summary>
            <param name="xAxisNew">X-axis of the foundation port to be set.</param>
            <param name="yAxisNew">Y-axis of the foundation port to be set.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds another assembly child to the profile part.
            </summary>
            <param name="oChild">AssemblyChild interface.</param>
            <exception cref="T:System.ArgumentNullException">An argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space.
            Abstract method to be implemented by the subclass.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="uCoordinate"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate"> V-coordinate for the keypoint in the cross section.</param>
            <example>This is an example of the GetKeyPointCoordinates method.
            <code>
            Dim lKeyPoint As Integer = 1
            Dim uCoOrd As Double = 0
            Dim vCoOrd As Double = 0
            oMemberPart.GetKeyPointCoordinates(lKeyPoint, oPositionAlong, uCoOrd, vCoOrd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space at the given position along the profile.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="posAlong"> Position along the profile.</param>
            <param name="uCoordinate"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate"> V-coordinate for the keypoint in the cross section.</param>
            <example>This is an example of the GetKeyPointCoordinates method.
            <code>
            Dim lKeyPoint As Integer = 1
            Dim oPositionAlong As New Position(5, 5, 0)
            Dim uCoOrd As Double = 0
            Dim vCoOrd As Double = 0
            oMemberPart.GetKeyPointCoordinates(lKeyPoint, oPositionAlong, uCoOrd, vCoOrd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
            <example>This is an example of the GetNominalSectionSize method.
            <code>
            Dim dwidth As Double = 0
            Dim ddepth As Double = 0
            oMemberPart.GetNominalSectionSize(dwidth, ddepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets nominal size, which is the width and depth of the profile section.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="posAlong">Position along the profile part.</param>
            <param name="width">Width of the profile section. </param>
            <param name="depth">Depth of the profile section.</param>
            <example>This is an example of the GetNominalSectionSize method.
            <code>
            Dim oPositionAlong As New Position(5, 5, 0)
            Dim dwidth As Double = 0
            Dim ddepth As Double = 0
            oMemberPart.GetNominalSectionSize( oPositionAlong, dwidth, ddepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.Manufacture">
            <summary>
            Returns a reference to the manufactured object associated
            with the part on which this method is called.
            If this part is not already manufactured, the implementation
            must manufacture it and return the manufactured object.
            </summary>
            <returns>
            A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to ManufacturingProfile).
            </returns>
            <example>This code shows how to manufacture a stiffener with default
            process and marking settings.  The code assumes you have successfully
            created a structural system, grids, plate systems, and placed a
            stiffener system with a specified cross section, material, molded
            orientation, mounting face, load point, boundaries, and any other
            inputs necessary.
            <code>
            Dim stiffenerSystem As StiffenerSystem
            ' ... (Create a Stiffener system with all necessary and sane inputs).
            
            'Detail the Profile System
            stiffenerSystem.Detail()
            
            'Get the profile part from the profile system.
            Dim stiffenerPart As StiffenerPart
            
            Dim sysProfilePartColl As ReadOnlyCollection(Of ProfilePart) = stiffenerSystem.GetParts()
            If sysProfilePartColl IsNot Nothing Then
                If sysProfilePartColl.Count > 0 Then
                    stiffenerPart = DirectCast(sysProfilePartColl(0), StiffenerPart)
                End If
            End If
            
            'Now manufacture it by calling the Manufacture method.  Since there aren't any arguments passed,
            'the most suitable process and marking settings are automatically selected.  Since the result
            'of the method is of BusinessObject type, remember to cast it to ManufacturingProfile type.
            Dim manufacturedProfile as ManufacturingProfile
            manufacturedProfile = DirectCast(stiffenerPart.Manufacture(), ManufacturingProfile)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.Manufacture(System.String,System.String)">
            <summary>
            Returns a reference to the manufactured object associated
            with the part on which this method is called.
            If this part is not already manufactured, the implementation
            must manufacture it with the input process and marking settings
            and return the manufactured object.
            If the part is already manufactured, the implementation must
            ensure that the new settings are applied on the manufactured part.
            </summary>
            <param name="processSettings">The process settings.</param>
            <param name="markingSettings">The marking settings.</param>
            <returns>
            A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to ManufacturingProfile).
            </returns>
            <example>This code shows how to manufacture a stiffener with specified
            process and marking settings.  The code assumes you have successfully
            created a structural system, grids, plate systems, and placed a
            stiffener system with a specified cross section, material, molded
            orientation, mounting face, load point, boundaries, and any other
            inputs necessary.
            <code>
            Dim stiffenerSystem As StiffenerSystem
            ' ... (Create a Stiffener system with all necessary and sane inputs).
            
            'Detail the Profile System
            stiffenerSystem.Detail()
            
            'Get the profile part from the profile system.
            Dim stiffenerPart As StiffenerPart
            
            Dim sysProfilePartColl As ReadOnlyCollection(Of ProfilePart) = stiffenerSystem.GetParts()
            If sysProfilePartColl IsNot Nothing Then
                If sysProfilePartColl.Count > 0 Then
                    stiffenerPart = DirectCast(sysProfilePartColl(0), StiffenerPart)
                End If
            End If
            
            'Now manufacture it by calling the Manufacture method with the process and
            'marking settings as string arguments.  Since the result of the method is
            'of BusinessObject type, remember to cast it to ManufacturingProfile type.
            Dim manufacturedProfile as ManufacturingProfile
            manufacturedProfile = DirectCast( stiffenerPart.Manufacture("Default_ProfileProcess", _
                                                                        "Linear_ProfileMarking"), _
                                              ManufacturingProfile )
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by the port geometry type and geometry stage.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>
            TopologyPort ReadOnlyCollection objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>
            TopologyPort ReadOnlyCollection objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology context to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>
            TopologyPort ReadOnlyCollection objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology Context to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>
            TopologyPort ReadOnlyCollection objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is for creating a physical connection with port geometry that will be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag in which to create a port with the given moniker data in case the port is not found.</param>
            <returns>
            Structure port created by the given moniker data.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face or subport ID.</param>
            <param name="geometryStage">Geometry stage.</param>
            <param name="createPort">Flag in which to create a port with the given moniker data in case the port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature.
            If the createPort argument is true, it will create a late binding port; i.e., a port without current geometry.
            Typical use is to get face/edge late binding ports after the end cut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID while ignoring operator and operation ID for filtering.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">Operator ID for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport and type of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity with the given conditions</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.FreeEndCuts">
            <summary>
            Gets all the existing free end cuts from both ends of this profile part.
            Returns an empty collection if free end cuts are not on this profile part.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Openings">
            <summary>
            Gets the existing openings on the given part.
            Returns an empty collection if an opening is not on this profile part.
            </summary>
            <value>The openings.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetOpeningsException">Unable to get the openings from the plate part since the part is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.DistanceFromWebToFlangeTop">
            <summary>
            Gets the minimum distance from the web to the top flange port of the profile.
            It equals flange thickness depending on section type (e.g., W section).
            </summary>
            <value>
            The distance from web to flange top. Returns zero if top flange is not available.
            </value>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the distance from the profile part web right to the flange top.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if called on designed members.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.DistanceFromWebToFlangeBottom">
            <summary>
            Gets the minimum distance from the web to the bottom flange port of the profile.
            It equals flange thickness depending on section type (e.g., W section).
            </summary>
            <value>
            The distance from web to flange bottom.  Returns zero if bottom flange is not available.
            </value>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the distance from the profile part web right to the flange bottom.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if called on designed members.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.XAxis">
            <summary>
            Gets the X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.YAxis">
            <summary>
            Gets the Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.ZAxis">
            <summary>
            Gets the Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Origin">
            <summary>
            Gets or sets the position of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.AssemblyChildren">
            <summary>
            Gets the read-only collection of Assembly Children objects of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the profile part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.CrossSection">
            <summary>
            Gets or sets the cross-section catalog part.  
            Abstract method to be implemented by the subclass.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionStandard">
            <summary>
            Read-only property to get the section standard of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionType">
            <summary>
            Read-only property to get the section type of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionName">
            <summary>
            Read-only property to get the section name of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.CrossSectionTypeName">
             <summary>
             Read-only property to get the type name (alias) of the cross section.
             </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException">CrossSectionClass object is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Material">
            <summary>
            Gets or sets the material part.  
            Abstract method to be implemented by the subclass.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialStandard">
            <summary>
            Read-only property to get the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialType">
            <summary>
            Read-only property to get the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialGrade">
            <summary>
            Read-only property to get the material grade.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d">
            <summary>
            Provides generalization of all entities supporting geometric construction sphere-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Sphere3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Sphere3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction Sphere3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "SphereByCenterRadius"
            
            Dim sphere3d As New Sphere3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Sphere3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction sphere3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Sphere3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction Sphere3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "SphereByCenterRadius"
            
            Dim sphere3d As New Sphere3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the sphere.
            </summary>
            <param name="complexString3d">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while adding a boundary.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            Dim complexString3d As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            sphere3d.AddBoundary(complexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colComplexString3d">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the boundaries.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            Dim colComplexString3d As Collection(Of Common.Middle.ComplexString3d) = Nothing
            sphere3d.GetBoundaries(colComplexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at i.
            </summary>
            <param name="index">Returns the boundary at index i.</param>
            <param name="complexString3d">Output boundary.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if index is not between 1 and number of boundaries.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the boundary.</exception>
            <example>This is an example of the GetBoundary method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            Dim complexString3d As Common.Middle.ComplexString3d
            sphere3d.GetBoundary(1, complexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the sphere.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while removing all boundaries.</exception>
            <example>This is an example of the RemoveAllBoundaries method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            sphere3d.RemoveAllBoundaries()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.RemoveBoundary(System.Int32)">
            <summary>
            Removes boundary i.
            </summary>
            <param name="index">Index integer.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while removing the boundary at the index.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if index is not between 1 and number of boundaries.</exception>
            <example>This is an example of the RemoveBoundary method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            sphere3d.RemoveBoundary(1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries.
            This removes any previous boundaries.
            </summary>
            <param name="colComplexString3d">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the boundaries.</exception>        
            <example>This is an example of the SetBoundaries method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            Dim colComplexString3d As Collection(Of Common.Middle.ComplexString3d) 'Substitute this line with the actual collection of ComplexString3d instance.        
            sphere3d.SetBoundaries(colComplexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at index i.
            </summary>
            <param name="index">Index integer.</param>
            <param name="complexString3d">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while removing the boundary at index.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if index is not between 1 and the number of boundaries.</exception>
            <example>This is an example of the SetBoundary method.
            <code>
            Dim sphere3d As Sphere3d 'Substitute this line with the actual geometric construction Sphere3d instance.
            Dim complexString3d As Common.Middle.ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            sphere3d.SetBoundary(1, complexString3d)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.BoundaryCount">
            <summary>
            Gets the number of boundaries.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the boundary count.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.Capped">
            <summary>
            Gets or sets whether or not capped; only if you have a bounded sphere and the boundaries are closed.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting whether capped.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.Center">
            <summary>
            Gets or sets the center.
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the center.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.OriginDir">
            <summary>
            Gets or sets the origin direction. This points from the center of the sphere to the origin of the V-parameterization.
            Returns an immutable vector.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the origin direction.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if origin direction length is zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.PoleDir">
            <summary>
            Gets or sets the pole direction. This points from the center to the north pole of the sphere.
            Returns an immutable vector.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the pole direction.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if pole direction length is zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the radius is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the radius.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Sphere3d.ReverseV">
            <summary>
            Gets or sets reverse V. Default direction for the V-parameterization is counter clockwise around the pole direction.
            If ReverseV = True, then V-parameterization is clockwise.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting reverse in V.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.IsRemovedAtCommitAttribute">
            <summary>
            IsRemovedAtCommitAttribute is used on a GeometricConstructionDefinition class to override the default behavior of the geometric construction constructed with this definition. 
            Setting this attribute as True will delete the geometric construction at commit. 
            For example, if a geometric construction provides a fillet and has two curve inputs, this geometric construction does not have any role after the fillet is created.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.IsRemovedAtCommitAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of a IsRemovedAtCommitAttribute class defining the geometric construction behavior to add.
            </summary>
            <param name="isRemovedAtCommit">If set to True this geometric construction will be deleted at commit.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if more than one IsRemovedAtCommitAttribute is defined in a custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using IsRemovedAtCommitAttribute.
            <code>
            [IsRemovedAtCommit(true)]
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
            
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.IsRemovedAtCommitAttribute.IsRemovedAtCommit">
            <summary>
            Gets or sets a value indicating whether this geometric construction will be deleted at commit.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.DefaultLocalizerAttribute">
            <summary>
            Default localizer for the custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.DefaultLocalizerAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates the default localizer for the custom GeometricConstructionDefinition class defining the localizer resource name and localizer assembly name.
            </summary>        
            <param name="resourceName">The locale-free resource name.</param>
            <param name="assemblyName">The localizer assembly name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if more than one DefaultLocalizerAttribute is defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using DefaultLocalizerAttribute.
            <code>
            [DefaultLocalizer("ResourceName", "LocalizerAssembly")]
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                
            }
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.DefaultLocalizerAttribute.#ctor(System.String)">
            <summary>
            Creates the default localizer for the custom GeometricConstructionDefinition class defining the localizer resource name.
            Assumes the current custom GeometricConstructionDefinition assembly is the localizer assembly.
            </summary>        
            <param name="resourceName">The locale-free resource name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if more than one DefaultLocalizerAttribute is defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using DefaultLocalizerAttribute.
            <code>
            [DefaultLocalizer("ResourceName")]
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                
            }
            </code>
            </example>        
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.DefaultLocalizerAttribute.AssemblyName">
            <summary>
            Gets or sets the default localizer assembly name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.DefaultLocalizerAttribute.ResourceName">
            <summary>
            Gets or sets the default localizer resource name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.SelfOutput">
            <summary>
            SelfOutput is used on a GeometricConstructionDefinition class defining the self-output parameter.
            </summary>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SelfOutput.#ctor(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.SelfOutput"/> class.
            </summary>
            <param name="notificationInterfaceNames">The notification interface names.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.SelfOutput.NotificationInterfaceNames">
            <summary>
            Gets the notification interface names for this self output.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly">
            <summary>
            GeometricConstructionAssembly is a geometric construction that executes compiled code or interprets an XML document that is generated from the print graph or by the export of a geometric construction set.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates a transient geometric construction assembly occurrence with the geometric construction part.
            </summary>
            <param name="part">Geometric construction catalog part.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised if the geometric construction part is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating the geometric construction by part.</exception>
            <example>This is an example of how to create a transient geometric construction assembly occurrence with the geometric construction part.
            <code>   
            Dim catalogBaseHelper As New CatalogBaseHelper()
            Dim geometricConstructionPart As Part = DirectCast(catalogBaseHelper.GetPart("Circle 200x300"), Part)
            
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly(geometricConstructionPart)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates a persistent geometric construction assembly occurrence with the geometric construction part under the given parent system.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction assembly.</param>
            <param name="part">Geometric construction catalog part.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised if the geometric construction part is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating the geometric construction by part.</exception>
            <example>This is an example of how to create a persistent geometric construction assembly occurrence with the geometric construction part under the given parent system.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem        
            
            Dim catalogBaseHelper As New CatalogBaseHelper()
            Dim geometricConstructionPart As Part = DirectCast(catalogBaseHelper.GetPart("Oval 600x450x500"), Part)
            
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly(rootSystem, geometricConstructionPart)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction assembly or geometric construction set container occurrence with the geometric construction type name or path to an XML definition file.
            </summary>
            <param name="geometricConstructionTypeNameOrXmlFilePath">The geometric construction type name or path to an XML definition.</param>
            <example>This is an example of how to createa transient geometric construction assembly occurrence with the geometric construction type name.
            <code>                
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly("SidePlate")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction assembly or geometric construction set container occurrence with the geometric construction type name or path to an XML definition file under the given parent system.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction assembly or geometric construction set container.</param>
            <param name="geometricConstructionTypeNameOrXmlFilePath">The geometric construction type name or path to an XML definition.</param>
            <example>This is an example of how to create a persistent geometric construction assembly occurrence with the geometric construction type name under the given parent system.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem       
            
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly(rootSystem, "RingPlate")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Creates a persistent geometric construction assembly occurrence with the geometric construction type name.
            FOR INTERNAL USE ONLY, will be evaluated for public exposure later once we need it from outside.
            </summary>
            <param name="modelDBConnection">The model DB connection.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid to create geometric construction of type :</para></exception>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionSet)">
            <summary>
            Creates a transient geometric construction set container occurrence with the geometric construction set.
            </summary>
            <param name="geometricConstructionSet">The geometric construction set.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <example>This is an example of how to create a transient geometric construction set container occurrence with the geometric construction set.
            <code>        
            Dim geometricConstructionSet As GeometricConstructionSet 'Substitute this line with the actual geometric construction set instance.
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly(geometricConstructionPart)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionSet)">
            <summary>
            Creates a persistent geometric construction set container occurrence with a geometric construction set under the given parent system.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction set container.</param>
            <param name="geometricConstructionSet">The geometric construction set.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <example>This is an example of how to create a persistent geometric construction set container occurrence with a geometric construction set under the given parent system.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem        
            
            Dim geometricConstructionSet As GeometricConstructionSet 'Substitute this line with the actual geometric construction set instance.
            Dim geometricConstructionAssembly As New GeometricConstructionAssembly(rootSystem, geometricConstructionSet)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetOutputs">
            <summary>
            Gets a union of all the outputs collections of this geometric construction assembly.
            </summary>
            <returns>A union of all the outputs collections of this geometric construction assembly.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting all the outputs of this geometric construction assembly.</exception>
            <example>Example for the method GetOutputs.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.        
            Dim allOutputs As GeometricConstructionCollection = geometricConstructionAssembly.GetOutputs()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetOutputs(System.String)">
            <summary>
            Gets all the outputs of this geometric construction assembly with the given output collection name.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <returns>All the outputs of this geometric construction assembly.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting all the outputs of this geometric construction assembly.</exception>
            <example>Example for the method GetOutputs.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim outputCollectionName As String = "Curve"
            Dim allOutputs As GeometricConstructionCollection = geometricConstructionAssembly.GetOutputs(outputCollectionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetOutput(System.String)">
            <summary>
            Gets the output with the given output collection name.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <returns>The output of this geometric construction assembly.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OutputNotFoundException">Raised if the output collection is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the output of this geometric construction assembly.</exception>
            <example>Example for the method GetOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim outputCollectionName As String = "Curve"
            Dim output As BusinessObject = geometricConstructionAssembly.GetOutput(outputCollectionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetOutput(System.String,System.Object)">
            <summary>
            Gets the output with the given output collection name and key.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <param name="key">The ordinal index (integer or string) in the output collection.</param>
            <returns>The output of this geometric construction assembly.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OutputNotFoundException">Raised if the output collection is not defined in the geometric construction definition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the output of this geometric construction assembly.</exception>
            <example>Example for the method GetOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim outputCollectionName As String = "Curve"
            Dim key As Object = 1
            Dim output As BusinessObject = geometricConstructionAssembly.GetOutput(outputCollectionName, key)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.SetOutput(System.String,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Sets the output with the given output collection name. 
            It will add the new output if it is not available, or update the output if it is already available.
            Normally the geometric construction assembly sets the output during its evaluate method call. The output should not be set outside of the geometric construction assembly.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <param name="output">The new output object to connect.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the output to this geometric construction assembly.</exception>
            <example>Example for the method SetOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim output As BusinessObject 'Substitute this line with the actual output object instance.
            Dim outputCollectionName As String = "Curve"
            geometricConstructionAssembly.SetOutput(outputCollectionName, output)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.SetOutput(System.String,Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Sets the output with the given output collection name and key. 
            It will add the new output if it is not available, or update the output if it is already available.
            Normally the geometric construction assembly sets the output during its evaluate method call. The output should not be set outside of the geometric construction assembly.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <param name="output">The new output object to connect.</param>
            <param name="key">The ordinal index (integer or string) in the output collection.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the output to this geometric construction assembly.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">Raised if the key type is not of type string or integer.</exception>
            <example>Example for the method SetOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim output As BusinessObject 'Substitute this line with the actual output object instance.
            Dim outputCollectionName As String = "Curve"
            Dim key As String = "1"
            geometricConstructionAssembly.SetOutput(outputCollectionName, output, key)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.IsDisabledOutput(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction)">
            <summary>
            Determines whether or not the specified geometric construction is unused output (control flags) of this geometric construction assembly.
            </summary>
            <param name="geometricConstruction">The geometric construction.</param>
            <returns>True if the specified geometric construction is unused output of this geometric construction assembly; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while determining whether or not the geometric construction is unused output.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionAssemblyOutputException">Raised if the geometric construction is not an output of the geometric construction assembly.</exception>
            <example>Example for the method IsDisabledOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim geometricConstruction As GeometricConstruction 'Substitute this line with the actual geometric construction instance.
            Dim isDisabledOutput As Boolean = geometricConstructionAssembly.IsDisabledOutput(geometricConstruction)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.DisableOutput(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction,System.Boolean)">
            <summary>
            Sets the disable control flags for this geometric construction output of geometric construction assembly.
            </summary>
            <param name="geometricConstruction">The geometric construction that is output of this geometric construction assembly.</param>
            <param name="disableFlag">The disable control flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting disable control flags for this geometric construction output.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionAssemblyOutputException">Raised if the geometric construction is not an output of the geometric construction assembly.</exception>
            <example>Example for the method DisableOutput.
            <code>
            Dim geometricConstructionAssembly as GeometricConstructionAssembly 'Substitute this line with the actual geometric construction assembly instance.
            Dim geometricConstruction As GeometricConstruction 'Substitute this line with the actual geometric construction instance.
            geometricConstructionAssembly.DisableOutput(geometricConstruction, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.IsDeclaredAsOutput(System.String)">
            <summary>
            Determines whether the specified output collection name is declared as output in GCDefinition or not.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <returns>True if the specified output collection name is declared as output in GCDefinition; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.IsGCAnOutput(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstruction)">
            <summary>
            Determines whether the specified geometric construction is an output of this GCAssembly or not.
            </summary>
            <param name="geometricConstruction">The geometric construction.</param>
            <returns>True if the specified geometric construction is an output of this GCAssembly; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.CreateGCAssemblyFromPart(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates the GC assembly from part.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="part">The part.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.CreateGCSetContainerFromGCSet(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionSet)">
            <summary>
            Creates the GC set container from GC set.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="geometricConstructionSet">The geometric construction set.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.CreateGCSetContainerFromXMLFile(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates the GC set container from XML file.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="xmlFilePath">The XML file path.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.IsXmlFileNameGiven(System.String)">
            <summary>
            Determines whether [is XML file name given] [the specified XML file path].
            </summary>
            <param name="xmlFilePath">The XML file path.</param>
            <returns>
              <c>true</c> if [is XML file name given] [the specified XML file path]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.CreateGCSetContainer(Ingr.SP3D.Common.Middle.ISystem)">
            <summary>
            Creates the GC set container.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetGraphicOrComputedOutputs(System.String)">
            <summary>
            Gets the graphic or computed outputs.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetGraphicOrComputedOutput(System.String,System.Object)">
            <summary>
            Gets the graphic or computed output.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.SetGraphicOrComputedOutput(System.String,Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Sets the graphic or computed output.
            </summary>
            <param name="outputCollectionName">Name of the output collection.</param>
            <param name="output">The output.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetService(System.String)">
            <summary>
            Get the requested service.
            </summary>
            <param name="progID"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GetRad2dOutputKey(System.Int32)">
            <summary>
            Get the Rad2d key associated to the output.
            </summary>
            <param name="outputID">The ID of the desired output.</param>
            <returns></returns>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.Part">
            <summary>
            Returns a part from the catalog if the geometric construction assembly is placed with a part.
            Returns null if the geometric construction assembly is not placed with the part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.ComponentsVisible">
            <summary>
            Gets or sets a value indicating whether or not to show details. 
            If set to True, all the components will be shown in the Work 
            Space Explorer.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while getting or setting components visible for this geometric construction.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.GeometricConstructionSet">
            <summary>
            Gets a geometric construction set that is used to create this geometric construction set container.
            Returns null if the geometric construction set container is not created with a geometric construction set.  
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.Sketch2dXmlTools">
            <summary>
            Get the COM Sketch2dXmlTools for this GCMacro. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.Sketch2dService">
            <summary>
            Get the COM Sketch2dService for this GCMacro. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly.OutputIDs">
            <summary>
            Get the array of output IDs for this GCMacro. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPart">
            <summary>
            MemberPart class represents the real physical part in the model. A MemberPart is generated by the parent MemberSystem
            or can be created directly through its constructors.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IDetailable">
            <summary>
            Implemented on all kinds of member parts, stiffener parts, and plate parts.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IDetailable.GetFeatures(Ingr.SP3D.Structure.Middle.FeatureType)">
            <summary>
            Gets features based upon the given feature type. 
            Returns an empty collection if features specific to given feature type are not available.
            </summary>
            <param name="featureType">Type of the feature.</param>
            <returns>Read-only collection of features based upon the given feature type.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IDetailable.Features">
            <summary>
            Gets all features. Returns null if features are not available.
            </summary>
            <value>The features.</value>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Creates a stand-alone member part using a Sketch3d axis.
            </summary>
            <param name="parentSystem">Parent system of the member part being created.</param>
            <param name="axis">Axis of the member part.</param>
            <param name="crossSection">Cross definition occurrence that defines the shape of the member part.</param>
            <param name="material">Material of which the member part is made.</param>
            <param name="memberType">Type of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="isMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">Raised if null arguments are used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">Non-linear axis is not supported for the given cross-section type.</exception>
            <example>This is an example of how to create a stand-alone member part using a Sketch3d axis.
            <code>
            'Get the catalog helper.
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'Get a cross section.
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W", "W8x10")
            
            'Get a material.
            Dim material As Material = catalogStructHelper.GetMaterial("Steel - Carbon", "A")
            
            'Create a parent system. This must be instantiated.
            Dim parentSystem As StructuralSystem = Nothing 
            
            'Create axis of the member part. This must be instantiated.
            Dim axis As Sketch3D = Nothing 
            
            'Create a member part using a Sketch3D axis.
            Dim memberPart As New MemberPart(parentSystem, axis, crossSection, material, MemberType.Beam, 8, 0, False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Creates a stand-alone member part using start and end positions.
            </summary>
            <param name="parentSystem">Parent system of the member part being created.</param>
            <param name="startPosition">Start position.</param>
            <param name="endPosition">End position.</param>
            <param name="crossSection">Cross definition occurrence that defines the shape of the member part.</param>
            <param name="material">Material of which the member part is made.</param>
            <param name="memberType">Type category of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="isMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">Raised if null arguments are used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <example>This is an example of how to create a stand-alone member part using start and end positions.
            <code>
            'Get the catalog helper.
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'Get a cross section.
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W", "W8x10")
            
            'Get a material.
            Dim material As Material = catalogStructHelper.GetMaterial("Steel - Carbon", "A")
            
            'Create a parent system. This must be instantiated.
            Dim parentSystem As StructuralSystem = Nothing 
            
            'Create start and end position.
            Dim start As New Position(0, 0, 0)
            Dim end As New Position(10, 10, 0)
            
            'Create a member part using a Sketch3D axis.
            Dim memberPart As New MemberPart(parentSystem, start, end, crossSection, material, MemberType.Beam, 8, 0, False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Creates a stand-alone member part using another stand-alone member part.
            </summary>
            <param name="parentSystem">Parent system of the member part being created.</param>
            <param name="memberPart">Member part to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised if null arguments are used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">Non-linear axis is not supported for the given cross-section type.</exception>
            <example>This is an example of how to create a stand-alone member part using another stand-alone member part.
            <code>
            'Create a parent system. This must be instantiated.
            Dim parentSystem As StructuralSystem = Nothing 
            
            'Create a member part using the copy constructor.
            Dim memberPart As New MemberPart(parentSystem, memberPartToBeCopied)
            </code>
            </example>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetEndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the end points of the member part axis.
            </summary>
            <param name="start">Start position.</param>
            <param name="end">End position.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">
            Cannot perform the desired action on a curved member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Unexpected failure in getting the end points.</exception>
            <example>This is an example of the GetEndPoints method. 
            <code>
            Dim start As Position
            Dim end As Position
            memberPart.GetEndPoints(start, end)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.SetEndPoints(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the end points of the stand-alone member part axis.
            </summary>
            <param name="start">Start position of the member part axis.</param>
            <param name="end">End position of the member part axis.</param>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException">Raised when an action that is not allowed on a nonstand-alone member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">Raised when an action that is not allowed on a curved member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Raised when an error is encountered while trying to set the end points of the member part axis.</exception>
            <example>This is an example of the SetEndPoints method. 
            <code>
            Dim start As New Position(0, 0, 0)
            Dim end As New Position(2, 0, 0)
            'create proper stand-alone member part
            memberPart.SetEndPoints(start, end)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetMatrixAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets a matrix at the given position along the member part.
            </summary>
            <param name="positionAlong">Position of the matrix.</param>
            <returns>Matrix4X4 object.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null imput argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">Raised when an unexpected failure is encountered while getting matrix at position along the profile.</exception>
            <example>This is an example of the GetMatrixAtPosition method.
            <code>
            Dim positionAlong As New Position(0, 5, 0)
            Dim m4X4 As Matrix4X4 = memberPart.GetMatrixAtPosition(positionAlong)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPointAtEnd(Ingr.SP3D.Structure.Middle.MemberAxisPortType)">
            <summary>
            Gets the point at the given end of the member part.
            </summary>
            <param name="axisPortType">Flag that indicates to which end to return the point.</param>
            <returns>Point at the given end of the member part.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the MemberAxisPortType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException">Raised when an unexpected failure occurred while getting the point at MemberPart end.</exception>
            <example>This is an example of the GetPointAtEnd method.
            <code>
            Dim memberPart As MemberPart 'Substitute this line with the actual MemberPart instance.
            Dim pointAtEnd As IPoint = memberPart.GetPointAtEnd(MemberAxisPortType.End)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetAxisPort(Ingr.SP3D.Structure.Middle.MemberAxisPortType)">
            <summary>
            Gets the axis port at the given end of the member part.
            </summary>
            <param name="axisPortType">Flag that indicates to which end to get the port.</param>
            <returns>Port at the given end of the member part.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the MemberAxisPortType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException">Raised when an unexpected error occurred while getting the axis port at the given end of the member part.</exception>
            <example>This is an example of GetAxisPort method.
            <code>
            Dim axisPort As IPort = memberPart.GetAxisPort(MemberAxisPortType.Along)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.AddCutbackSurface(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Common.Middle.ISurface)">
            <summary>
            Adds a cutback surface to the member part at the given end.
            </summary>
            <param name="axisPortType">Flag that indicates to which end to add the cutback surface.</param>
            <param name="surface">Cutback surface to be added.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException">Raised when the surface object is
            not valid to use as a cutback surface of this member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException">Unexpected failure in getting the cutback surface.</exception>
            <example>This is an example of the AddCutbackSurface method.
            <code>
            'Need to create proper surface.
            Dim surface As ISurface 
            memberPart.AddCutbackSurface(MemberAxisEnd.End, surface) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetCutbackSurfaces(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the read-only collection of cutback surfaces on the member part at the given end.
            </summary>
            <param name="axisPortType">Flag that indicates to which end to get the cutback surfaces.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException">Unexpected failure in getting cutback surfaces.</exception>
            <example>This is an example of the GetCutbackSurfaces method.
            <code>
            Dim cutbackSurfaces As ReadOnlyCollection(Of ISurface) = memberPart.GetCutbackSurfaces(MemberAxisEnd.End) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetExtendedLateralSurface(System.Int32,System.Double,System.Double,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the extended lateral surface from a profile part within given start and end positions. Lateral and axial extensions
            are applied on the resulting surface.
            </summary>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="start">The start position. If null, then the start of the surface becomes the start position of the member.</param>
            <param name="end">The end position. If null, then the end of the surface becomes the end position of the member.</param>
            <param name="axialExtension">The axial extension. Must be greater than or equal to 0.</param>
            <param name="lateralExtension">The lateral extension with respect to the section range of the profile.</param>
            <returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException">Error getting the extended lateral surface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException">Raised when the section face type is not found on the profile part.</exception>
            Transient extended surface.
            </returns>         
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetExtendedLateralSurface(System.Int32,System.Double)">
            <summary>
            Gets the extended lateral surface from a profile part from profile start to end. Lateral extension
            is applied on the resulting surface.
            </summary>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="lateralExtension">The lateral extension with respect to the section range of the profile.</param>
            <returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException">Error getting the extended lateral surface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException">Raised when the section face type is not found on the profile part.</exception>
            Transient extended surface.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPortForEndCut(System.Boolean)">
            <summary>
            Gets the port for an end cut.
            </summary>
            <param name="isStart">Boolean to indicate whether this is the start or end of a member part.</param>
            <returns>The port as an IPort object.</returns>
            <example>This is an example of the GetPortForEndCut method. 
            <code>        
            Dim memberPart As MemberPart 'Get member part.
            Dim port As StructPortBase = Nothing
            port = DirectCast(memberPart.GetPortForEndCut(isStart), StructPortBase)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the member part.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure in getting the transform. </exception>
            <example>This is an example of the Transform method.
            <code>
            Dim transformationMatrix As New Matrix4X4()
            Dim vVectot As New Vector(1, 1, 1)
            transformationMatrix.Translate(vVectot)
            Dim memberPart as MemberPart 'Substitute this line with the actual member part instance.
            memberPart.Transform(transformationMatrix)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="uCoordinate">U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate">V-coordinate for the keypoint in the cross section.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">Raised when an unexpected error occurred while getting the key point coordinates.</exception>
            <example>This is an example of the GetKeyPointCoordinates method. 
            <code>
            Dim keyPoint As Integer = 5
            Dim uCoordinate#, vCoordinate#
            Dim memberPart as MemberPart 'Substitute this line with the actual member part instance.
            memberPart.GetKeyPointCoordinates(keyPoint, uCoordinate, vCoordinate) 
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space at the given position along the member part.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="posAlong">Position along the member.</param>
            <param name="uCoordinate">U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate">V-coordinate for the keypoint in the cross section.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">Raised when an unexpected error occurred while getting the key point coordinates.</exception>
            <example>This is an example of GetKeyPointCoordinates method. 
            <code>
            Dim keyPoint As Integer = 5
            Dim posAlong As New Position(5, 0, 0)
            Dim uCoordinate#, vCoordinate#
            Dim memberPart as MemberPart 'Substitute this line with the actual member part instance.
            memberPart.GetKeyPointCoordinates(keyPoint, posAlong, uCoordinate, vCoordinate)        
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal section size, which is the width and depth of the member section.
            </summary>
            <param name="width">Width of the member section. </param>
            <param name="depth">Depth of the member section.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">Raised when an unexpected error occurred while getting the nominal section size.</exception>
            <example>This is an example of GetNominalSectionSize method. 
            <code>     
            Dim width#, depth#
            Dim memberPart as MemberPart 'Substitute this line with the actual member part instance.
            memberPart.GetNominalSectionSize(width, depth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets the nominal section size, which is the width and depth of the member section at desired position along the member part.
            </summary>
            <param name="posAlong">Position along the member.</param>
            <param name="width">Width of the profile section.</param>
            <param name="depth">Depth of the profile section.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">Raised when an unexpected error occurred while getting the nominal section size.</exception>
            <example>This is an example of the GetNominalSectionSize method. 
            <code>
            Dim posAlong As New Position(5, 0, 0)
            Dim width#, depth#
            Dim memberPart as MemberPart 'Substitute this line with the actual member part instance.
            memberPart.GetNominalSectionSize(posAlong, width, depth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type (i.e., End) at a given geometry stage (i.e., Current).
            </summary>
            <param name="portType">Enumerator for port geometry type.</param>
            <param name="geometryStage">Enumerator for geometry stage.</param>
            <returns>TopologyPort ReadOnlyCollection of objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim ports As ReadOnlyCollection(Of TopologyPort) = memberPart.GetPorts(TopologyGeometryType.Face, GeometryStage.Current) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type (i.e., End) with a given operation (i.e., Split); 
            and either before or after the operation.
            </summary>
            <param name="portType">Enumerator for port geometry type.</param>
            <param name="geometryOperationType">Enumerator for geometry operation.</param>
            <param name="graphPosition">Enumerator for graph position.</param>
            <returns>TopologyPort ReadOnlyCollection of objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim ports As ReadOnlyCollection(Of TopologyPort) = memberPart.GetPorts(TopologyGeometryType.Face, GeometryOperationTypes.Cutout, GraphPosition.After) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face) at a given geometry stage (i.e., Current).
            </summary>
            <param name="portType">Enumerator for port geometry type.</param>
            <param name="contextId">Enumerator for topology context.</param>
            <param name="geometryStage">Enumerator for geometry stage.</param>
            <returns>TopologyPort ReadOnlyCollection of objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim ports As ReadOnlyCollection(Of TopologyPort) = memberPart.GetPorts(TopologyGeometryType.Face, ContextTypes.Base, GeometryStage.Current)                
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face),
            with a given operation (i.e., Split), and either before or after the operation.
            </summary>
            <param name="portType">Enumerator for port geometry type.</param>
            <param name="contextId">Enumerator for topology context.</param>
            <param name="geometryOperationType">Enumerator for geometry operation.</param>
            <param name="graphPosition">Enumerator for graph position.</param>
            <returns>TopologyPort ReadOnlyCollection of objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim ports As ReadOnlyCollection(Of TopologyPort) = memberPart.GetPorts(TopologyGeometryType.Face, ContextTypes.Base, GeometryOperationTypes.Cutout, GraphPosition.After)                
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry to be created by a later operation. The port is needed to complete a connection.
            Typical use is for creating a physical connection with port geometry to be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="contextId">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to create a port with the given moniker data in case a port is not found.</param>
            <returns>Structure port created by the given moniker data.</returns>
            <example>GetPort method example code.
            <code>
            Dim port As TopologyPort = memberPart.GetPort(TopologyGeometryType.Face, 0, 0, ContextTypes.Base, CInt(SectionFaceType.Bottom_Flange_Left), True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the subport. Also, type of the section face.</param>
            <param name="geometryStage">Geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data in case the port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception>    
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meet the given criteria.</exception>
            <example>This is an example for using the GetPort method.
            <code>
            'Create a member system.
            Dim memberSystem As MemberSystem
            'Get the member part from the member system.
            Dim memberPart As MemberPart
            Dim facePort As TopologyPort = memberPart.GetPort(TopologyGeometryType.Face, -1, ContextTypes.Lateral, CInt(SectionFaceType.Bottom), GeometryStage.Current, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port; i.e., a port without current geometry.
            Typical use is to get face/edge late binding ports after the end cut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case the port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <example>GetPort method example code.
            <code lang="cs">
            // Create a member system and place features on it (webcut, flangecut etc.,).
            MemberSystem memberSystem;
            
            // Get the member part from the member system.
            MemberPart memberPart = memberSystem.GetPart(MemberAxisEnd.Start);
            //Get webcut feature from memberpart.
            Feature webcut = memberPart.GetFeatures(FeatureType.WebCut)[0];
            TopologyPort port = memberPart.GetPort(webcut, 257, false);
            </code>
            <code lang="vb">
            'Create a member system and place features on it (webcut, flangecut etc.,).
            Dim memberSystem As MemberSystem
             
            'Get the member part from the member system.
            Dim memberPart As MemberPart
            'Get webcut feature from memberpart.
            Dim webcut As Feature = memberPart.GetFeatures(FeatureType.WebCut)[0]
            Dim port As TopologyPort = memberPart.GetPort((webcut, 257, False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">Raised if context type is not base or offset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            'Create a member system.
            Dim memberSystem As MemberSystem
            
            'Get the member part from the member system.
            Dim memberPart As MemberPart
            Dim baseOrOffsetPort As TopologyPort = memberPart.GetPort(TopologyGeometryType.Face, ContextTypes.Base)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception>         
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            'Create a member system.
            Dim memberSystem As MemberSystem
            
            'Get the member part from the member system.
            Dim memberPart As MemberPart
            Dim port As TopologyPort = memberPart.GetPort(TopologyGeometryType.Face, ContextTypes.Base, CInt(SectionFaceType.Top_Flange_Left))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">Operator Id for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport. Also, type of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity in the given conditions.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception> 
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is a failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is failure to retrieve the PortType.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure occurred while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
            <example>GetPort method example code.
            <code lang="cs">
            MemberSystem memberSystem; //Substitute this line with the actual member system instance.
            
            // Get the member part from the member system.
            MemberPart memberPart = memberSystem.GetPart(MemberAxisEnd.Start);
            TopologyPort port = memberPart.GetPort(TopologyGeometryType.Face, 257, GeometryOperationTypes.Cutout, ContextTypes.Base, GraphPosition.After, CInt(SectionFaceType.Top_Flange_Left), false);
            </code>
            <code lang="vb">
            Dim memberSystem As MemberSystem 'Substitute this line with the actual member system instance.
             
            'Get the member part from the member system.
            Dim memberPart As MemberPart = memberSystem.GetPart(MemberAxisEnd.Start)
            Dim port As TopologyPort = memberPart.GetPort(TopologyGeometryType.Face,257,GeometryOperationTypes.Cutout, ContextTypes.Base,GraphPosition.After CInt(SectionFaceType.Top_Flange_Left),False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetFeatures(Ingr.SP3D.Structure.Middle.FeatureType)">
            <summary>
            Gets features based upon the given feature type.
            Returns an empty collection if no features specific to the given feature type are available.
            </summary>
            <param name="featureType">Type of the feature.</param>
            <returns>
            Read-only collection of features based upon the given feature type.
            </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException">Unexpected error occurred while getting the features on a member part.</exception>
            <example>
            <code>
            'Get the corner features present on the Member part.
            Dim features As ReadOnlyCollection(Of Feature) = memberPart.GetFeatures(FeatureType.Corner)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetFeatures(Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Gets all the features present on the member part.
            </summary>
            <param name="memberPart">The member part on which the fearures are required.</param>
            <returns>Collection of features. Empty collection is returned if no features are present.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPartsAtPort(Ingr.SP3D.SPSMembers.ISPSSplitAxisPort,Ingr.SP3D.SPSMembers.PortType,System.Collections.Generic.List{Ingr.SP3D.Common.Middle.BusinessObject}@)">
            <summary>
            Private utility method to get the parts at a port.
            </summary>
            <param name="splitAxisPort">Port on the member part that is being examined for connected parts.</param>
            <param name="portType">Selection from PortType enumerator that indicates the type of port.</param>
            <param name="oPartsList">List of connected parts.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Curved">
            <summary>
            Gets the read-only property concerned with whether the member part is curved or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">Unexpected failure in getting the member part. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StandAlone">
            <summary>
            Gets whether the member part is a child of a member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StandAloneException">Unexpected failure in getting member part. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.DesignedMember">
            <summary>
            Checks whether the MemberPart is designed MemberPart or not.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Prismatic">
            <summary>
            Checks whether the MemberPart is prismatic MemberPart or not.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Axis">
            <summary>
            Gets the axis of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AxisException">Raised when an unexpected failure occurs while getting the Axis property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CardinalPoint">
            <summary>
            Gets or sets the cardinal point of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CardinalPointException">Unexpected failure in getting the cardinal point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CutLength">
            <summary>
            Gets the cut length of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CutLengthException">Unexpected failure in getting the cut length.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.MemberSystem">
            <summary>
            Gets the member system parent of the system-generated member part.
            </summary>
            <returns>Member system, for the system generated member part; otherwise null.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException">Raised when unable to get the member system parent of a member part.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.ConnectedParts">
            <summary>
            Gets the read-only collection of parts connected to the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException">Unexpected failure in getting the connected parts.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.OrientationVector">
            <summary>
            Gets or sets the orientation vector on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">Raised when an error is encountered while trying to get or set the orientation vector property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.BetaAngle">
            <summary>
            Gets or sets the beta angle on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">Raised when an error is encountered while trying to get or set the beta angle property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Mirror">
            <summary>
            Gets or sets the reflect flag on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MirrorException">Raised when an error is encountered while trying to get or set the mirror property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Loads">
            <summary>
            Gets the analysis loads on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LoadsException">Unexpected failure in getting the loads.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Openings">
            <summary>
            Gets the openings on this member part.
            Returns an empty collection if there are no openings on this member part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartXDisplacement">
            <summary>
            Gets or sets the X displacement at the start of the member part.
            </summary>
            <value>The start X displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException">Raised when unable to get the start X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException">Raised when unable to set the start X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartYDisplacement">
            <summary>
            Gets or sets the Y displacement at the start of the member part.
            </summary>
            <value>The start Y displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException">Raised when unable to get the start Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException">Raised when unable to set the start Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartZDisplacement">
            <summary>
            Gets or sets the Z displacement at the start of the member part.
            </summary>
            <value>The start Z displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException">Raised when unable to get the start Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException">Raised when unable to set the start Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartXRotation">
            <summary>
            Gets or sets the X rotation at the start of the member part.
            </summary>
            <value>The start X rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException">Raised when unable to get the start X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException">Raised when unable to set the start X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartYRotation">
            <summary>
            Gets or sets the Y rotation at the start of the member part.
            </summary>
            <value>The start Y rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException">Raised when unable to get the start Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException">Raised when unable to set the start Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartZRotation">
            <summary>
            Gets or sets the Z rotation at the start of the member part.
            </summary>
            <value>The start Z rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException">Raised when unable to get the start Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException">Raised when unable to set the start Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndXDisplacement">
            <summary>
            Gets or sets the X displacement at the end of the member part.
            </summary>
            <value>The end X displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException">Raised when unable to get the end X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException">Raised when unable to set the end X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndYDisplacement">
            <summary>
            Gets or sets the Y displacement at the end of the member part.
            </summary>
            <value>The end Y displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException">Raised when unable to get the end Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException">Raised when unable to set the end Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndZDisplacement">
            <summary>
            Gets or sets the Z displacement at the end of the member part.
            </summary>
            <value>The end Z displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException">Raised when unable to get the end Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException">Raised when unable to set the end Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndXRotation">
            <summary>
            Gets or sets the X rotation at the end of the member part.
            </summary>
            <value>The end X rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException">Raised when unable to get the end X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException">Raised when unable to set the end X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndYRotation">
            <summary>
            Gets or sets the Y rotation at the end of the member part.
            </summary>
            <value>The end Y rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException">Raised when unable to get the end Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException">Raised when unable to set the end Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndZRotation">
            <summary>
            Gets or sets the Z rotation at the end of the member part.
            </summary>
            <value>The end Z rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException">Raised when unable to get the end Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException">Raised when unable to set the end Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for a member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartMemberRelease">
            <summary>
            Gets or sets the member release at the start of the member part.
            </summary>
            <value>The start member release.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException">Raised when unable to get the start member release on the member part.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndMemberRelease">
            <summary>
            Gets or sets the member release at the end of the member part.
            </summary>
            <value>The end member release.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException">Raised when unable to get the end member release on the member part.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.TypeCategory">
            <summary>
            Gets or sets the type category of the member part.
            Setting the type category automatically sets the default type value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">Unexpected failure in getting the type category. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Type">
            <summary>
            Gets or sets the type of the member part.
            Setting the type automatically sets the parent type category value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeException">Unexpected failure in getting the type. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Priority">
            <summary>
            Gets or sets the priority of the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">
            The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PriorityException">Unexpected failure in getting the priority. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CrossSection">
            <summary>
            Gets or sets the cross section catalog part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException">Raised when an unexpected error occurred while setting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCrossSectionException">Raised if built-up CrossSection is given for prismatic MemberPart.
                                                     <para>Raised if rolled CrossSection is given for designed MemberPart.</para></exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Material">
            <summary>
             Gets or sets the material part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Unexpected failure occurred. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.WBSItemParents">
            <summary>
            WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.WBSProjects">
            <summary>
            WBSProjects for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Features">
            <summary>
            Gets all features. Returns an empty collection if features are not available.
            </summary>
            <value>The features.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException">Unexpected error occurred while getting the features on a member part.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StructConnectableHelperInstance">
            <summary>
            Gets the struct connectable helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.WBSItemChildHelperObj">
            <summary>
            Gets the WBS item child helper obj.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Releases">
            <summary>
            Gets the analysis releases on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ReleasesException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.MemberReleases">
            <summary>
            Gets the member releases for this member part.
            </summary>
            <value>The member releases COM interface.</value>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter">
            <summary>
            Shared parameter is a geometric construction that provides a parameter value for other geometric constructions.
            No geometry is persisted. It consists only of a parameter value.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction shared parameter occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type SharedParameter.</para></exception>
            <example>This is an example of how to create a transient geometric construction shared parameter occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "ParamBoolean"
            
            Dim booleanSharedParameter As New SharedParameter(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction shared parameter occurrence under the given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction shared parameter.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type SharedParameter.</para></exception>
            <example>This is an example of how to create a persistent geometric construction shared parameter occurrence under the given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "ParamDouble"
            
            Dim doubleSharedParameter As New SharedParameter(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter.SetGraphicDisplay(System.String,Ingr.SP3D.Common.Middle.Position,System.Boolean)">
            <summary>
            Sets the graphic display properties of the shared parameter.
            </summary>
            <param name="text">The text.</param>
            <param name="origin">The origin.</param>
            <param name="displayAnchorSphere">If set to True, this displays the anchor sphere.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the graphic display properties of the shared parameter.</exception>
            <example>Example for the method SetGraphicDisplay.
            <code>
            Dim sharedParameter as SharedParameter 'Substitute this line with the actual shared parameter instance.
            sharedParameter.SetGraphicDisplay("Graphic Display of SharedParameter", New Position(0.0, 1.0, 1.0), True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.SharedParameter.Displayable(System.Boolean)">
            <summary>
            Sets a value indicating whether or not this shared parameter is displayable in the graphic view.
            </summary>
            <param name="isEnable">If set to True, the shared parameter is displayable in the graphic view.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the displayable property of the shared parameter.</exception>
            <example>Example for the method Displayable.
            <code>
            Dim sharedParameter as SharedParameter 'Substitute this line with the actual shared parameter instance.
            sharedParameter.Displayable(True)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d">
            <summary>
            Provides generalization of all entities supporting geometric construction point-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Point3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Point3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction Point3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "PointFromCS"
            
            Dim point3d As New Point3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Point3d occurrence under the given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction Point3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Point3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction Point3d occurrence under the given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "PointByCurves"
            
            Dim point3d As New Point3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.DistanceFromPoint(Ingr.SP3D.Common.Middle.IPoint)">
            <summary>
            Gets the distance from this geometric construction Point3d to another point.
            </summary>
            <param name="point">Point up to which to measure the distance.</param>
            <returns>Distance from this geometric construction Point3d to another point.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <example>Example code for DistanceFromPoint.
            <code>
            Dim geometricConstructionPoint3d as Point3d 'Substitute this line with the actual geometric construction point instance.
            Dim point as IPoint 'Substitute this line with the actual point instance.
            Dim distanceFromPoint As Double = geometricConstructionPoint3d.DistanceFromPoint(point)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.EqualPositions(Ingr.SP3D.Common.Middle.IPoint)">
            <summary>
            Checks whether this geometric construction Point3d and another point are at the same position. 
            </summary>
            <param name="point">Point at which to check the position.</param>
            <returns>True if this geometric construction Point3d and another point are at same position; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <example>Example code for EqualPositions.
            <code>
            Dim geometricConstructionPoint3d as Point3d 'Substitute this line with the actual geometric construction point instance.
            Dim point as IPoint 'Substitute this line with the actual point instance.
            Dim isEqualPositions As Boolean = geometricConstructionPoint3d.EqualPositions(point)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.Position">
            <summary>
            Gets or sets the position of this geometric construction Point3d.
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the position.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.X">
            <summary>
            Gets or sets the X-position of this geometric construction Point3d.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.Y">
            <summary>
            Gets or sets the Y-position of this geometric construction Point3d.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Point3d.Z">
            <summary>
            Gets or sets the Z-position of this geometric construction Point3d.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput">
            <summary>    
            ComputedInput class is used to declare computed input field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the ComputedInputAttribute.
            A computed input is evaluated internally during the Evaluate method. It is not selected by the user and does not show up on the GeometricConstruction ribbon bar.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput.#ctor(System.String,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput"/> class.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="occurrence">The geometric construction occurrence for which this computed input is defined.</param>
            <param name="notificationInterfaceNames">The notification interface names.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput.CollectionName">
            <summary>
            Gets the computed input collection name.
            It will be unique for each computed input defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput.NotificationInterfaceNames">
            <summary>
            Gets the compute notification interface names for this computed input.
            Returns null if there are no compute notification interface names defined for this computed input.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput.Values">
            <summary>
            Gets the computed input values.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedInput.Occurrence">
            <summary>
            Gets or sets the geometric construction occurrence for which this computed input is defined.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CurveType">
            <summary>
            New enumerator for the curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Line">
            <summary>
            Line curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Arc">
            <summary>
            Arc curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Ellipse">
            <summary>
            Ellipse curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.BSpline">
            <summary>
            BSpline curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Circle">
            <summary>
            Circle curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.EllipticalArc">
            <summary>
            EllipticalArc curve type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurve">
            <summary>
            TopologyCurve class which implements ICurve. Its CurveType property helps in explicit cast.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurve.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurve.op_Explicit(Ingr.SP3D.Structure.Middle.TopologyCurve)~Ingr.SP3D.Structure.Middle.TopologyCurveLine">
            <summary>
            Explicit cast operator to be able to cast TopologyCurve to TopologyCurveLine.
            </summary>
            <param name="topologyCurve">TopologyCurve object.</param>
            <returns>Instance of TopologyCurveLine.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurve.Type">
            <summary>
            Gets the topology curve type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurve.Range">
            <summary>
            Gets the range box representing the range of this topology curve.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurveLine">
            <summary>
            TopologyCurveLine class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveLine.#ctor(Ingr.SP3D.Structure.Middle.TopologyCurve)">
            <summary>
            TopologyCurveLine constructor.
            </summary>
            <param name="oTopologyCurve">TopologyCurve object.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.Infinite">
            <summary>
            Gets or sets whether this line is infinite.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InfiniteException">Unexpected failure while getting or setting the Infinite property on the Line object.</exception>        
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StartPointException">Unexpected failure while getting or setting the start point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.EndPoint">
            <summary>
            Gets or sets the end point of the line.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.EndPointException">Unexpected failure while getting or setting the end point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.RootPoint">
            <summary>
            Gets or sets the root point of the line.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RootPointException">Unexpected failure while getting or setting the root point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.Direction">
            <summary>
            Gets or sets the direction vector.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DirectionException">Unexpected failure while getting or setting the direction vector.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Feature">
            <summary>
            The Feature object is used to remove or add material from a profile part or plate part geometry. 
            A feature can be a stand-alone feature, which is directly placed by the user, such as an edge feature, 
            corner feature, web corner cope, surface trim, etc. Also a feature can be created by an assembly connection rule, 
            such as a web cut, flange cut, slot, chamfer, etc.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,System.String)">
            <summary>
            Creates a slot feature using a penetrated part and penetrating part.
            </summary>
            <param name="parentSystem">The parent system under which to create the slot feature.</param>
            <param name="penetratedPart">The penetrated part that can be a detailed plate part base or stiffener part base.</param>
            <param name="penetratingPart">The penetrating part that can be a detailed plate part base or stiffener part base.</param>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the parent system is not in working status.</exception>       
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the parent system object.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPartTypeException">Raised if the penetrated part is other than plate part base or stiffener part base.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingPartTypeException">Raised if the penetrating part is other than plate part base or stiffener part base.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException">Raised if the penetrated part or penetrating part is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when an intersection does not exist between the penetrated part and penetrating part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised if a valid part is not found under the given root selection.</exception>
            <example>This is an example of how to create a slot feature using penetrated part and penetrating part.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            Dim penetratedPart As BusinessObject 'Substitute this line with the actual detailed plate part base or stiffener part base instance.
            Dim penetratingPart As BusinessObject 'Substitute this line with the actual detailed plate part base or stiffener part base instance which is geometrically intersected with the penetrated part.
            
            Dim slotFeature As New Feature(parentSystem, penetratedPart, penetratingPart, "RootSlot")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.FeatureType,System.String)">
            <summary>
            Creates an edge feature/water stop at the intersection point between the intersecting port and the given edge port.<para>It can be used to 
            create a chamfer/web cut between the bounded and bounding port.</para> <para>Also it can be used to create a trim/general cut-out feature using 
            a bounded port from the member part and surface port from a bounding object depending upon the given feature type.</para>
            </summary>
            <param name="parentSystem">The parent system under which to create the chamfer/web cut, edge feature/water stop, or trim/general cut-out.</param>
            <param name="boundedOrEdgePort">The bounded port to create chamfer/web cut; the detailed part edge port in which to create the edge feature/water stop; the member part axis port in which to create the trim/general cut-out.</param>
            <param name="boundingOrIntersectingPort">The bounding object, which can be a plane, point, or face port in which to create the chamfer/web cut; the intersecting surface lateral port in which to create the edge feature/water stop; the bounding object surface in which to create the trim/general cut-out.</param>
            <param name="featureType">Enumerated values for the feature type. WebCut/Chamfer, Edge/WaterStop, or Trim/GeneralCutOut are valid input.</param>
            <param name="rootSelector">The root selection string from which begins the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when the argument is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when the feature is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when the port type is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when the feature type is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when the port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when the port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when the port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when the feature is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException">Raised when an invalid port context type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException">Raised when an unexpected error occurred while finding the operator for operation in the graph.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SameConnectableException">Raised when the two port connectables are the same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException">Raised when an unexpected error occurred while finding the closest points between two bodies.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException">Raised when the intersecting port is not intersecting with the edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException">Raised when an unexpected error occurred while getting the closest point on the wire.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException">Raised when an unexpected error occurred while getting the normal from the position.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when a bounded port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when a bounding port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException">Raised when an unexpected error occurred while creating the web cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException">Raised when the penetrating object is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException">Raised when the bounded and bounding ports are not connected.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateChamferException">Raised when an unexpected error occurred while creating the chamfer feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException">Raised when an unexpected error occurred while creating the trim feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using a ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException">Raised when an unexpected error occurred while creating the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException">Raised when an unexpected error occurred while setting the references collection argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting the item from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException">Raised when an unexpected error occurred while removing the references collection from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException">Raised when an unexpected error occurred while adding the references collection to the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException">Raised when an unexpected error occurred while adding new relation with the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting the relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">Raised when an unexpected error occurred while removing all arguments from the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException">Raised when an unexpected error occurred while setting the root section on the occurrence.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException">Raised when an unexpected error occurred while getting valid objects from the feature input helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Raised when an unexpected error occurred while setting parent objects on the feature.</exception>
            <exception cref="T:System.InvalidOperationException">Raised when the feature does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidObjectTypeException">Raised when the object is not a name rule object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNoAccessException">Raised when the user does not have access to read or modify the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException">Raised when an invalid molded form name rule is used.</exception>
            <example>This is an example of a feature constructor to create an edge feature/water stop on the given edge port and intersection point between the intersecting port and the given edge port.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the free detailed edge port from plate part/stiffener part.
            Dim edgePort As TopologyPort = detailedDeckPlatePart.GetPort(TopologyGeometryType.Edge, -1, 1, ContextTypes.Base, -1)
            
            'Get the intersecting face lateral port from a detailed plate part.
            Dim intersectingPort As TopologyPort = detailedIntersectingTBH.GetPort(TopologyGeometryType.Face, -1, 1, ContextTypes.Lateral, -1)
            
            Dim edgeFeature As New Feature(parentSystem, edgePort, intersectingPort, FeatureType.Edge, "CutEdge")
            
            'Now we will create a chamfer or web cut on the given bounded and bounding port.
            
            'Get the port from profile part.
            Dim boundedPort As IPort = Nothing
            
            'Get the bounding object (can be a plane or point or face port).
            Dim boundingPort As BusinessObject = Nothing
            
            Dim webCutFeature As New Feature(parentSystem, boundedPort, boundingPort, FeatureType.WebCut, "WebCuts") 
            
            'Now we will create a trim or general cut-out feature using bounded port from member part and surface port from bounding object.
            
            'Get the penetrated object as member part axis port.
            Dim boundedPortFromMemberPart As MemberPartAxisPort = Nothing
            
            'Get the bounding object as surface port from wall, up to which the bounded port will be trimmed.
            Dim surfacePortFromBoundingObject As BusinessObject = Nothing
            
            Dim trimFeature As New Feature(parentSystem, boundedPortFromMemberPart, surfacePortFromBoundingObject, "SurfaceTrim_1")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.String)">
            <summary>
            Creates a chamfer feature on the end cut created on a stiffener part or edge reinforcement part. A portion of the end cut identified by the edge ID is chamfered.
            </summary>
            <param name="parentSystem">Parent system under which to place the feature.</param>
            <param name="endCut">Web cut or flange cut feature in which to create the chamfer.</param>
            <param name="edgeIdToChamfer">The section ID of the end cut to be chamfered. </param>
            <param name="rootSelectorOrPart">The chamfer feature’s root selector or catalog part name.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under the given root selection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateChamferException">Raised when an unexpected error occurred while creating chamfer feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException">Raised if the bounded port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature connectable is a member since chamfer on end cut is not supported for a member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException">Raised if the chamfer on an end cut is placed on the profile whose cross section is other than "FB" cross section.</exception>
            <example>This is an example of a feature constructor to create a chamfer feature on an existing end cut.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Create an end cut(Web cut or flange cut).
            Dim webCut As Feature = Nothing
            
            Dim edgeIdToChamfer As Integer = 8193
            Dim rootSelectorOrPart As String = "ManualSingleSidedBase"
            
            Dim flangeCutFeature As New Feature(parentSystem, webCut, edgeIdToChamfer, rootSelectorOrPart)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.Feature,System.String)">
            <summary>
            Creates a flange cut feature using a bounded port, bounding object, and a web cut feature.
            </summary>
            <param name="parentSystem">The parent system under which to create the flange cut feature.</param>
            <param name="boundedPort">The bounded port from the profile.</param>
            <param name="boundingObject">The bounding object.</param>
            <param name="webCut">The web cut that will be used as a bounding object.</param>
            <param name="rootSelector">The root selection string from which to begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when a bounded port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when a bounding port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when the connectable object for the web cut and flange cut is not same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException">Raised when an unexpected error occurred while creating the flange cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a flange cut feature using bounded port, bounding object, and a web cut feature.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the bounded port as detailed profile part.
            Dim boundedPort As IPort = Nothing
            
            'Get the bounding object.
            Dim boundingObject As BusinessObject = Nothing
            
            'Get the web cut feature.
            Dim webCut As Feature = Nothing
            
            Dim flangeCutFeature As New Feature(parentSystem, boundedPort, boundingObject, webCut, "FlangeCuts")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.EndCutType,System.String)">
            <summary>
            Creates a flange cut feature using a bounded port, bounding object, end cut type, and a web cut feature.
            </summary>
            <param name="parentSystem">The parent system under which to create the flange cut feature.</param>
            <param name="boundedPort">The bounded port from the profile.</param>
            <param name="boundingObject">The bounding object.</param>
            <param name="webCut">The web cut that will be used as a bounding object.</param>
            <param name="endCutType">The end cut type.</param>
            <param name="rootSelector">The root selection string from which to begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when a bounded port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when a bounding port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEndCutTypeException">Raised when end cut type is not either FlangeCutBottom or FlangeCutTop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when the connectable object for the web cut and flange cut is not same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException">Raised when an unexpected error occurred while creating the flange cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a flange cut feature using bounded port, bounding object, and a web cut feature.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the bounded port as detailed profile part.
            Dim boundedPort As IPort = Nothing
            
            'Get the bounding object.
            Dim boundingObject As BusinessObject = Nothing
            
            'Get the web cut feature.
            Dim webCut As Feature = Nothing
            
            'By default for stiffeners the flangecut is FlangeCutTop
            Dim flangeCutFeature As New Feature(parentSystem, boundedPort, boundingObject, webCut, EndCutType.FlangeCutTop, "FlangeCuts")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,System.String)">
            <summary>
            Creates a corner feature on member parts and on detailed stiffener parts, edge-reinforcement parts, and plate parts by three face ports.
            </summary>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U-direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V-direction.</param>
            <param name="rootSelector">The root selection string from which to begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raises if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid to create a corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a corner feature on member parts, stiffener parts, and plate parts.
            <code>
            'Get the face port from a detailed stiffener part.
            Dim facePort As TopologyPort = Nothing
            
            'Get the first connected port from a detailed stiffener part.
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            
            'Get the second connected port from a detailed stiffener part.
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            Dim cornerFeature As New Feature(facePort, adjacentFacePortAlongU, adjacentFacePortAlongV, "RootCorner")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Structure.Middle.IDetailable,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Int32,System.String)">
            <summary>
            Constructor to place a corner feature on detailed parts.
            Currently this constructor supports placement of a corner feature only on the collar parts. The section IDs are used to get
            the corresponding late ports required to locate the corner.
            </summary>
            <param name="detailedPart">The detailed part on which to create the corner feature.</param>
            <param name="faceContextTypes">The context ID of the face port of the detailed part. This should be of either base or offset ContextType.</param>
            <param name="sectionIdAlongU">The section ID of the port along U-direction.</param>
            <param name="sectionIdAlongV">The section ID of the port along V-direction.</param>
            <param name="rootSelector">The feature catalog part name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the parent system object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when a physical connection is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised if a valid part is not found under the given root selection.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the late ports of the collar part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException">Raised if the detailed part is other than the collar part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised if the part is not valid or if the selection rule did not return any valid selections when executing the selection rule
            with the given root selector.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException">Raised when the faceContextType, sectionIdAlongU, or sectionIdAlongV is not valid.</exception>
            <example>This is an example of a feature constructor to create a corner feature on collar part.
              <code>
            'Place a Stiffener or ER part penetrating through plate, stiffener, or ER part.
            'Split the penetrated part with penetrating part and detail both of them to get the collar part.
            'Get the collar part.
            Dim collarPart As CollarPart = Nothing
            'Get the face port the face port of the detailed part.
            Dim faceContextTypes As ContextTypes = ContextTypes.Base
            'Get the section ID of the port along U-direction.
            Dim sectionIdAlongU As int = 513
            'Get the section ID of the port along V-direction to locate the collar corner.
            Dim sectionIdAlongV As int = 258
            Dim cornerFeature As New Feature(collarPart, faceContextTypes, sectionIdAlongU, sectionIdAlongV, "RootCorner")
              </code>
              </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32,System.String)">
            <summary>
            Creates a corner feature on a corner formed by a slot feature where it intersects with the original edge of the part.
            The face port defines the sketching plane.
            The other port and a segment of the slot are used to define the curves in the sketching plane that are used to refine the shape.
            The order of these inputs are important in an ambiguous case; i.e., there are two different corners formed by the same inputs.
            </summary>
            <param name="slot">The slot feature.</param>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U-direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V-direction.</param>
            <param name="rootSelector">The root selection string from which will begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raises if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid to create a corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a corner feature on member parts, stiffener parts, and plate parts.
            <code>
            'Place a Stiffener or ER part penetrating through plate, stiffener, or ER part.
            'Split the penetrated part with penetrating part and detail both of them to get the slot.
            
            'Get the slot feature.
            Dim slot As Feature = Nothing
            
            'Get the face port from a detailed stiffener part.
            Dim facePort As TopologyPort = Nothing
            
            'Get the connected port from a detailed stiffener part.
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            
            'Specify the edgeID to locate the slot corner.
            Dim edgeIDAlongV Integer = CInt(SectionFaceType.Web_Left)
            
            Dim cornerFeature As New Feature(slot, facePort, adjacentFacePortAlongU, edgeIDAlongV, "RootCorner")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32,Ingr.SP3D.Structure.Middle.TopologyPort,System.String)">
            <summary>
            Creates a corner feature on a corner formed by a slot feature where it intersects with the original edge of the part.
            The face port defines the sketching plane.
            The segment of the feature and another port are used to define the curves in the sketching plane that are used to refine the shape.
            The order of these inputs are important in an ambiguous case; i.e., there are two different corners formed by the same inputs.
            </summary>
            <param name="slot">The slot feature.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U-direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V-direction.</param>
            <param name="rootSelector">The root selection string from which will begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raises if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid to create a corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a corner feature on member parts, stiffener parts, and plate parts.
            <code>
            'Place a Stiffener or ER part penetrating through plate, stiffener, or ER part.
            'Split the penetrated part with penetrating part and detail both of them to get the slot.
            
            'Get the slot feature.
            Dim slot As Feature = Nothing
            
            'Get the face port from a detailed stiffener part.
            Dim facePort As TopologyPort = Nothing
            
            'Specify the edgeID to locate the slot corner
            Dim edgeIDAlongU Integer = CInt(SectionFaceType.Web_Left)
            
            'Get the connected port from a detailed stiffener part.
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            Dim cornerFeature As New Feature(slot, facePort, edgeIDAlongU, adjacentFacePortAlongV, "RootCorner")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a corner feature between two edges of a slot feature.
            The face port defines the sketching plane.
            The two segments of the slot feature are used to define the curves in the sketching plane that are used to refine the shape.
            </summary>
            <param name="slot">The slot feature.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U-direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V-direction.</param>
            <param name="rootSelector">The root selection string from which will begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raises if the arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid to create a corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create a corner feature on member parts, stiffener parts, and plate parts.
            <code>
            'Place a Stiffener or ER part penetrating through plate, stiffener, or ER part.
            'Split the penetrated part with penetrating part and detail both of them to get the slot.
            
            'Get the slot feature.
            Dim slot As Feature = Nothing
            
            'Get the face port from a detailed stiffener part.
            Dim facePort As TopologyPort = Nothing
            
            'Specify the edgeID to locate the slot corner
            Dim edgeIDAlongU Integer = CInt(SectionFaceType.Web_Left)
            
            'Specify the edgeID to locate the slot corner
            Dim edgeIDAlongV Integer = CInt(SectionFaceType.Top)
            
            Dim cornerFeature As New Feature(slot, facePort, edgeIDAlongU, edgeIDAlongV, "RootCorner")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,System.String)">
            <summary>
            Creates a corner feature on member parts, stiffener parts, edge-reinforcement parts, and plate parts by position and direction.
            </summary>
            <param name="parentPart">The parent part.</param>
            <param name="cornerPosition">The corner position.</param>
            <param name="boreLineDirection">The bore line direction.</param>
            <param name="rootSelector">The root selection string from which to begin the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid to create a corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating a corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting a molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>                
            <example>This is an example of a feature constructor to create a corner feature on member parts, stiffener parts, and plate parts.
            <code>
            'Get the parent part as detailed plate part.
            Dim parentPart As BusinessObject = Nothing
            
            'Get the bounded port as detailed plate part.
            Dim cornerPosition As New Position(64.97, 15.0, 15.03)
            
            'Get the bore line direction.
            Dim boreLineDir As New Vector(0, 1, 0)
             
            Dim cornerFeature As New Feature(parentPart, cornerPosition, boreLineDir, "RootCorner")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.FeatureType,System.String)">
            <summary>
            Creates an edge feature or water stop on the given edge port and position on that edge port.
            </summary>
            <param name="parentSystem">The parent system under which to create the edge feature or water stop.</param>
            <param name="edgePort">The detailed part edge port in which to create the edge feature or water stop.</param>
            <param name="inputLocation">The input location on the detailed part edge port.</param>
            <param name="featureType">Enumerated values for feature type. Edge or WaterStop are valid input.</param>
            <param name="rootSelector">The root selection string from which begins the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when the feature is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when the port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when the port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when the port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">Raised when an unexpected error occurred while creating the Assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">Raised when an unexpected error occurred while creating the Assoc point by projecting on a curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create an edge feature or water stop on the given edge port and position on that edge port.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the free detailed edge port from plate part/stiffener part.
            Dim edgePort As TopologyPort = detailedDeckPlatePart.GetPort(TopologyGeometryType.Edge, -1, 1, ContextTypes.Base, -1)
            
            Dim edgeFeature As New Feature(parentSystem, edgePort, New Position(0.0, 2.0, 3.0), FeatureType.Edge, "RootEdge")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.TopologyPort,System.Double,System.Boolean,Ingr.SP3D.Structure.Middle.FeatureType,System.String)">
            <summary>
            Creates an edge feature or water stop on the given edge port and distance along the edge port measured from start or end.
            </summary>
            <param name="parentSystem">The parent system under which to create the edge feature or water stop.</param>
            <param name="edgePort">The detailed part edge port in which to create the edge feature or water stop.</param>
            <param name="distanceAlong">The distance along the edge port measured from start or end.</param>
            <param name="isFromStart">If set to True, then measure the distance along the edge port from start; otherwise from the end.</param>
            <param name="featureType">Enumerated values for feature type; Edge or WaterStop are valid input.</param>
            <param name="rootSelector">The root selection string from which begins the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when the feature is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for a water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">Raised when an unexpected error occurred while creating the Assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">Raised when an unexpected error occurred while creating the Assoc point by projecting on a curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating an edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create an edge feature or water stop on the given edge port and distance along the edge port measured from start or end.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the free detailed edge port from plate part/stiffener part.
            Dim edgePort As TopologyPort = detailedDeckPlatePart.GetPort(TopologyGeometryType.Edge, -1, 1, ContextTypes.Base, -1)
            
            Dim edgeFeature As New Feature(parentSystem, edgePort, 2.0, True, FeatureType.WaterStop, "WaterStop")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod,System.Double,Ingr.SP3D.Structure.Middle.FeatureType,System.String)">
            <summary>
            Creates an edge feature or water stop on the given edge port by offset to the supplied reference plane based on the specified offset method.
            </summary>
            <param name="parentSystem">The parent system under which to crate the edge feature or water stop.</param>
            <param name="edgePort">The detailed part edge port in which to create the edge feature or water stop.</param>
            <param name="referencePlane">The reference plane from which to apply the offset.</param>
            <param name="offsetMethod">Enumerated values for defining the offset method.</param>
            <param name="offsetValue">The offset value.</param>
            <param name="featureType">Enumerated values for feature type. Edge or WaterStop are valid input.</param>
            <param name="rootSelector">The root selection string from which starts the selection rule execution.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when an invalid argument is used.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under a given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when the port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when the port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when the port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the feature is not a free edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating an edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">Raised when an invalid type of reference plane object is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when there is no intersection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">Raised when an unexpected error occurred while finding the intersection between two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">Raised when an unexpected error occurred while getting the distance along curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">Raised when an invalid offset direction/value is used for the given edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">Raised when an unexpected error occurred while trying to create the reference point using two curves.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">Raised when an unexpected error occurred while creating a point at the distance along the curve.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">Raised when an unexpected error occurred while creating the offset point active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">Raised when an unexpected error occurred while creating the offset point geometry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when an unexpected error occurred while creating the offset point entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">Raised when an unexpected error occurred while setting the offset method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">Raised when an unexpected error occurred while setting the offset value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">Raised when an unexpected error occurred while setting the offset point active entity relations.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating an edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of a feature constructor to create an edge feature or water stop by offset to the supplied reference plane based on the specified offset method.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the free detailed edge port from plate part/stiffener part.
            Dim edgePort As TopologyPort = detailedDeckPlatePart.GetPort(TopologyGeometryType.Edge, -1, 1, ContextTypes.Base, -1)
            
            'Get the reference plane from Y-grid plane.
            Dim referencePlane As ISurface = yAxis.GetPlane(1.0)
            
            Dim edgeFeature As New Feature(parentSystem, edgePort, referencePlane, LandingCurveOffsetMethod.Girth, 0.5, FeatureType.Edge, "OffEdge")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the input objects based on the feature type (Slot, WebCut, Chamfer, SurfaceTrim, or Cope).
            </summary>
            <param name="boundedOrPenetratedObject">The bounded or penetrated object.</param>
            <param name="boundingOrPenetratingObject">The bounding or penetrating object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using a ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException">Raised if unable to get the inputs from the slot feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException">Raised if unable to get the inputs from the web cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException">Raised if unable to get the inputs from the chamfer feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using a ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Slot, WebCut, Chamfer, SurfaceTrim, or Cope.</exception>        
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Slot, WebCut, Chamfer, SurfaceTrim, or Cope).
            <code>
            Dim boundedOrPenetratedObject As BusinessObject = Nothing
            Dim boundingOrPenetratingObject As BusinessObject = Nothing
            
            'Get the input objects. 
            feature.GetInputs(boundedOrPenetratedObject, boundingOrPenetratingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.Feature@,System.Int32@)">
            <summary>
            Gets the input objects of the chamfer feature placed at the end cut (web/flange cut).
            </summary>
            <param name="endCut">The end cut of the profile on which to create the chamfer.</param>
            <param name="endCutEdgeID">The section ID of the end cut.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if the feature type is not chamfer.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException">Raised if unable to get the inputs from the chamfer feature.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Chamfer).
            <code>
            Dim endCut As Feature = Nothing
            Dim endCutEdgeID As Integer
            
            'Get the input objects. 
            feature.GetInputs(endCut, endCutEdgeID)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Common.Middle.IPoint@)">
            <summary>
            Gets the input objects for the edge feature or water stop.
            </summary>
            <param name="edgePort">The edge port.</param>
            <param name="locationPoint">The location point.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Edge or WaterStop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised if unable to get the inputs from the edge or water stop feature.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Edge or WaterStop).
            <code>
            Dim edgePort As TopologyPort = Nothing
            Dim locationPoint As IPoint = Nothing
            
            'Get the input objects. 
            feature.GetInputs(edgePort, locationPoint)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Structure.Middle.Feature@)">
            <summary>
            Gets the input objects for a flange cut.
            </summary>
            <param name="boundingObject">The bounding object.</param>
            <param name="boundedPort">The bounded port.</param>
            <param name="webCut">The web cut.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException">Raised if unable to get the inputs from the flange cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not FlangeCut.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (FlangeCut).
            <code>
            Dim boundingObject As BusinessObject = Nothing
            Dim boundedPort As TopologyPort = Nothing
            Dim webCut As Feature = Nothing
            
            'Get the input objects. 
            feature.GetInputs(boundingObject, boundedPort, webCut)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Structure.Middle.TopologyPort@)">
            <summary>
            Gets the input objects for the corner feature.
            To use this method the feature should be a corner feature, and its corner feature construction method should be PortsOrPosition.
            </summary>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner
                                                             or the corner feature is not created by PortsOrPosition construction method.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Corner) and CornerFeatureConstructionMethod(PortsOrPosition).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            Dim facePort As TopologyPort = Nothing
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            'Get the input objects. 
            cornerFeature.GetInputs(facePort, adjacentFacePortAlongU, adjacentFacePortAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.Feature@,Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Structure.Middle.TopologyPort@,System.Int32@)">
            <summary>
            Gets the input objects for the corner feature.
            To use this method the feature should be a corner feature, and its corner feature construction method should be PortAndSlotEdge.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner
                                                             or the corner feature is not created by PortAndSlotSegment construction method.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Corner) and CornerFeatureConstructionMethod(PortAndSlotSegment).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            Dim edgeIDAlongV As Integer = -1 
            
            'Get the input objects. 
            cornerFeature.GetInputs(slot, facePort, adjacentFacePortAlongU, edgeIDAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.Feature@,Ingr.SP3D.Structure.Middle.TopologyPort@,System.Int32@,Ingr.SP3D.Structure.Middle.TopologyPort@)">
            <summary>
            Gets the input objects for the corner feature.
            To use this method the feature should be a corner feature, and its corner feature construction method should be SlotEdgeAndPort.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner
                                                             or the corner feature is not created by SlotSegmentAndPort construction method.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Corner) and CornerFeatureConstructionMethod(SlotSegmentAndPort).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim edgeIDAlongU As Integer = -1
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            'Get the input objects. 
            cornerFeature.GetInputs(slot, facePort, edgeIDAlongU, adjacentFacePortAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetInputs(Ingr.SP3D.Structure.Middle.Feature@,Ingr.SP3D.Structure.Middle.TopologyPort@,System.Int32@,System.Int32@)">
            <summary>
            Gets the input objects for the corner feature.
            To use this method the feature should be a corner feature, and its corner feature construction method should be SlotEdges.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner
                                                             or the corner feature is not created by SlotSegments construction method.</exception>
            <example>This is an example of the GetInputs method to get the input objects based on the feature type (Corner) and CornerFeatureConstructionMethod(SlotSegments).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim edgeIDAlongU As Integer = -1
            Dim edgeIDAlongV As Integer = -1
            
            'Get the input objects. 
            cornerFeature.GetInputs(slot, facePort, edgeIDAlongU, edgeIDAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the input location and bore line direction of the corner feature.
            </summary>
            <param name="inputLocation">The input location.</param>
            <param name="cutDirection">The cut direction.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the input objects for the edge feature or water stop.
            </summary>
            <param name="edgePort">The edge port.</param>
            <param name="inputLocation">The input location.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Edge or WaterStop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable find a valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and the curve for an edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">Raised when an unexpected error occurred while creating the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">Raised when an unexpected error occurred while creating the assoc point by projecting on the curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (Edge or WaterStop).
            <code>
            Dim edgePort As LandingCurveOffsetMethod = LandingCurveOffsetMethod.Transverse
            Dim inputLocation As New Position(1, 2.5, 3)
            
            'set the inputs for edge feature or water stop
            feature.SetInputs(edgePort, inputLocation)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Sets the input objects based on the feature type (WebCut, SurfaceTrim, or Cope).
            </summary>
            <param name="boundedOrPenetratedObject">The bounded or penetrated object.</param>
            <param name="boundingOrPenetratingObject">The bounding or penetrating object.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not WebCut, SurfaceTrim, or Cope.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when the bounded port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when the bounding port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException">Raised when an unexpected error occurred while creating the web cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException">Raised when an unexpected error occurred while setting the parent objects on the feature.</exception>
            <example>This is an example of the  SetInputs method to set the inputs based on the feature type (WebCut, SurfaceTrim, or Cope).
            <code>
            'Get the required bounded or penetrated object and bounding or penetrating object.
            Dim boundedOrPenetratedObject As BusinessObject = Nothing
            Dim boundingOrPenetratingObject As BusinessObject = Nothing
            
            'Set the inputs. 
            feature.SetInputs(boundedOrPenetratedObject, boundingOrPenetratingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.Feature)">
            <summary>
            Sets the input objects for a flange cut.
            </summary>
            <param name="boundingObject">The bounding object.</param>
            <param name="boundedPort">The bounded port.</param>
            <param name="webCut">The web cut.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when a bounded port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when a bounding port is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when a connectable object for the web cut and flange cut is not the same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException">Raised when an unexpected error occurred while creating the flange cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not FlangeCut.</exception>
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (FlangeCut).
            <code>
            'Get the required bounded, bounding and web cut object.
            Dim boundingObject As BusinessObject = Nothing
            Dim boundedPort As TopologyPort = Nothing
            Dim webCut As Feature = Nothing
            
            'Set the inputs. 
            feature.SetInputs(boundingObject, boundedPort, webCut)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Sets the input objects for the corner cut.
            </summary>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is invalid for creating the corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner.</exception>
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (Corner).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            'Get the required face port first and second connected port.
            Dim facePort As TopologyPort = Nothing
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            'Set the inputs. 
            cornerFeature.SetInputs(facePort, adjacentFacePortAlongU, adjacentFacePortAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32)">
            <summary>
            Sets the input objects for the corner cut.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="adjacentFacePortAlongU">The adjacent face port along U direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is invalid for creating the corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner.</exception>
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (Corner).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            'Get the required slot, face port, adjacent port
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim adjacentFacePortAlongU As TopologyPort = Nothing
            
            Dim edgeIDAlongV As Integer = CInt(SectionFaceType.Web_Left)
            
            'Set the inputs. 
            cornerFeature.SetInputs(slot, facePort, adjacentFacePortAlongU, edgeIDAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Sets the input objects for the corner cut.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U direction.</param>
            <param name="adjacentFacePortAlongV">The adjacent face port along V direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is not valid for creating the corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner.</exception>
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (Corner).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            'Get the required slot, face port, adjacent port.
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim edgeIDAlongU As Integer = CInt(SectionFaceType.Web_Left)
            Dim adjacentFacePortAlongV As TopologyPort = Nothing
            
            'Set the inputs. 
            cornerFeature.SetInputs(slot, facePort, edgeIDAlongU, adjacentFacePortAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetInputs(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,System.Int32,System.Int32)">
            <summary>
            Sets the input objects for the corner cut.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="edgeIDAlongU">The edge ID of the slot feature along U direction.</param>
            <param name="edgeIDAlongV">The edge ID of the slot feature along V direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when the input is invalid for creating the corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not Corner.</exception>
            <example>This is an example of the SetInputs method to set the inputs based on the feature type (Corner).
            <code>
            'Get the corner feature
            Dim cornerFeature as Feature = Nothing
            
            'Get the required slot, face port
            Dim slot As Feature = Nothing
            Dim facePort As TopologyPort = Nothing
            Dim edgeIDAlongU As Integer = CInt(SectionFaceType.Web_Left)
            Dim edgeIDAlongV As Integer = CInt(SectionFaceType.Top)
            
            'Set the inputs. 
            cornerFeature.SetInputs(slot, facePort, edgeIDAlongU, edgeIDAlongV)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetOffsetMethod(Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod@,System.Nullable{System.Double}@)">
            <summary>
            Gets the offset method and offset value from the edge feature created using offset point.
            </summary>
            <param name="landingCurveOffsetMethod">The landing curve offset method.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <example>This is an example of the GetOffsetMethod method to get the offset and value based on the feature type (Edge or WaterStop).
            <code>
            Dim landingCurveOffsetMethod As LandingCurveOffsetMethod = Nothing
            Dim offset As double = Nothing
            
            'Get the offset method and value.
            feature.GetOffsetMethod(landingCurveOffsetMethod, offset)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetOffsetMethod(Ingr.SP3D.Structure.Middle.LandingCurveOffsetMethod,System.Double)">
            <summary>
            Sets the offset method. This is valid only if the feature is of type Edge or WaterStop 
            and should be created with OffsetPoint and EdgeFeatureConstructionMethod.
            </summary>
            <param name="landingCurveOffsetMethod">The landing curve offset method.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when an argument is not valid.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find the valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">Raised when an invalid type of reference plane object is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when there is no intersection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">Raised when an unexpected error occurred while finding the intersection between two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">Raised when an unexpected error occurred while getting the distance along the curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">Raised when an invalid offset direction/value is used for the given edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">Raised when an unexpected error occurred while trying to create the reference point using two curves.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">Raised when an unexpected error occurred while creating the point at the distance along the curve.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">Raised when an unexpected error occurred while creating the offset point active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">Raised when an unexpected error occurred while creating the offset point geometry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when an unexpected error occurred while creating the offset point entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">Raised when an unexpected error occurred while setting the offset method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">Raised when an unexpected error occurred while setting the offset value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">Raised when an unexpected error occurred while setting the offset point active entity relations.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>  
            <example>This is an example of SetOffsetMethod to set the offset and value based on the feature type (Edge or WaterStop).
            <code>
            Dim landingCurveOffsetMethod As LandingCurveOffsetMethod = LandingCurveOffsetMethod.Transverse
            Dim offset As double = 0.15
            
            'Set the offset method and value.
            feature.SetOffsetMethod(landingCurveOffsetMethod, offset)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetCornerAngles(System.Double@,System.Double@)">
            <summary>
            Gets the adjacent corner angles for the corner feature.
            </summary>
            <param name="angleWithAdjacentFirstFacePort">The first adjacent angle with the face port.</param>
            <param name="angleWithAdjacentSecondFacePort">The second adjacent angle with the face port.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <example>This is an example of the GetCornerAngles method to get corner angle values based on the feature type (Corner).
            <code>
            Dim angleWithAdjacentFirstFacePort As double = Nothing
            Dim angleWithAdjacentSecondFacePort As double = Nothing
            
            'Get the adjacent corner angles for corner feature.
            cornerFeature.GetCornerAngles(angleWithAdjacentFirstFacePort, angleWithAdjacentSecondFacePort)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetCornerPortsFromPosAndDir(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Structure.Middle.TopologyPort@)">
            <summary>
            Gets the corner ports from the position and direction.
            </summary>
            <param name="parentPart">The parent part.</param>
            <param name="cornerPosition">The corner position.</param>
            <param name="boreLineDir">The bore line direction.</param>
            <param name="facePort">The face port.</param>
            <param name="connectedPort1">The connected port 1.</param>
            <param name="connectedPort2">The connected port 2.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.ArePortsValidForCornerFeature(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Checks whether given ports are valid to define a unique corner.
            </summary>
            <param name="faceport">The face port.</param>
            <param name="connectedPort1">The connected port 1.</param>
            <param name="connectedPort2">The connected port 2.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.DoesCornerGapExist(System.Double,System.Double@,System.Double@)">
            <summary>
            Gets the gaps along each edge of the corner feature.
            </summary>
            <param name="tolerance">If the gap value is more than this value, then it is considered as a gap.</param>
            <param name="gapAlongEdgeU">The gap measured along the first edge of the corner (i.e., in U-direction of the feature).</param>
            <param name="gapAlongEdgeV">The gap measured along the second edge of the corner (i.e., in V-direction of the feature).</param>
            <returns>True if the gap value is greater than the tolerance value, otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if the feature type is not a corner feature.</exception>
            <example>DoesCornerGapExist method example code.
            <code lang="cs">
            double gapAlongEdge1; 
            double gapAlongEdge2;
            double tolerance = 1e-006;
            Feature cornerFeature; //Substitute this line with the actual instance of a corner feature.  
            bool doesConerGapExist = feature.DoesCornerGapExist(tolerance, out gapAlongEdge1, out gapAlongEdge2);
            </code>
            <code lang="vb">
            Dim cornerFeature As Feature 'Substitute this line with the actual instance of a corner feature.        
            Dim gapAlongEdge1 As Double
            Dim gapAlongEdge2 As Double
            Dim tolerance As Double = 1E-06
            Dim doesCornerGapExist As Boolean = cornerFeature.DoesCornerGapExist(tolerance, gapAlongEdge1, gapAlongEdge2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.DoesCornerGapExist(System.Double)">
            <summary>
            Checks to see if a gap exists in the boundary for a corner feature.  
            </summary>
            <param name="tolerance">If the gap value is more than this value, then it is considered as a gap.</param>
            <returns>True if the gap value is greater than the tolerance value, otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if the feature type is not a corner feature.</exception>
            <example>DoesCornerGapExist method example code.
            <code lang="cs">        
            double tolerance = 1e-006;
            Feature cornerFeature; //Substitute this line with the actual instance of a corner feature.  
            bool doesConerGapExist = cornerFeature.DoesCornerGapExist(tolerance);
            </code>
            <code lang="vb">
            Dim cornerFeature As Feature 'Substitute this line with the actual instance of a corner feature.        
            Dim tolerance As Double = 1E-06
            Dim doesCornerGapExist As Boolean = cornerFeature.DoesCornerGapExist(tolerance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetIdealizedBoundaryId(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Service to get the idealized section type from the bounded profile port.
            </summary>
            <param name="boundedPort">The bounded port.</param>
            <param name="boundingPort">The bounding port.</param>
            <returns>Returns the section type.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortsException">Raised if the bounding part or bounded part is not profile part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException">Raised if an unexpected failure occurs while getting the idealized boundary from given bounded and bounding ports.</exception>
            <example>GetIdealizedBoundaryId method example code.
            <code lang="cs">        
            Feature webcut; //Substitute this line with the actual instance of a webcut feature.  
            IPort boundedPort; //Substitute this line with the actual instance of the bounded stiffener port.
            IPort boundingPort; //Substitute this line with the actual instance of the bounding stiffener port.  
            int idealizedBoundaryId = webcut.GetIdealizedBoundaryId(boundedPort, boundingPort);
            </code>
            <code lang="vb">
            Dim webcut As Feature 'Substitute this line with the actual instance of a webcut feature.
            Dim boundedPort As IPort 'Substitute this line with the actual instance of the bounded stiffener port.
            Dim boundingPort As IPort 'Substitute this line with the actual instance of the bounding stiffener port.
            Dim idealizedBoundaryId As Integer  = webcut.GetIdealizedBoundaryId(boundedPort, boundingPort)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetConnectedPortAtEdgeFeature">
            <summary>
            Gets the connected topology port to the corresponding face port of the edge feature.
            Returns null if no port is connected to the face port of the edge feature.
            </summary>
            <returns>Topology port</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">This operation can only be accessed on an edge feature - GetConnectedPortAtEdgeFeature.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Unexpected failure occurred while getting the connected port from an edge feature.</exception>
            <example>
            <code lang="cs">
            Feature edgeFeature; //Substitute this line with the actual instance of a Edge feature.  
            TopologyPort connectedPort = edgeFeature.GetConnectedPortAtEdgeFeature(); 
            </code>
             <code lang="vb">
            Dim edgeFeature As Feature 'Substitute this line with the actual instance of a Edge feature.
            Dim connectedPort As TopologyPort = edgeFeature.GetConnectedPortAtEdgeFeature()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetBoundingPlateFlangeClearance(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Gets the clearance between the corners of the stiffener and the edge of a plate port that bounds the stiffener.
            A positive clearance means the boundary is larger than the stiffener at each flange corner.  
            A negative clearance means at least one flange corner is off the edge of the plate.
            </summary>
            <param name="boundedPort">The bounded port of stiffener part.</param>
            <param name="boundingPort">The bounding port of plate part.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Unexpected failure occurred while getting the connected port from edge feature.</exception>
            <example>
            <code lang="cs">
            PlateSystem boundingPlate; //Replace this line with a plate system constructor call.
            StiffenerSystem boundedStiffener; //Replace this line with a stiffener system constructor call.
            boundedStiffener.Detail();
            Feature webcut = null; //Replace this line with the code to get the feature from the detailed stiffener.
            BusinessObject boundedPort = null;
            BusinessObject boundingPort = null;
            webCut.GetInputs(out boundedPort, out boundingPort);
            double clearance = Feature.BoundingPlateFlangeClearance((IPort)boundedPort, (IPort)boundingPort); 
            </code>
             <code lang="vb">
            Dim boundingPlate As PlateSystem 'Replace this line with a plate system constructor call
            Dim boundedStiffener As StiffenerSystem 'Replace this line with a stiffener system constructor call.
            boundedStiffener.Detail()
            Dim webcut As Feature 'Replace this line with the code to get the feature from the detailed stiffener.
            Dim boundedPort As BusinessObject = Nothing
            Dim boundingPort As BusinessObject = Nothing
            webCut.GetInputs(boundedPort, boundingPort)
            Dim clearance As Double = Feature.BoundingPlateFlangeClearance(DirectCast(boundedPort, IPort), DirectCast(boundingPort, IPort))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a wrapped business object as a system hierarchy child to this feature.
            </summary>
            <param name="child">Wrapped business object to be added as a child.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the feature does not support IJDesignParent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToAddSystemChildException">Raised when there is failure to add the system hierarchy child.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when a feature is not in working status.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when this method is accessed for a chamfer feature.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Set the child object to an appropriate business object (e.g., PhysicalConnection).
            feature.AddSystemChild(physicalConnection)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of this feature and removes any existing relationship with the name rule.
            </summary>
            <param name="name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            feature.SetUserDefinedName("EdgeFeature_ByLocation")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the feature starting with the given root selection or part.
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the rootSelectorOrPart argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.
            An invalid part is a part that is not a child of the root smart class hierarchy.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <example>Example for the method ExecuteSelectionRule.
            <code>
            Dim feature as Feature 'Substitute this line with the actual feature instance.
            Dim selectionRule As String =  feature.ExecuteSelectionRule("RootEdge")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim feature as Feature 'Substitute this line with the actual feature instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = feature.GetAvailableSelections("ManualChamfer")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim feature as Feature 'Substitute this line with the actual feature instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = feature.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            Dim selectionRuleAnswer As PropertyValue = feature.GetSelectionRuleAnswer("WeldingType")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            Dim isSelectionQuestionOverridden As Boolean = feature.IsSelectionQuestionOverridden("WeldingType")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. If multiple part classes have the selector question, the first class that matches the given question name is used, starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            feature.OverrideSelectionQuestion("WeldingType", True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance. 
            Dim isParameterOverridden As Boolean = feature.IsParameterOverridden("Radius")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            feature.OverrideParameter("Radius", True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = feature.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim feature As Feature 'Substitute this line with the actual feature instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = feature.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            feature.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.ValidateMarineFeatureRootSelector(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.FeatureType,System.String)">
            <summary>
            Validates the marine feature root selector.
            </summary>
            <param name="connection">The connection.</param>
            <param name="featureType">Type of the feature.</param>
            <param name="rootSelector">The root selection string from which starts the selection rule execution.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when invalid root selector passed in.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetCurrentRootSelectionObjectAndSelectionRuleDefinition(System.Object@,System.Object@)">
            <summary>
            Gets the current root selection object and selection rule definition.
            </summary>
            <param name="rootSelectionObject">The root selection object.</param>
            <param name="selectionRuleDefinition">The selection rule definition.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetAllowablePartForCurrentSelection(System.Object,System.Object)">
            <summary>
            Gets the allowable part for current selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetCornerCutInputs(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Sets the corner cut inputs.
            </summary>
            <param name="facePort">The face port.</param>
            <param name="adjacentObjectAlongU">The adjacent object along U direction.</param>
            <param name="adjacentObjectAlongV">The adjacent object along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when an invalid input is passed in to create corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when unexpected error while getting molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when unexpected error while getting or setting naming rules.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetSlotCornerCutInputs(Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.TopologyPort,System.Object,System.Object)">
            <summary>
            Sets the slot corner cut inputs.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="adjacentObjectAlongU">The adjacent object along U direction.</param>
            <param name="adjacentObjectAlongV">The adjacent object along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">Raised when an invalid input is passed in to create corner feature.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">Raised when an unexpected error occurred while creating corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when unexpected error while getting molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when unexpected error while getting or setting naming rules.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetFlangeCutInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Structure.Middle.EndCutType,Ingr.SP3D.Structure.Middle.Feature)">
            <summary>
            Sets the flange cut inputs.
            </summary>
            <param name="boundingObject">The bounding object.</param>
            <param name="boundedPort">The bounded port.</param>
            <param name="endCutType">The endcut type.</param>
            <param name="webCut">The web cut.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when an invalid bounded port is passed.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when an invalid bounding port is passed.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when connectable object for web cut and flange cut is not same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException">Raised when an unexpected error occurred while creating flange cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when unexpected error while getting molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when unexpected error while getting or setting naming rules.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetParents(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Sets the parents for a SurfaceTrime or Cope feature.
            </summary>
            <param name="boundedOrPenetratedObject">The bounded or penetrated object.</param>
            <param name="boundingOrPenetratingObject">The bounding or penetrating object.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException">Raised when an unexpected error occurred while setting the parent objects on the feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetWebCutInputs(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Sets the web cut inputs.
            </summary>
            <param name="boundedObject">The bounded object.</param>
            <param name="boundingObject">The bounding object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">Raised when an invalid bounded port is passed.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when an invalid bounding port is passed.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException">Raised when an unexpected error occurred while creating web cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when unexpected error while getting molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when unexpected error while getting or setting naming rules.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetEdgeCutInputs(Ingr.SP3D.Structure.Middle.TopologyPort,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the inputs for edge cut or water stop.
            </summary>
            <param name="edgePort">The edge port.</param>
            <param name="inputLocation">The input location.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature creation input passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting root class for specific feature type..</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable find valid part under given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when invalid port type is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when invalid feature type passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when passed in port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when passed in port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when passed in port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when not a free edge passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating edge port for water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is passed in to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">Raised when an unexpected error occurred while creating assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">Raised when an unexpected error occurred while creating assoc point by projecting on curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when unexpected error while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when unexpected error while getting molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when unexpected error while getting or setting naming rules.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetChamferExtensions(System.Double,System.Double)">
            <summary>
            Sets the chamfer start and end extensions.  If the chamfer extension type is not extended by value, the chamfer extension type will be changed
            to extended by value.
            </summary>
            <param name="startExtension">The start extension.</param>
            <param name="endExtension">The end extension.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a chamfer.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException">Raised if the input start or end extensions are negative.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised if an unexepected error was thrown from the COM method.</exception>
            <example>This is an example of how to set the chamfer start and end extension with one method call.
            <code>
            Dim chamfer As Feature 'Substitute this line with the actual chamfer instance.
            
            'Call the SetChamferExtensions method with the start and end chamfer extension values
            chamfer.SetChamferExtensions(0.5, 0.5)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetCornerCutInputs(Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the corner cut inputs.
            </summary>
            <param name="facePort">The face port.</param>
            <param name="adjacentObjectAlongU">The adjacent object along U direction.</param>
            <param name="adjacentObjectAlongV">The adjacent object along V direction.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetSlotCornerCutInputs(Ingr.SP3D.Structure.Middle.Feature@,Ingr.SP3D.Structure.Middle.TopologyPort@,System.Object@,System.Object@)">
            <summary>
            Gets the slot corner cut inputs.
            </summary>
            <param name="slot">The slot.</param>
            <param name="facePort">The face port.</param>
            <param name="adjacentObjectAlongU">The adjacent object along U direction.</param>
            <param name="adjacentObjectAlongV">The adjacent object along V direction.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetFlangeCutInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Structure.Middle.Feature@)">
            <summary>
            Gets the flange cut inputs.
            </summary>
            <param name="boundingObject">The bounding object.</param>
            <param name="boundedPort">The bounded port.</param>
            <param name="webCut">The web cut.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException">Raised if unable to get the inputs from the flange cut feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetTrimAndCutoutFeatureInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the parents.
            </summary>
            <param name="boundedObject">The bounded object.</param>
            <param name="boundingObject">The bounding object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating object using ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetSlotInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the slot inputs.
            </summary>
            <param name="boundedOrPenetratedObject">The bounded or penetrated object.</param>
            <param name="boundingOrPenetratingObject">The bounding or penetrating object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if feature type is not slot.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException">Raised if unable to get the inputs from the slot feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetChamferInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the chamfer inputs.
            </summary>
            <param name="thisPort">This port.</param>
            <param name="otherPort">Other port.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if feature type is not chamfer.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException">Raised if unable to get the inputs from the chamfer feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetWebCutInputs(Ingr.SP3D.Common.Middle.BusinessObject@,Ingr.SP3D.Common.Middle.BusinessObject@)">
            <summary>
            Gets the web cut inputs.
            </summary>
            <param name="boundingObject">The bounding object.</param>
            <param name="boundedObject">The bounded object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised if feature type is not web cut.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException">Raised if unable to get the inputs from the web cut feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetEdgeCutInputs(Ingr.SP3D.Structure.Middle.TopologyPort@,Ingr.SP3D.Common.Middle.IPoint@)">
            <summary>
            Gets the edge cut inputs.
            </summary>
            <param name="edgePort">The edge port.</param>
            <param name="locationPoint">The location point.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised if unable to get the inputs from the edge or water stop feature.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.SetUserTypeAndRootClass(System.Object,System.Object)">
            <summary>
            Sets the user type and root class on trim feature.
            </summary>
            <param name="comTrimFeature">The COM trim feature.</param>
            <param name="smartobject">The smartobject.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException">Raised when an unexpected error occurred while setting the root section on the occurence.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Feature.GetHeightAbovePenetratingObject(Ingr.SP3D.Structure.Middle.Plate,Ingr.SP3D.Structure.Middle.ProfileSystem)">
            <summary>
            Gets the height to the edge of the penetrated object that is above the penetrating object.
            Penetrated object can be a plate system.
            Penetrating object can be a stiffener system or an edge reinforcement system.
            </summary>
            <param name="penetratedObject">The penetrated plate system.</param>
            <param name="penetratingObject">The penetrating profile.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException">Raised if the penetrated object is not a plate system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetHeightAbovePenetratingObjectException">Raised if the intersection between the penetrated and penetrating object is not a point;</exception>
                <para>Or when an unexpected error occurs while getting the height above the penetrating object;</para>
                <para>Or while getting the adjacent or opposite ports of the mounting face for the penetrating object;</para>
                <para>Or when the intersection between the penetrating plane and penetrated object is not a line.</para>
            <example>This is an example of the GetHeightAbovePenetratingObject method to get the height above the penetrated plate.
            <code>
            'Create a deck plate system. 
            Dim deckPlateSystem As Plate = Nothing
            'Create a bulkhead bounded to the deck plate system. 
            Dim bulkheadPlateSystem As Plate = Nothing
            'Create a stiffener system on the deck such that it penetrates the bulkhead. 
            Dim stiffenerSystem As ProfileSystem = Nothing
            
            'Get the height of the bulkhead above the penetrated stiffener. 
            Feature.GetHeightAbovePenetratingObject(bulkheadPlateSystem, stiffenerSystem)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.FeatureType">
            <summary>
            Gets the type of this feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using a ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.EdgeFeatureConstructionMethod">
            <summary>
            Gets the construction method for the edge feature or water stop.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.CornerFeatureConstructionMethod">
            <summary>
            Gets the construction method for the corner feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerFeatureConstructionMethodException">Raised when unable to get the corner feature construction method from the given corner feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.EdgePort">
            <summary>
            Gets or sets the edge port. This property is valid for only an edge feature.
            </summary>
            <value>The edge port.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">Raised when an unexpected error occurred while creating the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">Raised when an unexpected error occurred while creating the assoc point by projecting on a curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException">Raised when an invalid port context type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException">Raised when an unexpected error occurred while finding the operator for the operation in the graph.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SameConnectableException">Raised when the two port connectables are the same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException">Raised when an unexpected error occurred while finding the closest points between two bodies.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException">Raised when the intersecting port is not intersecting with the edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException">Raised when an unexpected error occurred while getting the closest point on the wire.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException">Raised when an unexpected error occurred while getting the normal from the position.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">Raised when an invalid type of reference plane object is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when there is no intersection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">Raised when an unexpected error occurred while finding the intersection between two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">Raised when an unexpected error occurred while getting the distance along the curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">Raised when an invalid offset direction/value is used for the given edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">Raised when an unexpected error occurred while trying to create the reference point using two curves.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">Raised when an unexpected error occurred while creating the point at the distance along the curve.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">Raised when an unexpected error occurred while creating the offset point active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">Raised when an unexpected error occurred while creating the offset point geometry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when an unexpected error occurred while creating the offset point entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">Raised when an unexpected error occurred while setting the offset method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">Raised when an unexpected error occurred while setting the offset value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">Raised when an unexpected error occurred while setting the offset point active entity relations.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.Position">
            <summary>
            Gets the origin of the feature. This is valid only for the edge, corner, and slot feature.
            When using this property, only the edge feature position can be changed.
            </summary>
            <value>Feature position.</value>
            <exception cref="T:System.ArgumentNullException">Raised if the parameters are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised if unable to get the inputs from the corner feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException">Raised if unable to get the inputs from the slot feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IntersectingPort">
            <summary>
            Gets or sets the intersecting port for the edge feature.
            Valid only for an edge feature placed by the SeamOrKnuckleIntersectionPoint method.
            </summary>
            <value>The intersecting curve.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on invalid feature type.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException">Raised when an invalid port context type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException">Raised when an unexpected error occurred while finding the operator for the operation in the graph.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SameConnectableException">Raised when the two port connectables are same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException">Raised when an unexpected error occurred while finding the closest points between two bodies.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException">Raised when the intersecting port is not intersecting with the edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException">Raised when an unexpected error occurred while getting the closest point on wire.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException">Raised when an unexpected error occurred while getting the normal from the position.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ReferencePlane">
            <summary>
            Gets or sets the reference plane from which to measure the offset distance.
            Valid only for an edge feature placed by the offset method.
            </summary>
            <value>The reference plane.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when an invalid argument is used.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">Raised when an invalid type of reference plane object is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when there is no intersection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">Raised when an unexpected error occurred while finding the intersection between two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">Raised when an unexpected error occurred while getting the distance along the curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">Raised when an invalid offset direction/value is used for the given edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">Raised when an unexpected error occurred while trying to create the reference point using two curves.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">Raised when an unexpected error occurred while creating the point at the distance along the curve.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">Raised when an unexpected error occurred while creating the offset point active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">Raised when an unexpected error occurred while creating the offset point geometry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when an unexpected error occurred while creating the offset point entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">Raised when an unexpected error occurred while setting the offset method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">Raised when an unexpected error occurred while setting the offset value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">Raised when an unexpected error occurred while setting the offset point active entity relations.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.OffsetValue">
            <summary>
            Gets or sets the offset value. Valid only for an edge feature placed by the offset method.
            </summary>
            <value>The offset value.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">Raised when an unexpected error occurred while getting inputs from the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">Raised when an unexpected error occurred while getting information from the assoc point.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">Raised when an unexpected error occurred while getting the parents from the active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when an invalid argument is used.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when a connection cannot be obtained from the parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">Raised when an unexpected error occurred while getting the root class for a specific feature type.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">Raised when an unexpected error occurred while getting the root smart class name.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">Raised when an invalid port type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">Raised when an invalid feature type is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">Raised when a port connectable is not a part.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">Raised when a port connectable is not detailed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">Raised when a port connectable is a straked part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">Raised when an unexpected error occurred while computing the sketching plane and curve for the edge feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">Raised when an invalid feature is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">Raised when the value is not a free edge.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">Raised when an unexpected error occurred while validating the edge port for the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">Raised when an invalid edge port is used to create the water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">Raised when an invalid type of reference plane object is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Raised when there is no intersection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">Raised when an unexpected error occurred while finding the intersection between two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">Raised when an unexpected error occurred while getting the distance along curve.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">Raised when an invalid offset direction/value is used for the given edge port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">Raised when an unexpected error occurred while trying to create the reference point using two curves.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">Raised when an unexpected error occurred while creating the point at the distance along the the curve.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">Raised when an unexpected error occurred while creating the offset point active entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">Raised when an unexpected error occurred while creating the offset point geometry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when an unexpected error occurred while creating the offset point entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">Raised when an unexpected error occurred while setting the offset method.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">Raised when an unexpected error occurred while setting the offset value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">Raised when an unexpected error occurred while setting the offset point active entity relations.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">Raised when an unexpected error occurred while creating the edge feature or water stop.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">Raised when an unexpected error occurred while getting the molded form naming rule count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error while getting the naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error while getting or setting naming rules.</exception>  
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.CornerUVector">
            <summary>
            Returns the U-direction vector. The length of the vector represents the length of the edge along the U-axis.
            </summary>
            <value>The corner U-vector.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised when an unexpected failure occurs while getting inputs from the corner cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException">Raised when an unexpected failure occurs while computing the sketching plane and matrix for corner feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.CornerVVector">
            <summary>
            Returns the V-direction vector. The length of the vector represents the length of the edge along the V-axis.
            </summary>
            <value>The corner V-vector.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on an invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">Raised when an unexpected failure occurs while getting inputs from the corner cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException">Raised when an unexpected failure occurs while computing the sketching plane and matrix for the corner feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsFreeEndCut">
            <summary>
            Gets a value indicating whether this feature is the result of a free end cut.
            </summary>
            <value>True if this feature is a free end cut; otherwise, False.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException">Raised if unable to get the inputs from the slot feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException">Raised if unable to get the inputs from the web cut feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException">Raised if unable to get the inputs from the chamfer feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating the object using a ProgID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">Raised when an unexpected error occurred while getting the parent objects from the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a Slot, WebCut, Chamfer, SurfaceTrim, or Cope.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsTopFlangeCut">
            <summary>
            Gets a value indicating whether or not this feature is a top flange cut.
            </summary>
            <value>True if the feature is a top flange cut; otherwise, False.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">Raised when an unexpected error occurred while getting the feature type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException">Raised when an unexpected error occurred while getting the symbol definition from the symbol.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException">Raised when an unexpected error occurred while getting the symbol inputs from the symbol definition.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsChamferPlacedAtEndCut">
            <summary>
            Checks whether or not the chamfer is placed at the end cut of a stiffener part or edge-reinforcement part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.SlotBasePlatePort">
            <summary>
            Gets the base plate port from the slot.
            </summary>
            <value>
            The slot base plate port.
            </value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when a property or method is accessed on invalid feature type.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Unexpected failure while getting base plate port from the slot.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.SystemChildren">
            <summary>
            Gets a read-only collection of the system hierarchy children of this feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the feature does not support IJDesignParent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemChildrenException">Raised when there is failure to get the system hierarchy children.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when this method is accessed for a chamfer feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.SystemParent">
            <summary>
            Gets or sets the system parent of this feature.
            </summary>        
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the feature does not support IJDesignChild interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemParentException">Raised when there is failure to get the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToSetSystemParentException">Raised when there is failure to set the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when this method is accessed for a chamfer feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.Range">
            <summary>
            Gets the range of physical aspect of this feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Raised when an unexpected failure occurred while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of this feature.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:System.InvalidOperationException">Raised when the feature does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidObjectTypeException">Raised when the object is not a name rule object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNoAccessException">Raised when the user does not have access to read or modify the feature.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException">Raised when an invalid molded form name rule is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">Raised when an unexpected error occurred while getting naming rule solver.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">Raised when an unexpected error occurred while getting the molded form naming rule name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">Raised when an unexpected error occurred while getting or setting naming rules.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.Name">
            <summary>
            Gets the name of this feature.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.Part">
            <summary>
            Gets or sets the definition or part on this feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Raised when an unexpected error occurred while getting the part.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised when an invalid part is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException">Raised when an unexpected error occurred while getting the selection rule definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException">Raised when an unexpected error occurred while getting user commands from the selection rule definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandException">Raised when an unexpected error occurred while getting a user command by providing the command ID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException">Raised when an unexpected error occurred while getting user command source.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException">Raised when an unexpected error occurred while getting the collection of attributes by passing the interface ID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetItemException">Raised when an unexpected error occurred while getting the item from the attribute collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException">Raised when an unexpected error occurred while setting the attribute value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException">Raised when an unexpected error occurred while updating the smart occurrence.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.PartName">
            <summary>
            Gets or sets the definition or part by name on the feature.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when unexpected error occurred while getting the part name.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when unexpected error occurred while setting the part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">Raised when an invalid part is used.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException">Raised when an unexpected error occurred while getting the selection rule definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException">Raised when an unexpected error occurred while getting user commands from the selection rule definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandException">Raised when an unexpected error occurred while getting a user command by providing the command ID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException">Raised when an unexpected error occurred while getting the user command source.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException">Raised when an unexpected error occurred while getting the collection of attributes by passing the interface ID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetItemException">Raised when an unexpected error occurred while getting the item from the attribute collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException">Raised when an unexpected error occurred while setting the attribute value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException">Raised when an unexpected error occurred while updating the smart occurrence.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.Symmetry">
            <summary>
            Gets or sets the symmetry.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SymmetryException">Raised when an unexpected error occurred while getting or setting the symmetry.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsOverridden">
            <summary>
            Gets or sets the override property of symmetry.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsOverriddenException">Raised when an unexpected error occurred while getting or setting the IsOverridden property.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.SymmetricalPart">
            <summary>
            Gets or sets the symmetrical part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException">Raised when an unexpected error occurred while getting or setting the symmetrical part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsSymmetryUpToDate">
            <summary>
            Checks whether the symmetry is up-to-date or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException">Raised when an unexpected error occurred while enquiring whether the symmetry is up-to date or not.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsSymmetryPartIdentical">
            <summary>
            Checks whether the symmetry part is identical or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException">Raised when an unexpected error occurred while enquiring whether the symmetry part is identical or not.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.IsBoardManagementSupported">
            <summary>
            Gets a value indicating whether this instance is board management supported or not.
            </summary>
            <value>True if this instance is board management supported; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.BoardManagementHelperInstance">
            <summary>
            Gets the board management helper instance.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised while accessing IBoardManagement members on a plant feature.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ChamferExtensionType">
            <summary>
            Gets or sets the chamfer extension type.
            </summary>
            <value>
            The type of the chamfer extension.
            </value>        
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the input value is not a valid enum value for ChamferExtensionType.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a chamfer.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised if an unexepected error was thrown from the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ChamferStartExtension">
            <summary>
            Gets or sets the chamfer start extension. The start of the chamfer is the end towards the start point of the chamfer path.  
            On set, if the chamfer extension type is not extended by value, the chamfer extension type will be automatically changed
            to extended by value.
            </summary>
            <value>
            The chamfer start extension.
            </value>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a chamfer.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException">Raised if the input start extension is a negative value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionTypeException">Raised if the current chamfer extension type is not ExtendByValue when getting the chamfer start extension.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised if an unexepected error was thrown from the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ChamferEndExtension">
            <summary>
            Gets or sets the chamfer end extension.  The end of the chamfer is the end towards the end point of the chamfer path. 
            On set, if the chamfer extension type is not extended by value, the chamfer extension type will be automatically changed
            to extended by value.
            </summary>
            <value>
            The chamfer end extension.
            </value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a chamfer.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException">Raised if the input end extension is a negative value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionTypeException">Raised if the current chamfer extension type is not ExtendByValue when getting the chamfer end extension.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised if an unexepected error was thrown from the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.ChamferPath">
            <summary>
            Gets the chamfer path.
            </summary>
            <value>
            The chamfer path.
            </value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised if the feature type is not a chamfer.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Feature.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>       
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.LogicalConnection">
            <summary>
            Logical connection class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.LogicalConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.LogicalConnection.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a wrapped business object as a system hierarchy child to this logical connection.
            </summary>
            <param name="child">Wrapped business object to be added as a child.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the logical connection does not support IJDesignParent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToAddSystemChildException">Raised when there is failure to add the system hierarchy child.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when a feature is not in working status.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Set the child object to an appropriate business object (e.g., AssemblyConnection).
            logicalConnection.AddSystemChild(assemblyConnection)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.LogicalConnection.GetLogicalConnections(Ingr.SP3D.Common.Middle.IConnectable)">
            <summary>
            Gets all of the root logical connections on the input connectable.
            </summary>
            <param name="connectable">The connectable.</param>
            <returns>A read-only collection of all root logical connections.  Empty collection if no logical connetions.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.LogicalConnection.SystemChildren">
            <summary>
            Gets a read-only collection of the system hierarchy children of this logical connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the logical connection does not support IJDesignParent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemChildrenException">Raised when there is failure to get the system hierarchy children.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.LogicalConnection.AuxiliaryPorts">
            <summary>
            At this time this functionality is not available for LogicalConnection.  A call to this property
            will throw an InvalidOperationException.
            </summary>
            <value>
            The auxiliary ports.
            </value>
            <exception cref="T:System.InvalidOperationException">Raised if this property is called from within LogicalConnection as this functionality is not yet available.</exception>
            <compilewhen>notimplemented</compilewhen>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AssemblyConnection">
            <summary>
            AssemblyConnection object adds or removes material from a single or multiple physically connected parts and creates additional 
            parts needed for the physical assembly at the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.FrameConnection,System.String)">
            <summary>
            Creates assembly connection object using the connection information from the given frame connection. 
            </summary>
            <param name="parentSystem">The parent system under which the assembly connection will be created.</param>
            <param name="frameConnection">The frame connection.</param>
            <param name="rootSelectorOrPart">The root selector or part name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoCatalogPartFoundException">Raised when a valid catalog part could not be selected by the selector rule for the given frame connection.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get a valid assembly connection part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when the root selector is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">Raised when a connection already exists.</exception>
            <example>This is an example of how to create an assembly connection using a frame connection.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the frame connection from member system created with related objects.
            Dim frameConnection As FrameConnection = memberSystem.FrameConnection(MemberAxisEnd.End)
            
            Dim assemblyConnection As New AssemblyConnection(parentSystem, frameConnection, "FrameAsmConnections")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.FrameConnection,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates assembly connection object using the connection information from the given frame connection and assembly connection part.
            The selection rule will always select the same input part.
            </summary>
            <param name="parentSystem">The parent system under which the assembly connection needs to be created.</param>
            <param name="frameConnection">The frame connection.</param>
            <param name="part">The catalog part for the assembly connection.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get a valid assembly connection part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">Raised when a connection already exists.</exception>
            <example>This is an example of how to create an assembly connection using a frame connection and an assembly connection catalog part.
            <code>
            'Get the parent system. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'Get the frame connection from member system created with related objects.
            Dim frameConnection As FrameConnection = memberSystem.FrameConnection(MemberAxisEnd.End)
            
            'Get the assembly connection part.
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BasePlateAsmConn_1"), Part)
            
            Dim assemblyConnection As New AssemblyConnection(parentSystem, frameConnection, part)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Structure.Middle.MemberPart,System.String)">
            <summary>
            Creates assembly connection object using the connection information from the given member split connection. 
            </summary>
            <param name="parentSystem">The parent system under which the assembly connection will be created.</param>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="memberPart">The member part associated with the split connection.</param>
            <param name="rootSelectorOrPart">The root selector or part name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get a valid assembly connection part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">Raised when the member split connection is not valid.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when the root selector is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">Raised when a connection already exists.</exception>
            <example>This is an example of how to create an assembly connection using a member split connection, with resulting member part.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the member split connection from member system which is split.
            Dim memberSplitConnection As MemberSplitConnection = memberSystem.SplitConnections(0)
            
            'Get the resulting member part on which side the assembly connection is needed.
            Dim memberPart As MemberPart = memberSystem.GetPart(MemberAxisEnd.Start)
            
            Dim assemblyConnection As New AssemblyConnection(parentSystem, memberSplitConnection, memberPart, "FrameAsmConnections")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates assembly connection object using the connection information from the given member split connection and assembly connection part. 
            The selection rule will always select the same input part.
            </summary>
            <param name="parentSystem">The parent system under which the assembly connection needs to be created.</param>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="memberPart">The member part associated with the split connection.</param>
            <param name="part">The catalog part for the assembly connection.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get a valid assembly connection part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">Raised when the member split connection is not valid.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">Raised when a connection already exists.</exception>
            <example>This is an example of how to create an assembly connection using a member split connection, with resulting member part and assembly connection catalog part.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(rootSystem)
            
            'Get the member split connection from member system which is splited.
            Dim memberSplitConnection As MemberSplitConnection = memberSystem.SplitConnections(0)
            
            'Get the resulting member part on which side the assembly connection is needed.
            Dim memberPart As MemberPart = memberSystem.GetPart(MemberAxisEnd.Start)
            
            'Get the assembly connection part.
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BasePlateAsmConn_1"), Part)
            
            Dim assemblyConnection As New AssemblyConnection(parentSystem, memberSplitConnection, memberPart, part)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Structure.Middle.MemberPart,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.StructPortBase},System.String)">
            <summary>
            Creates assembly connection object using a bounded member part and bounding ports.
            </summary>
            <param name="boundedPart">The bounded member part under which the assembly connection will be created.</param>
            <param name="boundingPorts">The bounding ports, which are also known as penetrated ports. Bounding ports can be ports from member parts, detailed plate parts, and detailed stiffener parts.</param>
            <param name="rootSelectorOrPart">The root selector or part name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised when the argument is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LoadAssemblyException">Raised when the marine structure assembly could not be loaded.</exception> 
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortTypeException">Raised when one of the given bounding port type is other than face port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">Raised when the given bounding port not having overlapping geometry with the bounded part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException">Raised when an unexpected error occurred while setting the bounded and bounding ports.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when the root selector is not valid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <example>This is an example of how to create an assembly connection using a bounded member part and bounding ports.
            <code>
            'Get the proper bounded member part.
            Dim boundedPart As MemberPart = Nothing
            
            'Get the bounding face ports from the member part.
            Dim boundingPort1 As TopologyPort = boundingMemberPart.GetPort(TopologyGeometryType.Face, 2000, 513, ContextTypes.Lateral, 513)
            Dim boundingPorts As New Collection(Of StructPortBase)
            boundingPorts.Add(boundingPort1)
            
            Dim assemblyConnection As New AssemblyConnection(boundedPart, boundingPorts, "MemberByMember")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds a business object as a system hierarchy child to this assembly connection.
            </summary>
            <param name="child">Wrapped business object to be added as a child.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the assembly connection does not support system parent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToAddSystemChildException">Raised when there is failure to add the system hierarchy child.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when a feature is not in working status.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Set the child object to an appropriate business object (e.g., Feature).
            assemblyConnection.AddSystemChild(chamferFeature)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the assembly connection with the given root selection or part.
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
            <example>Example for the method ExecuteSelectionRule.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim selectionRule As String = assemblyConnection.ExecuteSelectionRule("FrameAsmConnections")
            </code>
            </example>        
            <exception cref="T:System.ArgumentNullException">Raised if the rootSelectorOrPart argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.
            An invalid part is a part which is not a child of the root smart class hierarchy.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level.
            These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class for the selections.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = assemblyConnection.GetAvailableSelections("BasePlateAsmConn")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = assemblyConnection.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim selectionRuleAnswer As PropertyValue = assemblyConnection.GetSelectionRuleAnswer(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by the user or controlled by rule.
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim isSelectionQuestionOverridden As Boolean = assemblyConnection.IsSelectionQuestionOverridden(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            assemblyConnection.OverrideSelectionQuestion(questionName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim isParameterOverridden As Boolean = assemblyConnection.IsParameterOverridden(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            assemblyConnection.OverrideParameter(parameterName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = assemblyConnection.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim assemblyConnection As AssemblyConnection 'Substitute this line with the actual assembly connection instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = assemblyConnection.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            assemblyConnection.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.CreatePlantAssemblyConnection(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.LogicalConnectionBase,Ingr.SP3D.Structure.Middle.MemberPart,System.String,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates the plant assembly connection.
            </summary>
            <param name="parentSystem">The parent system under which the assembly connection will be created.</param>
            <param name="logicalConnectionBase">The frame connection or member split connection.</param>
            <param name="resultingMemberPart">The member part resulting from the member split connection.</param>
            <param name="rootSelectorOrPart">The root selector or part name.</param>
            <param name="part">The assembly connection part, which can be null. In this case it will execute the selection rule.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoCatalogPartFoundException">Raised when a valid catalog part could not be selected by the selector rule for the given frame connection.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get a valid assembly connection part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">Raised when the member split connection is not valid.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException">Raised when an unexpected error occurred while adding a port to the connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException">Raised when an unexpected error occurred while getting the references collection argument count.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException">Raised when an unexpected error occurred while setting the references collection argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException">Raised when an unexpected error occurred while creating the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting an item from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException">Raised when an unexpected error occurred while removing the references collection from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException">Raised when an unexpected error occurred while adding the references collection to the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException">Raised when an unexpected error occurred while adding a new relation with the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting the relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">Raised when an unexpected error occurred while removing all arguments from the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException">Raised when an unexpected failure occurred while removing a port from the connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">Raised when an unexpected error occurred while getting the smart item definition.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating object using progID.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException">Raised when an unexpected error occurred while getting valid objects from the assembly connection input helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">Raised when an unexpected error occurred while removing all arguments from the references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">Raised when a connection already exists.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetInputObjectsFromMemberSplitConnection(Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Gets the input objects from member split connection.
            </summary>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="resultingMemberPart">The member part associated with split connection.</param>
            <returns>The valid input objects from member split connection.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">Raised when unable to get proper assembly connection part with the given inputs.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">Raised when given member split connection is invalid.</exception>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetInputObjectsFromFrameConnection(Ingr.SP3D.Structure.Middle.FrameConnection)">
            <summary>
            Gets the input objects from frame connection.
            </summary>
            <param name="frameConnection">The frame connection.</param>
            <returns>The valid input objects from frame connection.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetSupportingPortFromRelatedObject(Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the supporting port from related object.
            </summary>
            <param name="memberSystem">The member system.</param>
            <param name="posWhere">The pos where.</param>
            <param name="supportedMemberPart">The supported member part.</param>
            <param name="memberAxisEnd">The member axis end.</param>
            <returns>The supporting port from related object.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the MemberAxisEnd enumerator is out of range.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsSupportedAndSupportingInSameQuadrant(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Determines whether [is supported and supporting in same quadrant] [the specified member axis end].
            </summary>
            <param name="memberAxisEnd">The member axis end.</param>
            <param name="supportedPart">The supported member part.</param>
            <param name="supportingPart">The supporting member part.</param>
            <returns>
              <c>true</c> if [is supported and supporting in same quadrant] [the specified member axis end]; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the MemberAxisEnd enumerator is out of range.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetSplitConnectionPorts(Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,System.Boolean@)">
            <summary>
            Gets the split connection ports.
            </summary>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="memberPart11SplitAxisEndPort">The member part11 split axis end port.</param>
            <param name="memberPart12SplitAxisStartPort">The member part12 split axis start port.</param>
            <param name="memberPart1_1Or2SplitAxisAlongPort">The member part1_1 or2 split axis along port.</param>
            <param name="memberPart21SplitAxisEndPort">The member part21 split axis end port.</param>
            <param name="memberPart22SplitAxisStartPort">The member part22 split axis start port.</param>
            <param name="memberPart2_1Or2SplitAxisAlongPort">The member part2_1 or2 split axis along port.</param>
            <param name="isSplitByPlane">if set to <c>true</c> [is split by plane].</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">Raised when given member split connection is invalid.</exception>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetSplitAxisPorts(Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@,Ingr.SP3D.Common.Middle.IPort@)">
            <summary>
            Gets the split axis ports.
            </summary>
            <param name="memberSystem">The member system.</param>
            <param name="splitPos">The split pos.</param>
            <param name="splitAxisStartPort">The split axis start port.</param>
            <param name="splitAxisEndPort">The split axis end port.</param>
            <param name="splitAxisAlongPort">The split axis along port.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.RemovePortsFromAssemblyConnection">
            <summary>
            Removes the ports from assembly connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException">Raised when an unexpected failure occurred while getting ports from connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException">Raised when an unexpected failure occurred while removing port from connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsPortHasConnection(System.Object)">
            <summary>
            Determines whether [is port has connection] [the specified port].
            </summary>
            <param name="port">The port.</param>
            <returns>
              <c>true</c> if [is port has connection] [the specified port]; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected failure occurred while getting relations collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.ThrowInvalidStatusException(Ingr.SP3D.Interop.StructInterfaces.SPSFACInputHelperStatus)">
            <summary>
            Throws the appropriate exception depending upon the input helper status.
            </summary>
            <param name="assemblyConnInputHelperStatus">The assembly connection input helper status.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetNearestSplitAxisPortFromMemberPart(Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Gets nearest split axis port of the given member part from given member split connection.
            </summary>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="memberPart">The member part.</param>
            <returns>Member split axis port.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.SetBoundedAndBounding(System.Object,System.Object,System.Object)">
            <summary>
            Sets the bounded port and the bounding port.
            </summary>
            <param name="assemblyConn">The assembly conn.</param>
            <param name="boundedPort">The bounded port.</param>
            <param name="boundingPort">The bounding port.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetInputPorts">
            <summary>
            Gets the input ports.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.GetBoundingPortFromReferenceCollection(System.String,System.String,System.Boolean)">
            <summary>
            Gets the bounding port from reference collection.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="roleName">Name of the role.</param>
            <param name="isMarine">Check call from SmartMarine or SmartPlant</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.OrderBoundingPorts(System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.StructPortBase})">
            <summary>
            Orders the bounding ports.
            </summary>
            <param name="boundingPorts">The bounding ports.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsObjectTypeMatched(System.Int32,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether [is object type matched] [the specified object type].
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="boundingObject">The bounding object.</param>
            <returns>
              <c>true</c> if [is object type matched] [the specified object type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsMemberPartResultingFromMemberSplitConnection(Ingr.SP3D.Structure.Middle.MemberSplitConnection,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Determines whether the given member part is resulting from the member split connection or not.
            </summary>
            <param name="memberSplitConnection">The member split connection.</param>
            <param name="memberPart">The member part.</param>
            <returns>True if the given member part is resulting from the member split connection; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.DoesNewAuxiliaryPortsExistInBoundedPorts(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.IPort})">
            <summary>
            Determines whether the given auxiliary ports are already exist in bounded ports or not.
            </summary>
            <param name="auxiliaryPortsToBeStored">The auxiliary ports to set.</param>
            <returns>True if the given auxiliary ports are already exist in bounded ports; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.DoesNewAuxiliaryPortsExistInBoundingPorts(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.IPort})">
            <summary>
            Determines whether the given auxiliary ports are already exist in bounding ports or not.
            </summary>
            <param name="auxiliaryPortsToBeStored">The auxiliary ports to set.</param>
            <returns>True if the given auxiliary ports are already exist in bounding ports; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.DoesNewAuxiliaryPortsExistInAuxiliaryPorts(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.IPort})">
            <summary>
            Determines whether the given auxiliary ports are already exist in existing auxiliary ports or not.
            </summary>
            <param name="auxiliaryPortsToBeStored">The auxiliary ports to set.</param>
            <returns>True if the given auxiliary ports are already exist in existing auxiliary ports; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsValidAuxiliaryPortConnectable(Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Determines whether the given auxiliary ports are already exist in existing auxiliary ports or not.
            </summary>
            <param name="auxiliaryPortToBeStored">The auxiliary port to set.</param>
            <returns>True if the given auxiliary ports are already exist in existing auxiliary ports; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.AreAuxiliaryPortAndPrimaryPortConnected(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Determines whether the given auxiliary port and primary port has already some connecton or not.
            </summary>
            <param name="auxiliaryPortToBeStored">The auxiliary port to set.</param>
            <param name="primaryPort">The primary port.</param>
            <returns>True if the given auxiliary port and primary port has already some connecton; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.DoesAuxiliaryPortAndPrimaryPortIntersectedOrOverlapped(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Determines whether the given auxiliary port and primary port has intersection or overlapping geometry.
            </summary>
            <param name="auxiliaryPortToBeStored">The auxiliary port to set.</param>
            <param name="primaryPort">The primary port.</param>
            <returns>True if the given auxiliary port and primary port has intersection or overlapping geometry; otherwise, false.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.SystemChildren">
            <summary>
            Gets a read-only collection of the system hierarchy children of this assembly connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">Raised if the assembly connection does not support system parent interface.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemChildrenException">Raised when there is failure to get the system hierarchy children.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.Part">
            <summary>
            Gets or sets the definition or part on the assembly connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Raised when an unexpected error occurred while getting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.PartName">
            <summary>
            Gets or sets the definition or part by name on the assembly connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting the part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when an unexpected error occurred while setting the part name.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.BoundedPorts">
            <summary>
            Gets the bounded or supported ports for this assembly connection.
            Currently the property supports only for the member assembly connections.       
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.BoundingPorts">
            <summary>
            Gets the bounding or supporting ports involved in this assembly connection.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.AuxiliaryPorts">
            <summary>
            Gets or sets the auxiliary ports for this assembly connection.
            Returns an empty collection if auxiliary ports are not found on this assembly connection.
            When setting, it will remove the old auxilary ports and stores the new one. 
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyExistsException">Raised if an auxiliary port is one of the bounded ports.
                                                            <para>Raised if an auxiliary port is one of the bounding ports.</para>
                                                            <para>Raised if an auxiliary port is one of the existing auxiliary ports.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the auxiliary ports collection has duplicate objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortStateException">Raised if the auxiliary port is a late binding port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortTypeException">Raised if the auxiliary port is not a face port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortConnectableException">Raised if the auxiliary port’s connectable is not valid. Auxiliary ports must be from a non-split detailed part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyConnectedWithPrimaryPortException">Raised if the auxiliary port is already connected with a primary port of the assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionExistsException">Raised when no intersection or overlapping geometry exists between the auxilary port and primary port.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.SystemParent">
            <summary>
            Gets or sets the parent of this assembly connection.
            Project configuration root, structural system, unit system, generic system and area system are valid parents for assembly connection. 
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when tried to set this property on wall or slab assembly connection.</exception>   
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToGetSystemParentException">Raised when there is failure to return the system hierarchy parent.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailToSetSystemParentException">Raised when there is failure to set the system hierarchy parent.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to the assembly connection.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsWallAssemblyConnection">
            <summary>
            Determines whether this is wall assembly connection or not.
            </summary>
            <value>True if this is wall assembly connection; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsSlabAssemblyConnection">
            <summary>
            Determines whether this is slab assembly connection or not.
            </summary>
            <value>True if this is slab assembly connection; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.IsMarineAssemblyConnection">
            <summary>
            Determines whether this is marine struct detail assembly connection or not.
            </summary>
            <value>True if this is marine struct detail assembly connection; otherwise, false.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AssemblyConnection.Location">
            <summary>
            Gets the assembly connection approximate location. If bounded object is a profile, the location is the profile’s landing curve end point.
            If the bounded object is a plate, then location is midpoint of the boundary curve.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Unexpected failure while getting location from assembly connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionException">raised if no bounded or bounding ports are associated with the assembly connection</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.SelfOutputAttribute">
            <summary>    
            SelfOutputAttribute defined on a custom GeometricConstructionDefinition class defines the self-output parameter.
            When a GeometricConstructionAssembly is aggregated by another object, the GeometricConstructionAssembly can control some interfaces of its aggregator. 
            The enumeration of the arguments of the GeometricConstruction needs in this case to declare the aggregator as self-output on a set of interfaces described in the array of compute notification interface names.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.SelfOutputAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.SelfOutputAttribute"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.SelfOutputAttribute.#ctor(System.String[])">
             <summary>
            Initializes a new instance of a SelfOutputAttribute class with the given array of compute notification interface names.
             </summary>        
             <param name="notificationInterfaceNames">The array of compute notification interface names.
                                         <para>Interface names that are declared as input notification interfaces on the GeometricConstructionDefinition. 
                                         If the input is modified on any of these interfaces, the GeometricConstruction is re-evaluated. 
                                         If an empty array is given, then a notification is not triggered.</para></param>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the array of compute notification interface names has a null element.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the array of compute notification interface names has duplicate objects.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if more than one SelfOutputAttribute is defined in custom GeometricConstructionDefinition.</exception>
             <example>This is an example of using ComputedOutputAttribute.
             <code>
             [SelfOutput(new string [] {"IJPoint"})]
             public class MyCustomGCDefinition : GeometricConstructionDefinition
             {
                 
             }
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.SelfOutputAttribute.NotificationInterfaceNames">
            <summary>
            Gets or sets the notification interface names.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute">
            <summary>
            ParameterOfInputAttribute is followed by ParameterOfInput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a ParameterOfInput in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, and type.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, and default value.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, 0.2)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, and default value.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, 
            default value, and whether or not the parameter will be displayed in the ribbon bar.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2, true)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, primary-secondary-tertiary unit name, and default value.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">The type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2)]
                public ParameterOfInput parameterOfInput;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, 
            primary-secondary-tertiary unit name, default value, and whether or not the parameter will be displayed in ribbon bar.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>        
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is defined in localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in localizer assembly.</param>
            <param name="parameterType">The type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", "ResourceName", "LocalizerAssemblyName", 102, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2, true)]
                public ParameterOfInput parameterOfInput;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, and type.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is notfound on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, 
            default value, and whether or not the parameter will be displayed in the ribbon bar.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the SP3DPropType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, 0.2, true)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, primary-secondary-tertiary unit name, and default value.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.#ctor(System.String,System.String,System.Int32,System.String,Ingr.SP3D.Common.Middle.Services.SP3DPropType,Ingr.SP3D.Common.Middle.Services.UnitType,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,Ingr.SP3D.Common.Middle.Services.UnitName,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of a ParameterOfInputAttribute class with the given input collection name, parameter name, user name, type, unit type, 
            primary-secondary-tertiary unit name, default value, and whether or not the parameter will be displayed in the ribbon bar.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="inputCollectionName">The input collection name for which the parameter is applicable.</param>
            <param name="parameterName">The parameter name. It must be unique for each parameter defined in a custom GeometricConstructionDefinition class.</param>
            <param name="userNameResourceID">The ResourceID for user name of the parameter that is already defined in the default localizer assembly.</param>
            <param name="defaultUserName">The default user name of the parameter in case the userNameResourceID is not found in default localizer assembly.</param>
            <param name="parameterType">Type of the parameter.</param>
            <param name="unitType">The unit type of the parameter.</param>
            <param name="primaryUnitName">The primary unit name of the parameter.</param>
            <param name="secondaryUnitName">The secondary unit name of the parameter.</param>
            <param name="tertiaryUnitName">The tertiary unit name of the parameter.</param>
            <param name="defaultValue">The parameter default value.</param>
            <param name="isShownOnRibbonBar">If set to True the parameter will be displayed in ribbon bar.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the argument enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if ParameterOfInputAttribute is not found on ParameterOfInput.
                                                           <para>Raised if there is more than one ParameterOfInputAttribute found on ParameterOfInput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the ParameterOfInput is not preceded by the ParameterOfInputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the parameter name is not unique for each parameter of input defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using ParameterOfInputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory parameters of input
                [ParameterOfInput("FirstPoint", "Weight", 1, "Weight", SP3DPropType.PTDouble, UnitType.Mass, UnitName.MASS_KILOGRAM, UnitName.MASS_GRAM, UnitName.MASS_MILLIGRAM, 0.2, true)]
                public ParameterOfInput parameterOfInput;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.Name">
            <summary>
            Gets or sets the name for parameter of input.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.InputCollectionName">
            <summary>        
            Gets or sets the input collection name for which the parameter is applicable.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.UserName">
            <summary>
            Gets or sets the user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.UserNameResourceID">
            <summary>
            Gets or sets the ResourceID for user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.DefaultUserName">
            <summary>
            Gets or sets the default user name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.Type">
            <summary>
            Gets or sets the type of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.UnitType">
            <summary>
            Gets or sets the unit type of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.PrimaryUnitName">
            <summary>
            Gets or sets the primary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.SecondaryUnitName">
            <summary>
            Gets or sets the secondary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.TertiaryUnitName">
            <summary>
            Gets or sets the tertiary unit name of the parameter.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.Value">
            <summary>
            Gets or sets the parameter default value.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.ParameterOfInputAttribute.IsShownOnRibbonBar">
            <summary>
            Gets or sets a value indicating whether the parameter will be displayed in ribbon bar or not.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem">
            <summary>
            Provides generalization of all entities supporting geometric construction coordinate system-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction coordinate system occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type CoordinateSystem.</para></exception>
            <example>This is an example of how to create a transient geometric construction coordinate system occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "CSByLines"
            
            Dim coordinateSystem As New CoordinateSystem(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction coordinate system occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction coordinate system.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type CoordinateSystem.</para></exception>
            <example>This is an example of how to create a persistent geometric construction coordinate system occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "CSByPoints"
            
            Dim coordinateSystem As New CoordinateSystem(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.#ctor(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Creates a persistent geometric construction coordinate system occurrence with the geometric construction type name.
            FOR INTERNAL USE ONLY, will be evaluated for public exposure later once we need it from outside.
            </summary>
            <param name="modelDBConnection">The model DB connection.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>        
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid to create geometric construction of type :</para></exception>        
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the geometric construction coordinate system.
            </summary>
            <param name="xAxisNew">X-axis of the foundation port to be set.</param>
            <param name="yAxisNew">Y-axis of the Foundation port to be set.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <example>Example code for SetOrientation.
            <code>
            Dim geometricConstructionCoordinateSystem as CoordinateSystem 'Substitute this line with the actual geometric construction coordinate system instance.        
            geometricConstructionCoordinateSystem.SetOrientation(New Vector(1, 0, 0), New Vector(0, 1, 0))
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.XAxis">
            <summary>
            Gets the X-axis of the geometric construction coordinate system.
            Returns an immutable vector.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.YAxis">
            <summary>
            Gets the Y-axis of the geometric construction coordinate system.
            Returns an immutable vector.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.ZAxis">
            <summary>
            Gets the Z-axis of the geometric construction coordinate system.
            Returns an immutable vector.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.Origin">
            <summary>
            Gets or sets the position of the geometric construction coordinate system.
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.Matrix">
            <summary>
            Gets or sets the matrix of the geometric construction coordinate system.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CoordinateSystem.LocalCoordinateSystemImplHelper">
            <summary>
            Gets the local coordinate system impl helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Stair">
            <summary>
            Stair class definition. Behavior of the Stair class is customized through user attributes
            using generic property access.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates a stair using a top support, bottom plane, and side reference.
             </summary>
             <param name="parentSystem">The parent system under which a stair is to be created.</param>
             <param name="part">The stair catalog part.</param>       
             <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
             <param name="sideReference">The edge which provides the side reference for the stair for offset calculations.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the creation of stair or ladder.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">Raised when the CreateStair method for the stair factory object returned null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of how to create stair with top support, bottom plane, and side reference.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim xAxis As GridAxis = gridSystem.GetGridAxis(AxisType.X)
             Dim yAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Y) 
            
             'Get the required top support, bottom plane, and side reference.
             Dim topSupport As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(xAxis.GetPlane(5.0))
             Dim bottomPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
             Dim sideReference As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(yAxis.GetPlane(5.0))
            
             'Get the catalog part.
             Dim catalogStructHelper As New CatalogStructHelper() 
             Dim stairPart As Part = DirectCast(catalogStructHelper.GetPart("StairA1"), Part) 
            
             Dim stair As New Stair(structuralSystem, stairPart, topSupport, bottomPlane, sideReference) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates a stair using a top support and bottom plane.
             </summary>
             <param name="parentSystem">The parent system under which a stair is to be created.</param>
             <param name="part">The stair catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the creation of stair or ladder.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">Raised when the CreateStair method for the stair factory object returned null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of how to create a stair with top support and bottom plane.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim xAxis As GridAxis = gridSystem.GetGridAxis(AxisType.X)
             Dim yAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Y) 
            
             'Get the required top support and bottom plane.
             Dim topSupport As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(xAxis.GetPlane(5.0))
             Dim bottomPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
            
             'Get the catalog part.
             Dim catalogStructHelper As New CatalogStructHelper() 
             Dim stairPart As Part = DirectCast(catalogStructHelper.GetPart("StairA1"), Part) 
            
             Dim stair As New Stair(structuralSystem, stairPart, topSupport, bottomPlane) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Structure.Middle.Stair)">
            <summary>
            Creates a stair using an existing stair.
            </summary>
            <param name="stair">The stair to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the creation of stair or ladder.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">Raised when the CreateStair method for the stair factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of how to create stair with an existing stair.
            <code>
            'Create a stair which will be copied.
            Dim stairToCopy As Stair
            
            Dim stair As New Stair(stairToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses an edge object for top support and side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves 
            that are not allowed.   
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The edge which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>   
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support and a plane for side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The plane which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and a plane object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferencePlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses a plane for top support and an edge object for side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The plane which provides the top support for the stair.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The edge which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes a plane object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportPlane, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support without a side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support
            and a plane object as bottom plane.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.TopSupport">
            <summary>
            Gets the stair top support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">Exception raised if an error is encountered while trying to get the stair top support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.SideReference">
            <summary>
            Gets the stair side reference.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">Exception raised if an error is encountered while trying to get the stair side reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.BottomSupport">
            <summary>
            Gets the stair bottom support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">Exception raised if an error is encountered while trying to get stair bottom support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Failed to get or set the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Matrix object is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologyCurve">
            <summary>
            Provides generalization of all entities supporting geometric construction topology curve-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologyCurve.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologyCurve.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction topology curve occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologyCurve.</para></exception>
            <example>This is an example of how to create a transient geometric construction topology curve occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "AxisPortExtractor"
            
            Dim topologyCurve As New TopologyCurve(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologyCurve.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction topology curve occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction topology curve.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologyCurve.</para></exception>
            <example>This is an example of how to create a persistent geometric construction topology curve occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "EdgePortExtractor"
            
            Dim topologyCurve As New TopologyCurve(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute">
            <summary>
            GraphicInputBehaviorAttribute is followed by GraphicInput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a GraphicInputBehavior in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of a GraphicInputBehaviorAttribute class with the given graphic input prompt, tooltip, and roles.
            </summary>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>
            <param name="promptResourceID">The ResourceID for the prompt of the graphic input behavior that is defined in localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input behavior in case the promptResourceID is not found in localizer assembly.</param>
            <param name="toolTipResourceID">The ResourceID for the tooltip of the graphic input behavior that is defined in localizer assembly.</param>        
            <param name="defaultToolTip">The default tooltip of the graphic input behavior in case the toolTipResourceID is not found in localizer assembly.</param>
            <param name="roles">The roles show that the input has been provided by the system.
            <para>For example, multiple GeometricConstructions might require a CoordinateSystem as input;<br/>
            - this CoordinateSystem plays a role of <i>ActiveCS</i>, and <br/>  
            - this role name is assigned to the input CoordinateSystem of all these GeometricConstructions.<br/>
            - After locating the CoordinateSystem the first time for one of these GeometricConstructions, the moniker of the CoordinateSystem associated with the role name is persisted in the 
            value manager.<br/>
            - Any GeometricConstruction that requires an input CoordinateSystem playing the role of <i>ActiveCS</i> will have the 
            corresponding smart step on the GeometricConstruction ribbon bar pre-filled with this CoordinateSystem (the color of the smart step 
            is blue to show that the input has been provided by the system).</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if there is more than one GraphicInputBehaviorAttribute found on GraphicInput.</exception>
            <example>This is an example of using GraphicInputBehaviorAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("CoordinateSystem", "ResourceName", "LocalizerAssemblyName", 100, "Select a CoordinateSystem", "IJDCoordinateSystem", 1, 1)]
                [GraphicInputBehavior("ResourceName", "LocalizerAssemblyName", 100, "Select a CoordinateSystem", 100, "Select a CoordinateSystem", "ActiveCoordinateSystem")]
                public GraphicInput graphicInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of a GraphicInputBehaviorAttribute class with the given graphic input prompt, icon, tooltip, ability to enable SmartSketch, point maker ProgID, and roles.
            </summary>
            <param name="resourceName">The locale-free resource name.</param>
            <param name="localizerAssemblyName">The localizer assembly name.</param>
            <param name="promptResourceID">The ResourceID for the prompt of the graphic input behavior that is defined in the localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input behavior in case the promptResourceID is not found in localizer assembly.</param>
            <param name="iconResourceID">The ResourceID for the icon of the graphic input behavior that is defined in the localizer assembly.</param>
            <param name="toolTipResourceID">The ResourceID for the tooltip of the graphic input behavior that is defined in the localizer assembly.</param>        
            <param name="defaultToolTip">The default tooltip of the graphic input behavior in case the toolTipResourceID is not found in localizer assembly.</param>
            <param name="enableSmartSketch">Boolean indicating whether or not to enable SmartSketch.</param>
            <param name="pointMakerProgID">The point maker ProgID. If graphic input requires a point for the SmartSketch service to enable.
            <para>For example, if locating the cursor near the intersection of 2 lines, the intersection glyph appears, and the system will construct a point by using the PointMaker service.</para></param>
            <param name="roles">The roles show that the input has been provided by the system.
            <para>For example, multiple GeometricConstructions might require a CoordinateSystem as input;<br/>
            - this CoordinateSystem plays a role of <i>ActiveCS</i>, and <br/>  
            - this role name is assigned to the input CoordinateSystem of all these GeometricConstructions.<br/>
            - After locating the CoordinateSystem the first time for one of these GeometricConstructions, the moniker of the CoordinateSystem associated with the role name is persisted in the 
            value manager.<br/>
            - Any GeometricConstruction that requires an input CoordinateSystem playing the role of <i>ActiveCS</i> will have the 
            corresponding smart step on the GeometricConstruction ribbon bar pre-filled with this CoordinateSystem (the color of the smart step 
            is blue to show that the input has been provided by the system).</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if there is more than one GraphicInputBehaviorAttribute found on GraphicInput.</exception>
            <example>This is an example of using GraphicInputBehaviorAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("CoordinateSystem", "ResourceName", "LocalizerAssemblyName", 100, "Select a CoordinateSystem", "IJDCoordinateSystem", 1, 1)]
                [GraphicInputBehavior("ResourceName", "LocalizerAssemblyName", 100, "Select a CoordinateSystem", "MyIcon", 100, "Select a CoordinateSystem", false, "MyPointMakerProgID", "ActiveCoordinateSystem")]
                public GraphicInput graphicInput;
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.#ctor(System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of a GraphicInputBehaviorAttribute class with the given graphic input prompt, tooltip, and roles.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="promptResourceID">The ResourceID for the prompt of the graphic input behavior that is already defined in the default localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input behavior in case the promptResourceID is not found in default localizer assembly.</param>
            <param name="toolTipResourceID">The ResourceID for the tooltip of the graphic input behavior that is already defined in the default localizer assembly.</param>        
            <param name="defaultToolTip">The default tooltip of the graphic input behavior in case the toolTipResourceID is not found in default localizer assembly.</param>
            <param name="roles">The roles show that the input has been provided by the system.
            <para>For example, multiple GeometricConstructions might require a CoordinateSystem as input;<br/>
            - this CoordinateSystem plays a role of <i>ActiveCS</i>, and <br/>  
            - this role name is assigned to the input CoordinateSystem of all these GeometricConstructions.<br/>
            - After locating the CoordinateSystem the first time for one of these GeometricConstructions, the moniker of the CoordinateSystem associated with the role name is persisted in the 
            value manager.<br/>
            - Any GeometricConstruction that requires an input CoordinateSystem playing the role of <i>ActiveCS</i> will have the 
            corresponding smart step on the GeometricConstruction ribbon bar pre-filled with this CoordinateSystem (the color of the smart step 
            is blue to show that the input has been provided by the system).</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if there is more than one GraphicInputBehaviorAttribute found on GraphicInput.</exception>
            <example>This is an example of using GraphicInputBehaviorAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("CoordinateSystem", 100, "Select a CoordinateSystem", "IJDCoordinateSystem", 1, 1)]
                [GraphicInputBehavior(100, "Select a CoordinateSystem", 100, "Select a CoordinateSystem", "ActiveCoordinateSystem")]
                public GraphicInput graphicInput;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.#ctor(System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of a GraphicInputBehaviorAttribute class with the given graphic input prompt, icon, tooltip, ability to enable SmartSketch, point maker ProgID, and roles.
            Assumes the DefaultLocalizer for the current custom GeometricConstructionDefinition is already being set.
            </summary>
            <param name="promptResourceID">The ResourceID for the prompt of the graphic input behavior that is already defined in the default localizer assembly.</param>
            <param name="defaultPrompt">The default prompt of the graphic input behavior in case the promptResourceID is not found in default localizer assembly.</param>
            <param name="iconResourceID">The ResourceID for the icon of the graphic input behavior that is already defined in the default localizer assembly.</param>
            <param name="toolTipResourceID">The ResourceID for the tooltip of the graphic input behavior that is already defined in the default localizer assembly.</param>        
            <param name="defaultToolTip">The default tooltip of the graphic input behavior in case the toolTipResourceID is not found in default localizer assembly.</param>
            <param name="enableSmartSketch">Boolean indicating whether or not to enable SmartSketch.</param>
            <param name="pointMakerProgID">The point maker ProgID. If graphic input requires a point for the SmartSketch service to enable.
            <para>For example, if locating the cursor near the intersection of 2 lines, then the intersection glyph appears, and the system will construct a point by using the PointMaker service.</para></param>
            <param name="roles">The roles show that the input has been provided by the system.
            <para>For example, multiple GeometricConstructions might require a CoordinateSystem as input;<br/>
            - this CoordinateSystem plays a role of <i>ActiveCS</i>, and <br/>  
            - this role name is assigned to the input CoordinateSystem of all these GeometricConstructions.<br/>
            - After locating the CoordinateSystem the first time for one of these GeometricConstructions, the moniker of the CoordinateSystem associated with the role name is persisted in the 
            value manager.<br/>
            - Any GeometricConstruction that requires an input CoordinateSystem playing the role of <i>ActiveCS</i> will have the 
            corresponding smart step on the GeometricConstruction ribbon bar pre-filled with this CoordinateSystem (the color of the smart step 
            is blue to show that the input has been provided by the system).</para></param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if there is more than one GraphicInputBehaviorAttribute found on GraphicInput.</exception>
            <example>This is an example of using GraphicInputBehaviorAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic inputs
                [GraphicInput("CoordinateSystem", "MyCustomGCDefinition", "MyCustomGCDefinition", 100, "Select a CoordinateSystem", "IJDCoordinateSystem", 1, 1)]
                [GraphicInputBehavior(100, "Select a CoordinateSystem", "MyIcon", 100, "Select a CoordinateSystem", true, "MyPointMakerProgID", "ActiveCoordinateSystem")]
                public GraphicInput graphicInput;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.PromptResourceID">
            <summary>
            Gets or sets the ResourceID for prompt of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.Prompt">
            <summary>
            Gets or sets the prompt of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.DefaultPrompt">
            <summary>
            Gets or sets the default prompt of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.ToolTipResourceID">
            <summary>
            Gets or sets the ResourceID for tool-tip of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.ToolTip">
            <summary>
            Gets or sets the tool-tip of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.DefaultToolTip">
            <summary>
            Gets or sets the default ToolTip of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.Icon">
            <summary>
            Gets or sets the icon of the graphic input behavior.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.IconResourceID">
            <summary>
            Gets or sets the icon ResourceID.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.EnableSmartSketch">
            <summary>
            Gets or sets a value indicating whether need to enable smart sketch or not.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.PointMakerProgID">
            <summary>
            Gets or sets the point maker ProgID.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicInputBehaviorAttribute.Roles">
            <summary>
            Gets or sets the roles.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d">
            <summary>
            Provides generalization of all entities supporting geometric construction circle-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Circle3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an expected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Circle3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction Circle3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "CircleByPoints"
            
            Dim circle3d As New Circle3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Circle3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction Circle3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Circle3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction Circle3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "CircleByCenterRadius"
            
            Dim circle3d As New Circle3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.Center">
            <summary>
            Gets or sets the center of this geometric construction Circle3d.
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the center.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.Circumference">
            <summary>
            Gets the circumference of this geometric construction Circle3d.        
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the circumference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.Normal">
            <summary>
            Gets or sets the normal of this geometric construction Circle3d. 
            Returns an immutable vector.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the normal length is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the normal.</exception>                
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Circle3d.Radius">
            <summary>
            Gets or sets the radius of this geometric construction Circle3d.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the radius is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the radius.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GenericPlatePart">
            <summary>
            Generic Plate Part is used to create stand-alone plate parts in assemblies; 
            e.g., a base plate or gusset plane in assembly connections, top plate in frame foundations, etc.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Material,System.Double,System.Int32,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.CustomInput},System.String)">
            <summary>
            Creates a generic plate part with the given material and thickness under the given parent system.
            </summary>
            <param name="parentSystem">Parent system under which to create the generic plate part.</param>
            <param name="material">Material of the generic plate part.</param>
            <param name="thickness">Thickness of the generic plate part.</param>
            <param name="genericPlatePartType">The generic plate part type.</param>
            <param name="customInputs">Collection of custom input objects, which can be null.</param>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the parent system is not in working status.</exception>       
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the parent system object.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given parent system.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException">Raised when an unexpected error occurred while creating the generic plate part.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidThicknessException">Raised if there is invalid thickness value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised if an invalid generic plate part type is given.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the custom input collection has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the custom input collection has duplicate objects.</exception>
            <example>This is an example of how to create a generic plate part with the given material and thickness under the given parent system.
            <code>
            Get the parent system and material.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim parentSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject))
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim material As Material = catalogStructHelper.GetMaterial("Steel - Carbon", "A")
            Dim rootSelector As String = "GenericRectPlatePart"
            
            Dim genericPlatePart As New GenericPlatePart(parentSystem, material, 0.01, CInt(GenericPlatePartType.BasePlate), Nothing, rootSelector)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.#ctor(Ingr.SP3D.Structure.Middle.GenericPlatePart)">
            <summary>
            Creates a generic plate part using an existing generic plate part.
            </summary>
            <param name="genericPlatePart">The generic plate part to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNotInWorkingStatusException">Raised when the generic plate part to be copied is not in working status.</exception>       
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnAccessDeniedException">Raised when the user does not have permission to access or modify the generic plate part to be copied.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained from the given generic plate part to be copied.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException">Raised when an unexpected error occurred while creating the generic plate part.</exception>      
            <example>This is an example of how to create a generic plate part using an existing generic plate part.
            <code>
            'Create a generic plate part which will be copied.
            Dim genericPlatePartToCopy As GenericPlatePart
            
            Dim genericPlatePart As New GenericPlatePart(genericPlatePartToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type; e.g., Face, at a given geometry stage; e.g., Current.
            </summary>
            <param name="portType">Geometry type of the required ports.</param>
            <param name="geometryStage">Geometry stage of the required ports.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = genericPlatePart.GetPorts(TopologyGeometryType.Face, GeometryStage.Current) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type; i.e., Face, with a given operation; i.e., Generate; 
            and either before or after the operation.
            </summary>
            <param name="portType">Geometry type of the required ports.</param>
            <param name="geometryOperationType">Geometry operation of the required ports.</param>
            <param name="graphPosition">Graph position of the required ports.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = genericPlatePart.GetPorts(TopologyGeometryType.Face, GeometryOperationTypes.Generate, GraphPosition.After) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type; i.e., Face, with a given topology context; i.e., Lateral, at a given geometry stage; i.e., Current.
            </summary>
            <param name="portType">Geometry type of the required ports.</param>
            <param name="contextId">Topology context of the required ports.</param>
            <param name="geometryStage">Geometry stage of the required ports.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = genericPlatePart.GetPorts(TopologyGeometryType.Face, ContextTypes.Base, GeometryStage.Current)                
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets ports in the graph of the object for a specific port geometry type; i.e., Face, with a specific topology context; i.e., Lateral; 
            also with given operation; i.e., Generate, and either before or after the operation.
            </summary>
            <param name="portType">Geometry type of the required ports.</param>
            <param name="contextId">Topology context of the required ports.</param>
            <param name="geometryOperationType">Geometry operation of the required ports.</param>
            <param name="graphPosition">Graph position of the required ports.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>GetPorts method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim ports As ReadOnlyCollection(Of TopologyPort) = genericPlatePart.GetPorts(TopologyGeometryType.Face, ContextTypes.Base, GeometryOperationTypes.Generate, GraphPosition.After)                
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given generic plate part with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation.
            </summary>
            <param name="portType">Geometry type of the required port.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="contextId">Topology context of the required port.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to get a port with geometry that will be created by a later operation.</param>
            <returns>Structure port created by the given moniker data.</returns>
            <example>GetPort method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim port As TopologyPort = genericPlatePart.GetPort(TopologyGeometryType.Face, -1, 0, ContextTypes.Base, -1, False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator Id.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:System.NotImplementedException">GetPort is not implemented at this time.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">Raised if context type is not base or offset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim baseOrOffsetPort As TopologyPort = genericPlatePart.GetPort(TopologyGeometryType.Face, ContextTypes.Base)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim sectionId As Integer = -1
            Dim port As TopologyPort = genericPlatePart.GetPort(TopologyGeometryType.Face, ContextTypes.Base, sectionId)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
             <summary>
             Gets a port at a specific operation in the graph from a given entity for a given subport ID.
             </summary>
             <param name="geometryType">Flag to specify type of the topology geometry.</param>
             <param name="operatorID">Operator ID for the queried port.</param>
             <param name="operationType">Flag to specify the operation type.</param>
             <param name="contextID">Flag to specify context ID.</param>
             <param name="graphPosition">The graph position.</param>
             <param name="subID">ID on the subport and type of the section face.</param>
             <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
             <returns>Gets subport of the entity in the given conditions.</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception> 
             <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
             <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType.  PortType is not found.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this geometry operation.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure occurred while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
             <example>GetPort method example code.
             <code lang="cs">
             //Get a GenericPlatePart.
             GenericPlatePart genericPlatePart;
             
             //call get port on the genericPlatePart
             TopologyPort port = genericPlatePart.GetPort(TopologyGeometryType.Face, 1, GeometryOperationTypes.Generate, ContextTypes.Base, GraphPosition.After, -1, false);
             </code>
             <code lang="vb">
             'Get a GenericPlatePart.
             Dim genericPlatePart As GenericPlatePart
            
             Dim port As TopologyPort = genericPlatePart.GetPort(TopologyGeometryType.Face,1,GeometryOperationTypes.Generate, ContextTypes.Base,GraphPosition.After,-1,False)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the generic plate part starting with the given root selection or part.
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
            <example>Example for the method ExecuteSelectionRule.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim selectionRule As String = genericPlatePart.ExecuteSelectionRule("GenericRectPlatePart")
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Raised if the rootSelectorOrPart argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.
            An invalid part is a part that is not a child of the root smart class hierarchy.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog.  
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = genericPlatePart.GetAvailableSelections("GenericRectPlatePart")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. 
            These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
            <example>Example for the method GetAvailableSelections.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim availableSelections As ReadOnlyCollection(Of String) = genericPlatePart.GetAvailableSelections()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when the question cannot be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method GetSelectionRuleAnswer.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim selectionRuleAnswer As PropertyValue = genericPlatePart.GetSelectionRuleAnswer(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by user or controlled by rule. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method IsSelectionQuestionOverridden.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            Dim isSelectionQuestionOverridden As Boolean = genericPlatePart.IsSelectionQuestionOverridden(questionName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. If multiple part classes have the selector question, the first class that matches the given question name is used, 
            starting from the current part class up the selection hierarchy to the root selector class. 
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
            <example>Example for the method OverrideSelectionQuestion.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim questionName As String 'Substitute this line with the actual question name instance.
            genericPlatePart.OverrideSelectionQuestion(questionName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method IsParameterOverridden.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim isParameterOverridden As Boolean = genericPlatePart.IsParameterOverridden(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method OverrideParameter.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            genericPlatePart.OverrideParameter(parameterName, True)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method GetParameterValue.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = genericPlatePart.GetParameterValue(parameterName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
            <example>Example for the method SetParameterValue.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            Dim parameterName As String 'Substitute this line with the actual parameter name instance.
            Dim parameterValue as PropertyValue = genericPlatePart.GetParameterValue(parameterName)
            ((PropertyValueDouble)parameterValue).PropValue = 0.05
            genericPlatePart.SetParameterValue(parameterValue)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.SetInput(Ingr.SP3D.Common.Middle.BusinessObject,System.Int32,System.String,System.String)">
            <summary>
            Sets the input on the generic plate part symbol.
            Interface name and role name provide the unique identifier for determining the destination of a relation. 
            The object on the other end of the relation must be a reference collection. 
            If the input object is modified on the given interface, the generic plate part symbol will be recomputed.
            </summary>
            <param name="inputObject">The input business object to be set as input to the generic plate part symbol.</param>
            <param name="index">The index at which to set the input.</param>
            <param name="interfaceNameOrID">The interface name or ID used to set the input object.</param>
            <param name="roleName">Name of the role on origin or destination of a relation.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotFoundException">Raised if the interface does not exist in the metadata.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RoleNameNotFoundException">Raised if the given role name is not found in the metadata.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRelationException">Raised when a relation is not found in the metadata with the combination of the interface name and the role name.
                                                 <para>Raised when the object on the other end of the relation is not a reference collection.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotSupportedException">Raised when the interface is not supported by the input object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting the relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting an item from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException">Raised when an unexpected error occurred while setting the references collection argument.</exception>
            <example>This is an example of how to use the SetInput method.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            genericPlatePart.SetInput(supportedPort, 1, "ISPSSplitAxisEndPort", "RefColl")
            </code>
            </example>      
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.GetInput(System.Int32)">
            <summary>
            Gets the input from the generic plate part symbol.        
            Returns null if there is no input at the given index.
            </summary>
            <param name="index">The index at which to return the input.</param>
            <returns>The input object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting the relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting an item from the collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetInputException">Raised when an unexpected error occurred while getting the input by providing an index.</exception>
            <example>This is an example of how to use GetInput method.
            <code>
            Dim genericPlatePart As GenericPlatePart 'Substitute this line with the actual generic plate part instance.
            BusinessObject supportedPort = genericPlatePart.GetInput(1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the generic plate part.
            </summary>
            <param name="xAxisNew">X-axis of the generic plate part to be set.</param>
            <param name="yAxisNew">Y-axis of the generic plate part to be set.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Raised if unable to get or set the generic plate part matrix.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.GenericPlatePart.CreateGenericPlatePart(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Material,System.Double,System.Int32,System.Collections.Generic.ICollection{Ingr.SP3D.Structure.Middle.CustomInput},System.String,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Helper method to create a generic plate part with the given material and thickness under the given parent system.
            </summary>
            <param name="parentSystem">Parent system under which the generic plate part is to be created.</param>
            <param name="material">Material of the generic plate part.</param>
            <param name="thickness">Thickness of the generic plate part.</param>
            <param name="genericPlatePartType">The generic plate part type.</param>
            <param name="customInputs">Collection of custom input objects, can be null.</param>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <param name="activeNameRule">The active name rule.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.OriginOid">
            <summary>
            Gets or sets the object identifier associated with the object in the application of origin. 
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the argument is not valid.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.OriginAppId">
            <summary>
            Gets or sets the identifier associated with the application of origin.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag. To be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.WBSItemParents">
            <summary>
            Gets the WBS item parents for this generic plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.WBSProjects">
            <summary>
            Gets the WBS projects to which this generic plate part has been claimed.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. 
            Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Part">
            <summary>
            Gets or sets the definition or part on this generic plate part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Raised when an unexpected error occurred while getting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.PartName">
            <summary>
            Gets or sets the definition or part by name on this generic plate part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting the part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when a part is not found with the given part name in the catalog.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Material">
            <summary>
            Gets or sets the material of the generic plate part.
            Setting the material automatically sets the thickness value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">Raised if unable to get the material object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">Raised if unable to set the material object.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.MaterialStandard">
            <summary>
            Gets the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.MaterialType">
            <summary>
            Gets the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.MaterialGrade">
            <summary>
            Gets the grade of the material.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the generic plate part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetThicknessException">Raised when unable to get the generic plate part thickness.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetThicknessException">Raised when unable to set the generic plate part thickness.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidThicknessException">Raised if the thickness value is not valid.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Type">
            <summary>
            Gets or sets the type of the generic plate part.
            Setting the type automatically sets the category value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException">Raised when unable to get the generic plate part type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException">Raised when unable to set the generic plate part type.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised if an invalid generic plate part type is given.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Category">
            <summary>
            Gets or sets the generic plate part category.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException">Raised when unable to get the generic plate part category.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException">Raised when unable to set the generic plate part category.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">Raised if an invalid generic plate part category is given.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.XAxis">
            <summary>
            Gets the X-axis of the generic plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.YAxis">
            <summary>
            Gets the Y-axis of the generic plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.ZAxis">
            <summary>
            Gets the Z-axis of the generic plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Origin">
            <summary>
            Gets or sets the origin of the generic plate part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Raised if unable to get or set the generic plate part matrix.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.Matrix">
            <summary>
            Gets or sets the matrix of the generic plate part.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Raised if unable to get or set the generic plate part matrix.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.WBSItemChildHelperInstance">
            <summary>
            Gets the WBS item child helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.StructConnectableHelperInstance">
            <summary>
            Gets the struct connectable helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.AssemblyChildHelperInstance">
            <summary>
            Gets the assembly child helper instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.GenericPlatePart.PartSelectionHelperInstance">
            <summary>
            Gets the part selection helper instance.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySolid">
            <summary>
            Stub for TopologySolid class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySolid.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.GeometryServices">
            <summary>
            Geometry-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsSurface(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is a surface or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a surface or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsCurve(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is a curve or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a curve or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsLine(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is a line or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a line or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsPlane(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is a plane or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a plane or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsArc(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is an arc or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is an arc or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveParameterPosition(Ingr.SP3D.Common.Middle.ICurve,System.Double)">
            <summary>
            Gets a position from a curve parameter.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="curveParameter">The curve parameter.</param>
            <returns>Curve parameter position.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised when there is an error in getting the position from the curve parameter.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveParameter(Ingr.SP3D.Common.Middle.ICurve,System.Double@,System.Double@)">
            <summary>
            Gets the curve start and end parameter range.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="startParameter">Start parameter range.</param>
            <param name="endParameter">End parameter range.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised when there is an error in getting the start and end parameter range from the curve.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.EvaluateCurve(Ingr.SP3D.Common.Middle.ICurve,System.Double,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Gets the position from a parameter and derivatives at the point from curve.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="parameter">The curve parameter.</param>
            <param name="parameterPosition">Parameter position.</param>
            <param name="tangent">First derivative of the position.</param>
            <param name="deltaTangent">Second derivative of the position.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised when there is an error in getting the position from a parameter and derivatives at the point from the curve.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveByOffset(Ingr.SP3D.Common.Middle.ComplexString3d,Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Creates a new curve, offset from the given planar curve by the specified offset distance. 
            The given offset point lies on the new offset curve.
            </summary>
            <param name="inputCurve">Input curve.</param>
            <param name="pointOnOffsetCurve">Position which lies on the new offset curve.</param>
            <param name="offsetDistance">Offset distance.</param>
            <returns>Offset curve as ComplexString3d object.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException">Exception raised when there is an error in getting the curve by offset.</exception>
            <example>Example code for using this method.
            <code>
            Dim geometryServices As New GeometryServices()
            Dim pointOnOffsetCurve As New Position(1, 1, 1)
            Dim offsetDistance As Double = 1.0
            Dim inputCurve As ComplexString3d
            Dim offsetCurve As ComplexString3d = geometryServices.GetCurveByOffset(inputCurve, pointOnOffsetCurve, offsetDistance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetProjectionSurfacesFromCircle(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.ComplexString3d,Ingr.SP3D.Common.Middle.Circle3d,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Sweeps a curve along another curve.
            </summary>
            <param name="connection">SP3DConnection object.</param>
            <param name="traceCurve">The trace curve.</param>
            <param name="sweepCurve">The cross-section curve or curve to be swept.</param>
            <param name="sweepOption">Enumerated value for sweep options.</param>
            <returns>Collection of BusinessObjects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException">Exception raised when there is an error in creating by a single sweep with cap option on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException">Exception raised when there is an error in getting projection surfaces from a circle.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim geometryServices As New GeometryServices()
            'Assign proper trace curve.
            Dim traceCurve As ComplexString3d
            'Assign proper sweep curve.
            Dim sweepCurve As Circle3d
            Dim sweepOption As SweepOptions = SweepOptions.BreakCrossSection
            Dim projectionSurfaces As Collection(Of BusinessObject) = geometryServices.GetProjectionSurfacesFromCircle(connection, traceCurve, sweepCurve, sweepOption)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetClipSurfaceWithPlanes(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.Projection3d,Ingr.SP3D.Common.Middle.Plane3d)">
            <summary>
            Gets the clip surfaces from the projection and plane.
            </summary>
            <param name="connection">SP3D model connection object.</param>
            <param name="projection3d">Projection on which we need to clip.</param>
            <param name="plane">Plane to bound the clip of surfaces.</param>
            <returns>Read-only collection of clip surfaces.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException">Exception raised when an error occurs while getting the clip surfaces from planes.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim geometryServices As New GeometryServices()
            'Assign proper projection path.
            Dim projection3d As Projection3d
            'Assign proper plane.
            Dim plane As Plane3d
            Dim clipSurfaces As ReadOnlyCollection(Of BusinessObject) = geometryServices.GetClipSurfaceFromPlanes(connection, projection3d, plane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.SetSurfaceNormalOutwards(Ingr.SP3D.Common.Middle.Surface3d)">
            <summary>
            Sets the outward normal on the given surface.
            </summary>
            <param name="surface">Surface on which the outward normal is set.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetClippedProjectionSurfaces(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.Projection3d,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Gets the clipped projection surfaces.
            </summary>
            <param name="connection">The connection.</param>
            <param name="projectionToBeClipped">The projection to be clipped.</param>
            <param name="clippingPlane">The clipping plane.</param>
            <returns>
            Clipped projection surfaces in the following order: Top Plane, Bottom Plane, Clipped Surfaces
            </returns>
            <exception cref="T:System.ArgumentNullException">If one of the given arguments is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException">Exception raised when an error occurs while getting the clipped surfaces from the planes.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">Exception raised when the given plane could not intersect with the extended projection.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim geometryServices As New GeometryServices()
            'Assign proper projection3D object.
            Dim projection3d As Projection3d
            'Assign proper clipping plane.
            Dim clippingPlane As Plane3d
            Dim clipSurfaces As ReadOnlyCollection(Of BusinessObject) = geometryServices.GetClippedProjectionSurfaces(connection, projection3d, clippingPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetSurfaceDimensions(Ingr.SP3D.Common.Middle.IPlane,System.Double@,System.Double@)">
            <summary>
            Gets the surface dimensions by creating a best-fit rectangle around the surface with respect to the principle axes.
            </summary>
            <param name="planarSurface">The planar surface.</param>
            <param name="width">Width always represents U-direction.</param>
            <param name="depth">Depth always represents V-direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the surface is null.</exception>
            <example> Example code to show how to use the GetSurfaceDimensions method.
            <code>
            Dim geometryServices As GeomeTryServices =  New GeomeTryServices() 
            Dim width As Double
            Dim depth As Double
            Dim planarSurface As IPlane
            geometryServices.GetSurfaceDimensions(pilesSurface,out width,out  depth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetSurfaceDimensions(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.CoordinateSystem,System.Double@,System.Double@)">
            <summary>
            Gets the surface dimensions with respect to the given coordinate system.
            </summary>
            <param name="surface">The surface that connected to the piles.</param>
            <param name="coordinateSytem">Coordinate system to be used in determining the dimensions.</param>
            <param name="width">Width always represents U-direction.</param>
            <param name="depth">Depth always represents V-direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if either the surface or coordinate system are null.</exception>
            <example> Example code to show how to use the GetSurfaceDimensions method.
            <code>
            Dim geometryServices As GeomeTryServices =  New GeomeTryServices() 
            Dim width As Double
            Dim depth As Double
            Dim planarSurface As IPlane
            Dim coordinateSystem As CoordinateSystem
            geometryServices.GetSurfaceDimensions(pilesSurface,coordinateSystem,out width,out depth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetSurfaceMatrixAndDimensions(Ingr.SP3D.Common.Middle.IPlane,System.Double@,System.Double@)">
            <summary>
            Gets the matrix and dimensions of the surface.
            </summary>
            <param name="planeSurface">The plane surface.</param>
            <param name="width">Width of the surface.</param>
            <param name="depth">Depth of the surface.</param>
            <returns>Plane matrix.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the plane surface is null.</exception>
            <example> Example code to show how to use this method.
            <code>
            Dim geometryServices As GeomeTryServices =  New GeomeTryServices() 
            Dim width As Double
            Dim depth As Double
            Dim planarSurface As IPlane
            Dim matrix As Matrix4X4
             matrix = geometryServices.GetSurfaceMatrixAndDimensions(pilesSurface,out width,out depth)
             </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetUVVectors(Ingr.SP3D.Common.Middle.OrientedRangeBox,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Gets the direction vectors from the range box.
            </summary>
            <param name="rangeBox">oriented range box.</param>
            <param name="uVector">u vector.</param>
            <param name="vVector">v vector.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetRangeCenter(Ingr.SP3D.Common.Middle.OrientedRangeBox)">
            <summary>
            Gets the range center.
            </summary>
            <param name="rangeBox">The range box.</param>
            <returns></returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructHelper">
            <summary>
            Class to define all the helper methods for structure entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.DISTTOL">
            <summary>
            const double value for distance tolerance.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.MEDIUMDISTTOL">
            <summary>
            const double value for medium distance tolerance.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.SMALLDISTTOL">
            <summary>
            const double value for small distance tolerance.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetDefaultNameRule(System.String)">
            <summary>
            Gets the default name rule for the given class.
            </summary>
            <param name="entityClassName">COM class entity name for which the name rule is being asked.</param>
            <returns>BusinessObject</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetStringProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a string property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The string property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetLongProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a long property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The long property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetDoubleProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a double property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The double property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetBoolProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a boolean property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The boolean property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetIntProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets an integer property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The int property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreEqual(System.Double,System.Double)">
            <summary>
            Compares two doubles with a default tolerance (0.0001).
            </summary>
            <param name="dbl1">First double variable.</param>
            <param name="dbl2">Second double variable.</param>
            <returns>True if equal, False if not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreEqual(System.Double,System.Double,System.Double)">
            <summary>
            Compares two doubles within a given tolerance.
            </summary>
            <param name="dbl1">First double variable.</param>
            <param name="dbl2">Second double variable.</param>
            <param name="dTol">Tolerance for test.</param>
            <returns>True if equal, False if not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreEqual``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``0})">
            <summary>
            Compares two collections for equality.  
            </summary>
            <param name="firstCollection">The first collection.</param>
            <param name="secondCollection">The second collection.</param>
            <returns>True if the collections are equal, otherwise false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetToDoRecordCodelistTable(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Helper method to get the To Do Record codelist table name if the business object is in the To Do List.
            </summary>
            <param name="businessObject">Business object in the To Do list.</param>
            <returns>To Do Record codelist table name if the business object is in the To Do List; otherwise an empty string.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException">Exception raised when an error occurs in getting the To Do Record codelist table name from the given business object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetCodeListInfo(System.String,System.String)">
            <summary>
            Helper method to get codelist information.
            </summary>
            <param name="codelistTableName">Codelist table name.</param>
            <param name="nameSpace">Codelist table namespace.</param>
            <returns>Codelist information.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsValidCodeListValue(System.String,System.String,System.Int32)">
            <summary>
            Checks whether the codelist value exists in the codelist table.
            </summary>
            <param name="codelistTableName">Codelist table name.</param>
            <param name="codelistTableNamespace">Codelist table namespace name.</param>
            <param name="value">Integer for codelist value.</param>
            <returns>True if the value exists in the codelist table; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <example>This is an example of the MemberSystem constructor.
            <code>
            Dim codelistTableName As String = "StructAlignment"
            Dim codelistTableNamespace As String = "REFDAT"
            Dim isValidCodeListValue As Boolean = StructHelper.IsValidCodeListValue(codelistTableName, codelistTableNamespace, 1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CreateStructPlane(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Helper method to create the plane using the PlaneDefinition class. This method calls the factory method to create StructPlane3D from the PlaneDefinition object.
            validation such as colinear check and same position check are done before the factory method is called.
            </summary>
            <param name="connection">SP3D Connection object.</param>
            <param name="planeDefinition">The plane definition.</param>
            <returns>StructPlane3D</returns>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException">Failed to create struct plane3d object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryPattern">Failed to set the geometry pattern on the plane.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">When the inputs are invalid.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreCollinear(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.IPoint})">
            <summary>
            Helper method checks whether the three points passed to the plane definition constructor are colinear or not.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CreateReferencesCollection(Ingr.SP3D.Common.Middle.Services.SP3DConnection)">
            <summary>
            Creates the references collection.
            </summary>
            <param name="connection">The connection.</param>
            <returns>The references collection object.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException">Raised when an unexpected error occurred while creating references collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CreateStructAssemblyConnection(Ingr.SP3D.Common.Middle.Services.SP3DConnection)">
            <summary>
            Creates the struct assembly connection object.
            </summary>
            <param name="connection">The connection.</param>
            <returns>The struct com assembly connection object.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">Raised when an unexpected error occurred while creating assembly connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.ConnectSmartOccurrence(System.Object,System.Object)">
            <summary>
            Connects the reference collection to the smart occurrence.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <param name="smartOccurrenceObject">The smart occurrence object.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting item from collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException">Raised when an unexpected error occurred while removing references collection from collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException">Raised when an unexpected error occurred while adding references collection to collection helper.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException">Raised when an unexpected error occurred while adding new relation with references collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">Raised when an unexpected error occurred while removing all arguments from references collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetRelationsCollection(System.Object)">
            <summary>
            Gets the relations collection.
            </summary>
            <param name="smartOccurrenceObject">The smart occurrence object.</param>
            <returns>The relations collection.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting relations collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.RemoveAllArgumentFromReferencesCollection(System.Object)">
            <summary>
            Removes all argument from references collection.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">Raised when an unexpected error occurred while removing all arguments from references collection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AddPortToStructConnection(System.Object,System.Object)">
            <summary>
            Adds the port to struct connection.
            </summary>
            <param name="structConnection">The struct connection.</param>
            <param name="port">The port.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException">Raised when an unexpected error occurred while adding port to the connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetReferencesCollectionArgumentCount(System.Object)">
            <summary>
            Gets the references collection argument count.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <returns>The references collection argument count.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException">Raised when an unexpected error occurred while getting references collection argument count.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.SetReferencesCollectionArgument(System.Object,System.Int32,System.Object,System.String,System.String)">
            <summary>
            Sets the references collection argument.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <param name="index">The index.</param>
            <param name="argument">The argument.</param>
            <param name="interfaceID">The interface ID.</param>
            <param name="relationName">Name of the relation.</param>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException">Raised when an unexpected error occurred while setting references collection argument.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreBoundingPortsOverlapping(Ingr.SP3D.Structure.Middle.MemberPart,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.StructPortBase},Ingr.SP3D.Structure.Middle.MemberAxisPortType@)">
            <summary>
            Determines whether the bounding ports geometry is overlapping with bounded part or not.
            </summary>
            <param name="boundedPart">The bounded part.</param>
            <param name="boundingPorts">The bounding ports.</param>
            <param name="axisPortType">Type of the axis port.</param>
            <returns>True if the bounding ports geometry is overlapping with bounded part; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.InvokeMarineStructureMethod(System.String,System.String,System.Object[])">
            <summary>
            Invokes the marine structure method.
            </summary>
            <param name="classFullName">Full name of the class.</param>
            <param name="requiredMethodName">Name of the required method.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException">Raised when the requested method is not available.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.InvokeMarineStructureMethodAndGetClassInstance(System.String,System.String,System.Object[])">
            <summary>
            Invokes the marine structure method and get class instance.
            </summary>
            <param name="classFullName">Full name of the class.</param>
            <param name="requiredMethodName">Name of the required method.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException">Raised when the requested method is not available.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.InvokeMarineStructureStaticMethod(System.String,System.String,System.Object[])">
            <summary>
            Invokes the marine structure static method.
            </summary>
            <param name="classFullName">Full name of the class.</param>
            <param name="requiredMethodName">Name of the required method.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException">Raised when the requested method is not available.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetNamedObjectFromCatalog(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String)">
            <summary>
            Gets the named object from catalog.
            </summary>
            <param name="modelConnection">The model database connection.</param>
            <param name="itemName">Name of the item.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.SP3DCreateObject(System.String)">
            <summary>
            Ss the p3 D create object.
            </summary>
            <param name="progID">The prog ID.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">Raised when an unexpected error occurred while creating object using progID.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetProxyFromObject(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Get the proxy part from the catalog part.
            </summary>
            <param name="connection">The connection.</param>
            <param name="businessObject">The business object.</param>
            <returns>Returns the the proxy part object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException">Unable to get the Proxy from Part.</exception>   
            <exception cref="T:System.ArgumentNullException">Passed paramter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetCatalogObjectFromProxy(System.Object)">
            <summary>
            Get the catalog part from proxy
            </summary>
            <param name="partProxy">Proxy part</param>
            <returns>Returns catalog part</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException">Unable to get the Catalog Part from proxy.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsFileNameExtensionValid(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Determines whether the file name extension is valid for the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="validExtensions">The valid extensions.</param>
            <returns>True if any of the passed extensions match the file extension, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the file name and/or the valid extension is null or empty.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsFileNameValid(System.String)">
            <summary>
            Determines whether the file name is valid based on containing invalid characters.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>True if the file name has invalid characters or invalid paths, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the file name is null or empty.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetPlaneDefinitionFromStructPlane3D(Ingr.SP3D.Interop.StructPlane.StructPlane3D)">
            <summary>
            Helper Method to create a PlaneDefinition from a StructPlane3D
            </summary>
            <param name="plane">The plane.</param>
            <returns>Returns the PlaneDefinition class</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsPlaneColinear(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Determines whether the two planes are colinear or not.
            </summary>
            <param name="plane1">The plane1.</param>
            <param name="plane2">The plane2.</param>
            <returns>True if the two planes are colinear; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetWirebodyProperties(System.Object,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Gets the opening contour properties.
            </summary>
            <param name="wireBody">The wire body.</param>
            <param name="isSelfIntersecting">Indicates that the wire body is self-intersection or not.</param>
            <param name="isPlanar">Indicates that the wire body is planar or not.</param>
            <param name="isClosed">Indicates that the wire body is closed or not.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsWireBodyProjectingOnSurface(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.PlaneDefinition,System.Object,System.Object,System.Object@)">
            <summary>
            Determines whether the wire body projecting on surface or not.
            </summary>
            <param name="connection">The connection.</param>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="wireBody">The wire body.</param>
            <param name="surface">The surface.</param>
            <param name="projectedContour">The projected contour.</param>
            <returns>True if wirebody is projected on the surface; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsSketchingPlanePerpendicularToPenetratedPort(Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Determines whether the sketching plane is perpendicular to penetrated port.
            </summary>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="penetratedPort">The penetrated port.</param>
            <returns>True if the sketching plane is perpendicular to penetrated port; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsValidRootSelector(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String,System.String)">
            <summary>
            Determines whether the passed in root selector is valid or not.
            </summary>
            <param name="modelConnection">The model detabase connection.</param>
            <param name="rootSelectionOrPart">The root selector or part name in catalog.</param>
            <param name="partClassType">The part class type.</param>
            <returns>True if is valid root selector; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetOpenings(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the openings from slab, member part or wall part.
            </summary>
            <param name="businessObject">The business object.</param>
            <returns>openings from slab, member part or wall part</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetFirstTargetObject(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets the first target object from the given business object with the provided relationship and role.
            </summary>
            <param name="businessObject">The business object.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetTargetObjects(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets the target objects from the given business object with the provided relationship and role.
            </summary>
            <param name="businessObject">The business object.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetFirstLinkObject(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets the first link object from the given business object with the provided relationship and role.
            </summary>
            <param name="businessObject">The business object.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="roleName">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetPortBeforeCutout(Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Gets the port before cutout.
            </summary>
            <param name="actualPort">The actual port.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsStringInOIDFormat(System.String)">
            <summary>
            Determines whether the given string is in OID format or not.
            </summary>
            <param name="originOid">The given string for which OID will be created.</param>
            <returns>True if the string is in OID format; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.DoesPortExist(Ingr.SP3D.Structure.Middle.StructPortBase)">
            <summary>
            Determines whether the port is existing port or late binding port which will be created in next operation.
            </summary>
            <param name="structPortBase">The port.</param>
            <returns>True if the port is existing port; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsPossibleToCreateFreeEndCut(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Determines whether this frame connection is possible candidate to create free end cut or not.
            </summary>
            <param name="relatedObjects">The related objects.</param>
            <returns>True if this frame connection is possible candidate to create free end cut; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsFreeEndCutAtStart(Ingr.SP3D.Common.Middle.IPort)">
            <summary>
            Checks whether this free end cut is placed at the start or end of a profile part.
            </summary>
            <param name="endPort">The end port where the free end cut created.</param>
            <returns>True if this free end cut is placed at the start of a profile part; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetValidRootSelector(Ingr.SP3D.Common.Middle.Services.SP3DConnection,System.String,System.String)">
            <summary>
            Get the valid parent root selector string if found unless empty string will be returned.
            </summary>
            <param name="modelConnection">The model detabase connection.</param>
            <param name="rootSelectorOrPart">The root selector or part name in catalog.</param>
            <param name="partClassType">The part class type.</param>
            <returns>Valid parent root selector; otherwise, empty string.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.Remove(System.Object)">
            <summary>
            Removes the specified COM object.
            Need to delete the COM object, mostly used before setting the persistency of the COM BO.
            </summary>
            <param name="comObject">The COM object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CheckForDuplicateBoundaryDefs(System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition})">
            <summary>
            Checks whether the duplicate boundary definitions exist. 
            This method is applicable where we pass boundary definitions as boundaries. 
            </summary>
            <param name="boundaries">The boundaries.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.HasDuplicateObject(System.Collections.ICollection)">
            <summary>
            Determines whether the specified collection has duplicate object or not.
            </summary>
            <param name="collection">The collection.</param>
            <returns>True if the specified collection has duplicate object; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.HasDuplicateObject(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Determines whether the specified collections has duplicate object or not.
            </summary>
            <param name="collection1">The first collection.</param>
            <param name="collection2">The second collection.</param>
            <returns>True if the specified collections has duplicate object; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.HasNullElement(System.Collections.ICollection)">
            <summary>
            Determines whether the specified collection has null element or not.
            </summary>
            <param name="collection">The collection.</param>
            <returns>True if the specified collection has null element; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetReferencesCollection(System.Object)">
            <summary>
            Gets the references collection.
            </summary>
            <param name="smartOccurrenceObject">The smart occurrence object.</param>
            <returns>The references collection object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">Raised when an unexpected error occurred while getting relations collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">Raised when an unexpected error occurred while getting an item from the collection helper.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetEntityByIndexFromReferencesCollection(System.Object,System.Int32)">
            <summary>
            Gets the entity by index from references collection.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.HasAccessControl(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether [has access control] [the specified business object].
            </summary>
            <param name="businessObject">The business object.</param>
            <returns>
              <c>true</c> if [has access control] [the specified business object]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.HasApprovalStatus(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Determines whether [has approval status] [the specified business object].
            </summary>
            <param name="businessObject">The business object.</param>
            <returns>
              <c>true</c> if [has approval status] [the specified business object]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetTopologyGeometryType(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the type of the topology geometry.
            </summary>
            <param name="portType">Type of the port.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsEdgePortPerpendicularToPlane(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Structure.Middle.TopologyPort)">
            <summary>
            Determines whether [is edge port perpendicular to plane] [the specified plane].
            </summary>
            <param name="plane">The plane.</param>
            <param name="edgePort">The edge port.</param>
            <returns>
              <c>true</c> if [is edge port perpendicular to plane] [the specified plane]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.PlaceSketchFeatureOnMemberPart(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Method to create sketched features on a MemberPart. This is for internal usage.
            </summary>
            <param name="penetratedMemberPart">The penetrated member part.</param>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetCollectionOfRelations(System.Object,System.String,System.String)">
            <summary>
            Get the collection of relations.
            </summary>
            <param name="comObject">The COM object on which relations is asked.</param>
            <param name="interfaceID">The interface ID.</param>
            <param name="roleName">Name of the role on origin or destination of a relation.</param>
            <returns>Returns collection of relations.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetTransactionState">
            <summary>
            Gets the state of the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsValidNameForProjectOrClass(System.String)">
            <summary>
            Determines whether [is valid name for project or class] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if [is valid name for project or class] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsThisInvalidRegularExpression(System.Char)">
            <summary>
            Determines whether [is this invalid regular expression] [the specified ch].
            </summary>
            <param name="ch">The ch.</param>
            <returns>
              <c>true</c> if [is this invalid regular expression] [the specified ch]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsReservedKeyWord(System.String)">
            <summary>
            Determines whether [is reserved key word] [the specified identifier].
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>
              <c>true</c> if [is reserved key word] [the specified identifier]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsThisSystemReservedString(System.String)">
            <summary>
            Determines whether [is this system reserved string] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if [is this system reserved string] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.PostToDoListMessage(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.Services.ToDoListMessage)">
            <summary>
            Posts ToDo list message on the given occurrence. 
            </summary>
            <param name="occurrence">The occurrence, must support IJToDoListHelper</param>
            <param name="todoListMessage">The ToDo list message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetPlaneDefinitionConstructionMethod(Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Gets the plane definition construction method.
            If plane defintion type is Angle or NormalToPlaneAndPoint then get the construction type to know
            whether the plane definition created using port or two points to define rotation axis or normal.
            </summary>
            <param name="planeDefinition">The plane definition.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsValidPart(Ingr.SP3D.ReferenceData.Middle.Part,System.String)">
            <summary>
            Determines whether the specified part’s PartClassType is of expected PartClassType or not.
            </summary>
            <param name="part">The part.</param>
            <param name="expectedPartClassType">Expected PartClassType.</param>
            <returns>True if the specified part’s PartClassType is of expected PartClassType; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CopyPartPropertiesToOccurrence(System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.PropertyValue},System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.PropertyValue})">
            <summary>
            Copies the part properties to occurrence.
            </summary>
            <param name="partPropertyValues">The part property values.</param>
            <param name="occurrencePropertyValues">The occurrence property values.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.SetPropertyValueOnOccurrence(Ingr.SP3D.Common.Middle.PropertyValue,Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the property value on occurrence.
            </summary>
            <param name="occurrencePropertyValue">The occurrence property value.</param>
            <param name="partPropertyValue">The part property value.</param>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition">
             <summary>
             Base class from which all the .NET GeometricConstructionDefinitions derive to provide the basic GeometricConstructionDefinition behavior.    
             A class inheriting from this should have two basic sections: <br/>
             - Declaration of inputs, parameters, and outputs<br/>
             - Implementation of the GeometricConstructionDefinition within the overridden Evaluate method
             </summary>
             <example>This is an example of using GeometricConstructionDefinition.
             <code>
             public class MyCustomGCDefinition : GeometricConstructionDefinition
             {
                 //define inputs
                 [GraphicInput("OriginPoint", "ResourceName", "LocalizerAssemblyName", 100, "IJPoint", 1, 1, new string [] {"IJCurve", "IJArc"})]
                 public GraphicInput originPoint;
                       
                 //define parameters    
                 [Parameter("CSOrientation", "ResourceName", "LocalizerAssemblyName", 102, SP3DPropType.PTCodelist, 1)]
                 [ParameterValue("Direct", 1)]
                 [ParameterValue("Indirect", 2)]
                 public Parameter axesRoles;        
                                 
                 //define output
                 [GraphicOutput(OutputType.CoordinateSystem)]
                 public GraphicOutput localCoordinateSystem;
             
                 /// <summary>
                 /// Evaluates the geometrical outputs given the inputs objects and the parameters values. 
                 /// </summary>
                 public override void Evaluate()
                 {
                     try
                     {
                         //retrieve output geometry
                         
                         //retrieve mandatory inputs
                         
                         //retrieve parameters
                         
                         //compute position of point
                         
                         //store geometry
                     }
                     catch (Exception) //General unhandled exception 
                     {                
                         if(base.ToDoListMessage != null) //Check ToDoListMessgae created already or not
                         {
                             base.ToDoListMessage = new ToDoListMessage(ToDoMessageTypes.ToDoMessageError, "Error in evaluating coordinate system by points.");
                         }
                     }
                 } 
             }
            </code>
            </example>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.#ctor(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition"/> class.
            Internal constructor used from the GCBase class to set the occurrence and GCDefinition fields into this class.
            </summary>
            <param name="occurrence">The occurrence.</param>
            <param name="comDefinition">The COM GC definition.</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetGraphicInput(System.Int32)">
            <summary>
            Gets the graphic input information by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Graphic input information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than the graphic inputs count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting graphic input.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetComputedInput(System.Int32)">
            <summary>
            Gets the computed input information by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Computed input information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than computed inputs count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting computed input.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetGraphicOutput(System.Int32)">
            <summary>
            Gets the graphic output information by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Graphic output information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than graphic outputs count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting graphic output.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetComputedOutput(System.Int32)">
            <summary>
            Gets the computed output information by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Computed output information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than computed outputs count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting computed output.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetParameter(System.Int32)">
            <summary>
            Gets the parameter information by index.
            </summary>
            <param name="index">The index.</param>
            <returns>Parameter information.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than parameters count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting parameter.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetParametersOfInput(System.String)">
            <summary>
            Gets all the parameters of input.
            Returns an empty collection if ParameterOfInput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <param name="inputName">Name of the input.</param>
            <returns>Parameters of input information.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting parameters of input.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetParameterOfInput(System.String,System.Int32)">
            <summary>
            Gets the parameter of input information by input name and index.
            </summary>
            <param name="inputName">Name of the input.</param>
            <param name="index">The index.</param>
            <returns>Parameter of input information.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if index is less than zero, or if index is equal to or greater than parameters of input count.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting parameter of input.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetInputReplacementStatus(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the input replacement status.
            Call this method inside the InputReplaced implementation to determine which input was replaced or deleted.
            Will return <i>Unchanged</i> replacement status if this object is not being deleted or replaced.
            </summary>
            <param name="candidateObject">The candidate object with replacement that is in question.</param>
            <returns>An enumerator value indicating if the input was removed, replaced, or not changed.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting input replacement status.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetReplacingObjects(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>        
            Returns the collection of objects replacing the given object as a result of an operation; e.g., Split. 
            Call this method inside the InputReplaced implementation to get the collection of objects replacing the indicated input object. 
            An empty collection will be returned if this object is not being replaced.
            </summary>
            <param name="replacedObject">The replaced object.</param>
            <returns>Read-only collection provides the set of BusinessObjects replacing the given replaced object.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting replacing objects.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.ReplaceObjects(System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Call this method inside the InputReplaced implementation to inform the caller that a set of objects replaces an existing object (split operation), or an object replaces a set of existing objects (merge operation). 
            One of the input collections must contain just one object. 
            If the first collection has one object, it is a split operation; if the second collection has one object then, it is a merge operation.
            <para>In most instances, both input collections will have one object which is the same indicating that one object maintains its identity. This is not required, but a typical replacement scenario.</para>
            </summary>
            <param name="replacedObjects">The replaced objects.</param>
            <param name="replacingObjects">The replacing objects.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.InvalidOperationException">Raised if either the replaced objects or replacing objects count is more than 1. Currently, replacement of multiple objects with multiple replacing objects is not supported.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting replaced objects.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.DeleteObjects(System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Call this method inside the InputReplaced implementation to inform the caller that new objects were deleted, and these deleted objects were replaced by another set of objects. 
            One of the input collections must contain only one object. 
            If the first collection has one object, it is a split operation; if the second collection has one object then it is a merge operation.
            </summary>
            <param name="deletedObjects">The deleted objects.</param>
            <param name="replacingObjects">The replacing objects.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.InvalidOperationException">Raised if either the replaced objects or replacing objects count is more than 1. Currently, replacement of multiple objects with multiple replacing objects is not supported.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting replaced objects.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.Mirror(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Matrix4X4,System.Boolean)">
            <summary>
            Mirrors the custom GeometricConstruction about the given mirror plane.
            Base class implementation does nothing, so if the custom GeometricConstructionDefinition needs to add special logic to handle the mirror operation for the GeometricConstruction, it must override and implement this method.
            </summary>
            <param name="targetBusinessObject">Delegating (target) GeometricConstruction.</param>
            <param name="sourceBusinessObject">Original (source) GeometricConstruction.</param>
            <param name="mirrorPlane">Plane of mirror.</param>
            <param name="transformationMatrix">Transformation matrix for the mirror operation.</param>
            <param name="isCopy">Flag to determine whether the operation is in-place mirror or mirror-copy; True if mirror copy.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to mirror a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.Evaluate">
            <summary>
            Constructs and evaluates the computed inputs and the outputs from given inputs objects and the parameters values.
            Base class implementation does nothing, so if the custom GeometricConstructionDefinition needs to construct and evaluate the outputs, it must override and implement this method.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to evaluate a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.Transform(Ingr.SP3D.Common.Middle.Matrix4X4,System.Collections.Generic.ICollection{Ingr.SP3D.Common.Middle.BusinessObject},System.String,System.Object)">
            <summary>
            Transforms a GeometricConstruction that is output of a GeometricConstructionAssembly.
            Base class implementation does nothing, so if the custom GeometricConstructionDefinition needs to provide transform of a GeometricConstruction that is output of a GeometricConstructionAssembly, it must override and implement this method.
            </summary>
            <param name="transformationMatrix">The transformation matrix.</param>
            <param name="transformObjects">The transform objects.</param>
            <param name="computedOutputName">Name of the computed output.</param>
            <param name="outputKey">The output key which indicates the output that is the source of the transform forward.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to transform a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.InputsReplaced">
            <summary>
            Reacts to replacing inputs that have been split, merged, or replaced.
            Base class implementation does nothing, so if the custom GeometricConstructionDefinition needs to react to replacing inputs that have been split, merged, or replaced, it must override and implement this method.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to react to inputs replaced for a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsInputShownOnRibbonBar(System.String)">
            <summary>
            Determines whether an input is displayed on the ribbon bar.
            This method can be overridden by the inheriting class if the need exists to determine whether the input will be displayed on the ribbon bar.
            By default this method returns False.
            </summary>
            <param name="inputName">The input name.</param>
            <returns>True if input is displayed on the ribbon bar; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsInputOptional(System.String)">
            <summary>
            Determines whether or not the input is optional.
            This method can be overridden by the inheriting class if the need exists to determine whether the input will be optional.
            By default this method returns False.
            </summary>
            <param name="inputName">The input name.</param>
            <returns>True if the input is optional; otherwise, False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsInputEnabled(System.String)">
            <summary>
            Determines whether or not the input is enabled on ribbon bar.
            This method can be overridden by the inheriting class if the need exists to determine whether the input will be enabled on ribbon bar.
            By default this method returns True.
            </summary>
            <param name="inputName">The input name.</param>
            <returns>True if the input is enabled.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsParameterShownOnRibbonBar(System.String)">
            <summary>
            Determines whether a parameter is displayed on the ribbon bar.
            This method can be overridden by the inheriting class if the need exists to determine whether the parameter will be shown on ribbon bar.
            By default this method will return true.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>True if parameter is displayed on the ribbon bar.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsParameterEnabled(System.String)">
            <summary>
            Determines whether or not the parameter is enabled on ribbon bar.
            This method can be overridden by the inheriting class if the need exists to determine whether the parameter will be enabled on the ribbon bar.
            By default this method will return true.
            </summary>
            <param name="parameterName">The parameter name.</param>
            <returns>True if the parameter is enabled.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetActiveInputForStart(System.Boolean)">
            <summary>
            Gets the active input collection name for restarting the command in continuous mode. 
            After the finish button has been applied, the GeometricConstruction ribbon bar can restart with default inputs deduced from the committed GeometricConstruction.        
            This method can be overridden by the inheriting class if the need exists to provide the default behavior when re-starting second placement.
            By default this method returns null.
            </summary>
            <param name="isRestart">Is the GeometricConstructionDefinition started the first time or restarted in continuous mode. True if it is restarted.</param>
            <returns>Active input collection name.</returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.AreMouseEventAllowed(System.String)">
            <summary>
            Determines whether the GeometricConstruction is ready to receive mouse events.
            This method can be overridden by the inheriting class if the need exists for the GeometricConstruction to receive mouse events.
            By default this method returns False.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.OnMouseMove(System.String,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Called when there is a mouse move.
            This method can be overridden by the inheriting class if the need exists for the mouse move.
            By default this method return 0.0.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="mousePosition">The mouse position.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetAdditionalGraphics(System.String)">
            <summary>
            Gets the additional graphical displayable objects from this GeometricConstruction occurrence. 
            An empty collection will be returned for parameters that do not have graphics.
            <para>For example, if the required input is a keypoint on a member cross section, it can return a collection of spheres representing keypoints positions in a graphic display.
            This method can be overridden by the inheriting class if the need exists to get additional graphical displayable objects.
            By default this method returns an empty collection.</para>
            </summary>
            <param name="parameterName">The parameter name.</param>
            <returns>Additional graphical displayable objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when getting additional graphical displayable objects from a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetGraphicDisplayPosition(System.String,Ingr.SP3D.Common.Middle.Services.CodelistItem)">
            <summary>
            Gets the graphic display position of a codelist item. 
            A sphere of a fixed radius is displayed along with the text codelist item's long description at the upper left.
            This method can be overridden by the inheriting class if the need exists to get a graphic display position of a codelist item.
            By default this method returns nothing.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="paramaterCodelistItem">The paramater codelist item.</param>
            <returns>Graphic display position.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when getting a graphic display position from a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.PostRelationAdded(Ingr.SP3D.Common.Middle.RelationCollection)">
            <summary>
            Override this method on a custom GeometricConstructionDefinition if an action is required after the GeometricConstruction occurrence is disconnected from a related object.
            By default this method does nothing.
            </summary>
            <param name="relationCollection">The relation collection. Gives information about the relationship and the role of the definition object in the relation.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to post a relation when adding a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.PreRelationRemoved(Ingr.SP3D.Common.Middle.RelationCollection,System.Boolean,System.Boolean)">
            <summary>
            Override this method on a custom GeometricConstructionDefinition if an action is required before the GeometricConstruction occurrence is disconnected from a related object.
            By default this method does nothing.        
            </summary>
            <param name="relationCollection">The relation collection, which gives information about the relationship and the role of the definition object in the relation.</param>
            <param name="isGeometricConstructionDeleted">If True, then the GeometricConstruction is deleted.</param>
            <param name="isRelatedObjectDeleted">If True, then the object related to this geometric definition is deleted.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when trying to remove a pre-relation for a custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.ObjectsReplaced(System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.Generic.IEnumerable{Ingr.SP3D.Common.Middle.BusinessObject},System.Boolean)">
            <summary>
            Objects the replaced.
            </summary>
            <param name="replacedObjects">The replaced objects.</param>
            <param name="replacingObjects">The replacing objects.</param>
            <param name="deleteReplacedObjects">if set to <c>true</c> [delete replaced objects].</param>
            <exception cref="T:System.InvalidOperationException">Raised if either the replaced objects or replacing objects count is more than 1. Currently, replacement of multiple objects with multiple replacing objects is not supported.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when Unexpected failure while setting replaced objects.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsReplacedObjectDeleted(Ingr.SP3D.Common.Middle.BusinessObject,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.BusinessObject}@)">
            <summary>
            Determines whether the specified replaced object is deleted or not.
            </summary>
            <param name="replacedObject">The replaced object.</param>
            <param name="replacingObjects">The replacing objects. Returns an empty list if no objects replacing.</param>
            <returns>True if the specified replaced object is deleted; otherwise, false.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when Unexpected failure while getting replacing objects.</exception>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetNotificationInterfaceNames(System.String)">
            <summary>
            Gets the notification interface names.
            </summary>
            <param name="notificationInterfaces">The notification interfaces.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.FromCOMToSOMDeletePropagation(SP3DPIA.GeometricConstruction.GCOverrideDeletePropagation)">
            <summary>
            Convert the COM GCOverrideDeletePropagation enum values to OverrideDeletePropagationType enum.
            </summary>
            <param name="deletePropagationType">Type of the delete propagation.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetCodelistItemShortDisplayName(System.String,System.Int32)">
            <summary>
            Gets the short display name of the codelist item.
            </summary>
            <param name="codelistTableName">Name of the codelist table.</param>
            <param name="codelistValue">The codelist value.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetInputGUIDynamicInformation(System.String,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Gets the input GUI dynamic information.
            </summary>
            <param name="inputCollectionName">Name of the input collection.</param>
            <param name="isInputShownOnRibbonBar">if set to <c>true</c> [is input shown on ribbon bar].</param>
            <param name="isInputOptional">if set to <c>true</c> [is input optional].</param>
            <param name="isInputEnabled">if set to <c>true</c> [is input enabled].</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GetParameterGUIDynamicInformation(System.String,System.Boolean,Ingr.SP3D.Common.Middle.Position,System.Boolean@,System.Boolean@,System.Boolean@,System.Double@)">
            <summary>
            Gets the parameter GUI dynamic information.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="onMouseMove">if set to <c>true</c> [on mouse move].</param>
            <param name="mousePosition">The mouse position.</param>
            <param name="mouseEventAllowed">if set to <c>true</c> [mouse event allowed].</param>
            <param name="isParameterShownOnRibbonBar">if set to <c>true</c> [is parameter shown on ribbon bar].</param>
            <param name="isParameterEnabled">if set to <c>true</c> [is parameter enabled].</param>
            <param name="onMouseMoveValue">The on mouse move value.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GraphicInputs">
            <summary>
            Gets all the graphic inputs.
            Returns an empty collection if GraphicInput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting graphic inputs.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.ComputedInputs">
            <summary>
            Gets all the computed inputs.
            Returns an empty collection if ComputedInput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting computed inputs.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.GraphicOutputs">
            <summary>
            Gets all the graphic outputs.
            Returns an empty collection if GraphicOutput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting graphic outputs.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.ComputedOutputs">
            <summary>
            Gets all the computed outputs.
            Returns an empty collection if ComputedOutput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting computed outputs.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.Parameters">
            <summary>
            Gets all the parameters.
            Returns an empty collection if Parameter is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting parameters.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.IsRemovedAtCommit">
            <summary>
            Gets the GeometricConstruction behavior information to have understanding that this GeometricConstruction is used 
            for creating other GeometricConstructions and this GeometricConstruction will be deleted at commit.        
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the GeometricConstruction behavior information.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.SelfOutputs">
            <summary>
            Gets the self outputs.
            Returns an empty collection if SelfOutput is not defined in custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the self outputs.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.OccurrenceConnection">
            <summary>
            Returns the GeometricConstruction occurrence connection.
            Returns null if the custom GeometricConstructionDefinition is not initilized.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.Occurrence">
            <summary>
            Gets the GeometricConstruction occurrence.
            Returns null if the custom GeometricConstructionDefinition is not initilized.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.ToDoListMessage">
            <summary>
            Gets or sets the To Do List message.
            Returns null if there is the To Do List message is not created on custom GeometricConstructionDefinition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">Raised when setting a To Do List message from custom geometric construction definition that is not a subclass of GeometricConstructionDefinition.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the To Do List message.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.MigrateHelper">
            <summary>
            Gets or sets the migrate helper.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GeometricConstructionDefinition.COMDefinition">
            <summary>
            Gets or sets the COM definition.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterValue">
            <summary>
            ParameterValue is used by parameter or parameter of input functionality to provide the parameter value.
            </summary>    
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterValue.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterValue"/> class.
            </summary>
            <param name="longDescription">The long description.</param>
            <param name="valueID">The value ID.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterValue.LongDescription">
            <summary>
            Gets the long description of the codelist item.
            It will be unique for each parameter value for a single Parameter or ParameterOfInput defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ParameterValue.ValueID">
            <summary>
            Gets the valueID of the codelist item.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.BoundaryDefinition">
            <summary>
             Boundary Definition class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_BoundaryObject">
            <summary>
            Boundary business object. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_offsetValue">
            <summary>
            Offset in case of members.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_facePosition">
            <summary>
            Port face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_boundaryDefinitionType">
            <summary>
            Boundary definition type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.BoundaryDefinition.#ctor(Ingr.SP3D.Structure.Middle.ProfilePart,Ingr.SP3D.Structure.Middle.PortFacePosition,System.Double)">
            <summary>
            Creates the boundary definition by the given boundary object (ProfilePart) and an offset from its face.
            This is applicable only for slabs.
            </summary>
            <param name="boundary">The profile part as boundary object.</param>
            <param name="portFacePosition">Enumerated value for the port face position.</param>
            <param name="offset">The offset value.</param>
            <example>This is an example of the BoundaryDefinition constructor.
            <code>
            Dim boundaryDefinition As New BoundaryDefinition(memberSystem.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.BoundaryDefinition.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,System.Double)">
            <summary>
            Creates the boundary definition by the given boundary object (topology port or grid plane) and an offset.
            </summary>
            <param name="boundary">The business object as boundary object.</param>
            <param name="offset">The offset value.</param>
            <example>This is an example of the BoundaryDefinition constructor.
            <code>
            Dim boundaryDefinition As New BoundaryDefinition(gridPlane, 0.2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.BoundaryDefinition.#ctor(Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Creates the boundary definition by the given Sketch2dDefinition boundary object.
            </summary>
            <param name="boundary">The Sketch2D boundary object.</param>
            <example>This is an example of the BoundaryDefinition constructor.
            <code>
            Dim boundaryDefinition As New BoundaryDefinition(sketch2dDefinitionBoundary)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.BoundaryObject">
            <summary>
            Gets or sets the Boundary object of the boundary definition. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.Offset">
            <summary>
            Gets or sets the offset of the boundary definition. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.FacePosition">
            <summary>
            Gets or sets the face position of the boundary definition. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.BoundaryDefinitionType">
            <summary>
            Gets the type of the boundary definition.
            </summary>     
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.WallSystem">
            <summary>
            Wrapper for the wall system. This class is the logical container for
            a wall part and run. Surface representation of the wall is obtained by extruding
            the path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Creates a wall system using the Sketch3D path and given wall system part.
             </summary>
             <param name="parentSystem">Parent system under which to create the wall system.</param>
             <param name="crossSection">Cross section of the wall system.</param>
             <param name="wallPart">Type of the wall system.</param>
             <param name="supportPlane">Supporting plane of the wall system.</param>
             <param name="path">Sketch3D path of the wall system.</param>
             <param name="cardinalPoint">Cardinal point of the wall system.</param>
             <param name="reflect">Reflect attribute of the system.</param>
             <param name="height">Height of the wall system.</param>
             <param name="thickness">Thickness of the wall system.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the wall factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Failed to create the wall factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">Unexpected failure occurred while trying to create a WallSystem using Sketch3D.</exception>
             <example>This is an example of how to create a wall system using a Sketch3D path and given wall system part.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 5.0), New GridAxisInputs(0.0, 1.0, 5.0), New GridAxisInputs(0.0, 1.0, 5.0))
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim supportPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
            
             'Create and customize the Sketch3D object here.
             Dim sketch3D As New Sketch3D(plant)
             Dim sketchPoints As New Collection(Of SketchPoint)()
             Dim sketchPoint1 As New SketchPoint(0, 0, 0)
             Dim sketchPoint2 As New SketchPoint(10, 0, 0)
             Dim sketchPoint3 As New SketchPoint(10, 10, 0)
             'Create a line feature between first and second sketch point.
             Dim lineFeature As LineFeature = sketchPoint1.CreateLineFeature(sketchPoint2)
             'Create another line feature between second and third sketch point.
             lineFeature = sketchPoint2.CreateLineFeature(sketchPoint3)
             sketchPoints.Add(oSkPt1)
             sketchPoints.Add(oSkPt2)
             sketchPoints.Add(oSkPt3)
             sketch3D.SetSketchPoints(sketchPoints)
             
             'Get the required wall cross section and wall part from catalog.
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("Clading", "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""), Part)
            
             Dim wallSystem As New WallSystem(structuralSystem, crossSection, part, supportPlane, sketch3D, 3, False, 1.0, 0.1)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String,System.String,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Creates a wall system using a Sketch3D path and given wall system type and composition.
             </summary>
             <param name="parentSystem">Parent system under which to create the wall system.</param>
             <param name="crossSection">Cross section of the wall system.</param>
             <param name="wallType">Type of the wall system.</param>
             <param name="wallComposition">Composition of the wall system.</param>
             <param name="supportPlane">Supporting plane of the wall system.</param>
             <param name="path">Sketch3D path of the wall system.</param>
             <param name="cardinalPoint">Cardinal point of the wall system.</param>
             <param name="reflect">Reflect attribute of the system.</param>
             <param name="height">Height of the wall system.</param>
             <param name="thickness">Thickness of the wall system.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">The objects are not valid.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create wall factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Failed to create the wall factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">Unexpected failure occurred while trying to create a WallSystem using Sketch3D.</exception>
             <example>This is an example of how to create a wall system using a Sketch3D path and given wall system type and composition.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, New GridAxisInputs(0.0, 1.0, 5.0), New GridAxisInputs(0.0, 1.0, 5.0), New GridAxisInputs(0.0, 1.0, 5.0))
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim supportPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
            
             'Create and customize the Sketch3D object here.
             Dim sketch3D As New Sketch3D(plant)
             Dim sketchPoints As New Collection(Of SketchPoint)()
             Dim sketchPoint1 As New SketchPoint(0, 0, 0)
             Dim sketchPoint2 As New SketchPoint(10, 0, 0)
             Dim sketchPoint3 As New SketchPoint(10, 10, 0)
             'Create a line feature between first and second sketch point.
             Dim lineFeature As LineFeature = sketchPoint1.CreateLineFeature(sketchPoint2)
             'Create another line feature between second and third sketch point.
             lineFeature = sketchPoint2.CreateLineFeature(sketchPoint3)
             sketchPoints.Add(oSkPt1)
             sketchPoints.Add(oSkPt2)
             sketchPoints.Add(oSkPt3)
             sketch3D.SetSketchPoints(sketchPoints)
             
             'Get the required wall cross section from catalog.
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             Dim wallSystem As New WallSystem(structuralSystem, crossSection, "Clading", "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4""", supportPlane, sketch3D, 3, False, 1.0, 0.1)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.WallSystem)">
            <summary>
            Creates a wall system using an existing wall system.
            </summary>
            <param name="parentSystem"> The parent system for the new wall.</param>
            <param name="wallSystem">The original wall system whose copy will be created.</param>
            <example>This is an example to create a wall system with an existing wall system.
            <code>
            'Create a wall system which will be copied.
            Dim wallSystemToCopy As WallSystem
            
            Dim wallSystem As New WallSystem(wallSystemToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.RemoveAllBoundaries">
            <summary>
            Removes all boundaries of this wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException">Raised when an unexpected failure occurred while removing all boundaries.</exception>
            <example>Example for the method RemoveAllBoundaries.
            <code>
            Dim wallSystem as WallSystem 'Substitute this line with the actual bounded wall system instance.
            wallSystem.RemoveAllBoundaries()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="portType">A geometrical port type.</param>
            <returns>A read-only collection of IPort objects.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>PortType</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>All = 1</term>
            			<description>All port type.</description>
            		</item>
            		<item>
            			<term>Piping = 2</term>
            			<description>Piping port type.</description>
            		</item>
            		<item>
            			<term>Duct = 3</term>
            			<description>Duct port type.</description>
            		</item>
            		<item>
            			<term>Cable = 4</term>
            			<description>Cable port type.</description>
            		</item>
            		<item>
            			<term>Foundation = 5</term>
            			<description>Foundation port type.</description>
            		</item>
            		<item>
            			<term>Cabletray = 6</term>
            			<description>Cabletray port type.</description>
            		</item>
            		<item>
            			<term>Conduit = 7</term>
            			<description>Conduit port type.</description>
            		</item>
            		<item>
            			<term>Edge = 8</term>
            			<description>Edge port type.</description>
            		</item>
            		<item>
            			<term>Face = 9</term>
            			<description>Face port type.</description>
            		</item>
            		<item>
            			<term>End = 10</term>
            			<description>End port type.</description>
            		</item>
            		<item>
            			<term>Centerline = 11</term>
            			<description>Centerline port type.</description>
            		</item>
            	</list>
            </remarks>
            <example>This is an example of the GetConnectedPorts method.
            <code>
            'oWalPart is a WallPart object from the wall system.
            Dim oConnectedPorts As ReadOnlyCollection(Of IPort)
            oConnectedPorts = oWallPart.GetConnectedPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="portType">A geometrical port type.</param>
            <returns>A read-only collection of IPort objects.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            	<list type="table">
            		<listheader>
            			<term>PortType</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>All = 1</term>
            			<description>All port type.</description>
            		</item>
            		<item>
            			<term>Piping = 2</term>
            			<description>Piping port type.</description>
            		</item>
            		<item>
            			<term>Duct = 3</term>
            			<description>Duct port type.</description>
            		</item>
            		<item>
            			<term>Cable = 4</term>
            			<description>Cable port type.</description>
            		</item>
            		<item>
            			<term>Foundation = 5</term>
            			<description>Foundation port type.</description>
            		</item>
            		<item>
            			<term>Cabletray = 6</term>
            			<description>Cabletray port type.</description>
            		</item>
            		<item>
            			<term>Conduit = 7</term>
            			<description>Conduit port type.</description>
            		</item>
            		<item>
            			<term>Edge = 8</term>
            			<description>Edge port type.</description>
            		</item>
            		<item>
            			<term>Face = 9</term>
            			<description>Face port type.</description>
            		</item>
            		<item>
            			<term>End = 10</term>
            			<description>End port type.</description>
            		</item>
            		<item>
            			<term>Centerline = 11</term>
            			<description>Centerline port type.</description>
            		</item>
            	</list>
            </remarks>
            <example>This is an example of the GetPorts method.
            <code>
            'oWalPart is a WallPart object from the wall system.
            Dim oPorts As ReadOnlyCollection(Of IPort)
            oPorts = oWallPart.GetPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="connectable">A connectable object (IConnectable).</param>
            <param name="connections">A read-only collection of connection objects (IConnection).</param>
            <returns>
            True if the object is connected; otherwise False.
            </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Create a WallSystem object - oWallSys1
            Dim oConnectable As IConnectable
            'Instantiate oConnectable with a connectable object to wall system.
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oWallSys1.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetConnectedObjects">
            <summary>
            Gets the connected objects.
            </summary>
            <returns>
            Read-Only collection of the connected objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetConnectedObjects(System.Type)">
            <summary>
            Gets the connected objects of specific object type.
            </summary>
            <param name="connectedObjectType">Type of the connected object.</param>
            <returns>
            Read-Only collection of specific object type of the connected objects.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry stage.
            </summary>
            <param name="topologyGeometryType">Enumerated value for port geometry type.</param>
            <param name="geometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type and geometry stage.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.oWallSys1.GetPorts(TopologyGeometryType.Face, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="topologyGeometryType">Enumerated value for port geometry type.</param>
            <param name="geometryOperation">Enumerated value for geometry operation.</param>
            <param name="graphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, geometry operation, and the graph position.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, GeometryOperationTypes.Bound, GraphPosition.After)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPorts from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="topologyGeometryType">Enumerated value for port geometry type.</param>
            <param name="topologyContext">Enumerated value for topology context.</param>
            <param name="geometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context, and geometry stage.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, ContextTypes.Base, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPorts from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="topologyGeometryType">Enumerated value for port geometry type.</param>
            <param name="topologyContext">Enumerated value for topology context.</param>
            <param name="geometryOperation">Enumerated value for geometry operation.</param>
            <param name="graphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context, geometry operation, and graph position.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, ContextTypes.Base, GeometryOperationTypes.Bound, GraphPosition.Before)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is for creating a physical connection whose port geometry will be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID which will create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to create a port with the given moniker data in case port is not found.</param>
            <returns>
            Structure port created by the given moniker data.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:System.NotImplementedException">GetPort is not implemented at this time.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.NotImplementedException">IStructConnectable members on WallSystem will be removed in a later release. Instead, use IStructConnectable members on WallPart.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.NotImplementedException">IStructConnectable members on WallSystem will be removed in a later release. Instead, use IStructConnectable members on WallPart.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID while ignoring operator and operation ID for filtering.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">Operator ID for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport and type of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity with the given conditions.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="child"> A child in which to create a parent and child relationship. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">An unexpected failure occurred when the AddSystemChild method is called on WallPart, since it is not supported.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.CreateWallSystem(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
            <summary>
            Creates the wall system.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="crossSection">The cross section.</param>
            <param name="wallType">Type of the wall.</param>
            <param name="wallComposition">The wall composition.</param>
            <param name="supportPlane">The support plane.</param>
            <param name="path">The path.</param>
            <param name="cardinalPoint">The cardinal point.</param>
            <param name="reflect">if set to <c>true</c> [reflect].</param>
            <param name="height">The height.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.SupportPlane">
            <summary>
            Gets or sets the support plane of the wall system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Parts">
            <summary>
            Gets wall parts associated with the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Path">
            <summary>
            Gets or sets the two-dimensional or three-dimensional path of the wall system. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Boundaries">
            <summary>
            Gets or sets the boundaries of the wall system.
            Returns an empty collection if there are no boundaries for this wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundariesException">Raised when an unexpected failure occurred while getting the boundaries.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundariesException">Raised when an unexpected failure occurred while setting the boundaries.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">Raised if the boundary collection has a null element.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">Raised if the boundary collection has duplicate objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException">Raised if the boundary collection count is zero.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Run">
            <summary>
            Returns the wall run associated with the wall system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.ContinuityType">
            <summary>
            Gets or sets the continuity type of the wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.PriorityNumber">
            <summary>
            Gets or sets the priority number of the wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.StructConnectableHelperInstance">
            <summary>
            Gets the struct connectable helper instance.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Ladder">
            <summary>
            Ladder class definition. Behavior of the Ladder class is customized through user
            attributes using generic property access.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates a ladder using a top support, bottom plane, and side reference.
             </summary>
             <param name="parentSystem">The parent system under which a ladder is to be created.</param>
             <param name="part">The ladder catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
             <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when unexpected error occurred during the creation of stair or ladder.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">Raised when the CreateLadder method for the ladder factory object returned null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of how to create a ladder with top support, bottom plane, and side reference.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim xAxis As GridAxis = gridSystem.GetGridAxis(AxisType.X)
             Dim yAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Y) 
            
             'Get the required top support, bottom plane, and side reference.
             Dim topSupport As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(xAxis.GetPlane(5.0))
             Dim bottomPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
             Dim sideReference As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(yAxis.GetPlane(5.0))
            
             'Get the catalog part.
             Dim catalogStructHelper As New CatalogStructHelper() 
             Dim ladderPart As Part = DirectCast(catalogStructHelper.GetPart("LadderA1"), Part) 
            
             Dim ladder As New Ladder(structuralSystem, ladderPart, topSupport, bottomPlane, sideReference) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Creates a ladder using an top support and bottom plane.
             </summary>
             <param name="parentSystem">The parent system under which a ladder is to be created.</param>
             <param name="part">The ladder catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
             <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the crsation of stair or ladder.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">Raised when the CreateLadder method for the ladder factory object returned null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of how to create a ladder with top support and bottom plane.
             <code>
             'Create parent system.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
             
             'Create grid system.
             Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
             Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
             Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            
             Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
             Dim xAxis As GridAxis = gridSystem.GetGridAxis(AxisType.X)
             Dim yAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Y) 
            
             'Get the required top support and bottom plane.
             Dim topSupport As GridLine = DirectCast(zAxis.GetPlane(5.0), GridElevationPlane).CreateGridLine(xAxis.GetPlane(5.0))
             Dim bottomPlane As GridElevationPlane = zAxis.GetPlane(0.0) 
            
             'Get the catalog part.
             Dim catalogStructHelper As New CatalogStructHelper() 
             Dim ladderPart As Part = DirectCast(catalogStructHelper.GetPart("LadderA1"), Part) 
            
             Dim ladder As New Ladder(structuralSystem, ladderPart, topSupport, bottomPlane) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Structure.Middle.Ladder)">
            <summary>
            Creates a ladder using an existing ladder.
            </summary>
            <param name="ladder">The ladder to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Raised when an unexpected error occurred during the creation of stair or ladder.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">Raised when the CreateLadder method for the ladder factory object returned null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of how to create a ladder with an existing ladder.
            <code>
            'Create a ladder which will be copied.
            Dim ladderToCopy As Ladder
            
            Dim ladder As New Ladder(ladderToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses an edge object for top support and side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves 
            that are not allowed.   
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>   
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support and a plane for side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The plane which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and a plane object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferencePlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses a plane for top support and an edge object for side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The plane which provides the top support for the ladder.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes a plane object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportPlane, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support without a side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support
            and a plane object as bottom plane.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.TopSupport">
            <summary>
            Read-only property to get the ladder top support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">Exception raised if an error is encountered while trying to get ladder top support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.SideReference">
            <summary>
            Read-only property to get the ladder side reference.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">Exception raised if an error is encountered while trying to get ladder side reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.BottomSupport">
            <summary>
            Read-only property to get the ladder bottom support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">Exception raised if an error is encountered while trying to get ladder bottom support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Failed to get or set the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Matrix object is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurfaceBase">
            <summary>
            TopologySurfaceBase class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.#ctor(Ingr.SP3D.Structure.Middle.TopologySurface)">
            <summary>
            TopologySurfaceBase constructor.
            </summary>
            <param name="oTopologySurface">TopologySurface object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.GetTopologySurfaceCOMBO">
            <summary>
            Gets the TopologySurface COM BusinessObject.
            </summary>
            <returns>COM Business Object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroid(Ingr.SP3D.Common.Middle.Line3d,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds one or more centroids for this surface.
            </summary>
            <param name="oLine">If not null, it helps locate which centroid to return.</param>
            <param name="colCentroids">Multiple centroids are returned only when a projection can be broken.</param>
            <example>This is an example of finding the centroid for the surface.
            <code>
            Dim centroidCollection As Collection(Of Position) 
            oTopologySurface.Centroid(Nothing, centroidCollection) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.LocatedCentroids(Ingr.SP3D.Common.Middle.Line3d)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="line">Line to locate which centroid will be returned based on which surface face the line locates.</param>
            <returns>Centroid positions which are located with the input line.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroids">
            <summary>
            Finds any centroids for the surface.
            </summary>
            <returns>All centroid positions.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroid">
            <summary>
            Finds the centroid for the surface.
            </summary>
            <returns>Centroid of the whole surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Finds the distance between this surface and an input surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="dMinDist">Output minimum distance.</param>
             <param name="posSrc">Point at minimum distance on this surface.</param>
             <param name="posIn">Point at minimum distance on input surface.</param>
             <example>This is an example of finding the distance between this surface and an input surface.
             <code>
             Dim distance As Double 
             Dim topologySurfacePosition As Position 
             Dim inputTopologySurfacePosition As Position 
            
             oTopologySurface.DistanceBetween(inputTopologySurface, distance, topologySurfacePosition, inputTopologySurfacePosition) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="dMinDist">Output minimum distance.</param>
            <param name="posSrc">Point at minimum distance on this surface.</param>
            <param name="posIn">Point at minimum distance on input curve.</param>
            <example>This is an example of finding the distance between this surface and an input curve.
            <code>
            Dim distance As Double 
            Dim topologySurfacePosition As Position 
            Dim memberSystemPosition As Position 
            
            oTopologySurface.DistanceBetween(DirectCast(memberSystem, ICurve), distance, topologySurfacePosition, memberSystemPosition) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input point.
            </summary>
            <param name="oPoint3d">Input point.</param>
            <param name="dMinDist">Output minimum distance.</param>
            <param name="posSrc">Point at minimum distance on this surface.</param>
            <example>This is an example of finding the distance between this surface and an input point.
            <code>
            Dim distance As Double 
            Dim topologySurfacePosition As Position 
            Dim point As New Point3d(15, 0, 0) 
            
            oTopologySurface.DistanceBetween(point, distance, topologySurfacePosition)         
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and an input surface.
            </summary>
            <param name="oInSurf">Input surface.</param>
            <param name="colCurves">Output collection of curves. Note that this could be a collection of Points3d objects.</param>
            <param name="eCode">GeometryIntersectionType describing type of intersection.</param>
            <example>This is an example of finding the intersect between this surface and an input surface.
            <code>
            Dim iCurveCollection As Collection(Of ICurve) 
            Dim intersectConstants As GeometryIntersectionType 
            oTopologySurface.Intersect(DirectCast(inputTopologySurface, ISurface), iCurveCollection, intersectConstants) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and an input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="colCurves">Output collection of curves. Note that this could be a collection of Points3d objects.</param>
            <param name="eCode">GeometryIntersectionType describing type of intersection.</param>
            <example>This is an example of finding the intersect between this surface and an input curve.
            <code> 
            Dim objCollection As Collection(Of BusinessObject)
            Dim intersectConstants As GeometryIntersectionType 
            oTopologySurface.Intersect(DirectCast(memberSystem, ICurve), objCollection, intersectConstants) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on the surface.
            </summary>
            <param name="posPosition">Point as Position object.</param>
            <returns>If True, the point is on the surface; If False, the point is not on the surface.</returns>
            <example>This is an example of finding whether the input point is on the surface.
            <code>
            Dim point As New Position(3, 0, 0) 
            Dim isPointOn As Boolean = oTopologySurface.IsPointOn(point)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.OutwardNormalAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the outward normal at a given point.
            </summary>
            <param name="pos">Position in which to find the outward normal.</param>
            <returns>Vector - outward normal.</returns>
            <example>This is an example of finding the outward normal at a given point.
            <code>
            Dim vector As Vector = oTopologySurface.OutwardNormalAtPoint(New Position(5, 0, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the surface along the normal vector from the given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the surface along the normal vector from a given point.
            <code>
            Dim pointToProject As New Position(0, 0, 5) 
            Dim projectPoint As Position = oTopologySurface.ProjectPoint(pointToProject) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the surface along the vector from given point.
            </summary>
            <param name="pos">Position to project to the curve.</param>
            <param name="vecProj">Vector to project along. If null,
            then the function projects along vector normal to the curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the surface from a give vector and from a given point.
            <code>
            Dim pointToProject As New Position(0, 0, 5) 
            Dim projectPoint As Position = oTopologySurface.ProjectPoint(pointToProject, New Vector(5, -5, -5)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ScopeNormal(Ingr.SP3D.Common.Middle.SurfaceScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Determines the planarity of the surface and normal.
            </summary>
            <param name="eScope">SurfaceScopeType defining the planarity of the surface.</param>
            <param name="vecNormal">Normal Geom3dSurfaceScopeConstants value, if the surface is planar.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>SurfaceScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Surface scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Surface is planar.</description>
               </item>
               <item>
                   <term>NonPlanar = 2</term>
                   <description>Surface is non-planar.</description>
               </item>        
            </list>
            </remarks>
            <example>This is an example of finding the planarity of the surface and normal.
            <code>
            Dim eScope As SurfaceScopeType 
            Dim vNormal As Vector 
            oTopologySurface.ScopeNormal(eScope, vNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.PositionAtParameters(System.Double,System.Double)">
            <summary>
            Gets the position from the surface at given U, V values.
            </summary>
            <param name="dUParam">U parameter value.</param>
            <param name="dVParam">V parameter value.</param>
            <returns>Position on the surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ParametersAtPosition(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets parameters of the surface at the given position.
            </summary>
            <param name="oPos">Given position.</param>
            <param name="dUParam">U parameter value.</param>
            <param name="dVParam">V parameter value.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.NormalAtParameter(System.Double,System.Double)">
            <summary>
            Gets the normal of the given surafce at the given parameter values.
            </summary>
            <param name="dUPar">U parameter value.</param>
            <param name="dVPar">V parameter value.</param>
            <returns>Normal vector.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ParameterRange(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the parameter range of the given surface.
            </summary>
            <param name="dStartU">U parameter value at start.</param>
            <param name="dStartV">V parameter value at start.</param>
            <param name="dEndU">U parameter value at end.</param>
            <param name="dEndV">V parameter value at end.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.uForm">
            <summary>
            Gets the closure of the surface in U-direction.
            </summary> 
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.vForm">
            <summary>
            Gets the closure of the surface in V-direction.
            </summary>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Area">
            <summary>
            Gets the area of the surface.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberHelper">
            <summary>
            Class to define all the helper classes for member system and member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberPartProperties(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32)">
            <summary>
            Internal method to set the properties on the member part.
            </summary>
            <param name="oMemberPart">Member part on which properties need to be set.</param>
            <param name="oCrossSection">Cross section part.</param>
            <param name="oMaterial">Material part.</param>
            <param name="cardinalPoint">Cardinal point on the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberPartProperties(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Internal method to set the properties on the standalone member part.
            </summary>
            <param name="oMemberPart">Member part on which properties need to be set.</param>
            <param name="oCrossSection">Cross section part.</param>
            <param name="oMaterial">Material part</param>
            <param name="cardinalPoint">Cardinal point on the cross section. </param>
            <param name="memberType"> Type of the member part. </param>
            <param name="angle"> Beta angle (rotation) of the member part.</param>
            <param name="bMirror"> Mirror property for member part cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberSystemProperties(Ingr.SP3D.Structure.Middle.MemberSystem,System.Int32,System.Double,System.Boolean)">
            <summary>
            Internal method to set the properties on the member system.
            </summary>
            <param name="oMemberSystem"> Member system on which properties need to be set.</param>
            <param name="memberType"> Type of the member part. </param>        
            <param name="angle"> Beta angle (rotation) of the member part.</param>
            <param name="bMirror"> Mirror property for member part cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetRelatedObjectsFromFrameConnection(Ingr.SP3D.SPSMembers.ISPSFrameConnection,System.Object@,System.Object@)">
            <summary>
            Gets the related objects from the frame connection.
            </summary>
            <param name="oFrameConnection">ISPSFrameConnection</param>
            <param name="oRelatedObj1">Object 1</param>
            <param name="oRelatedObj2">Object 2</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsBuiltUpSection(Ingr.SP3D.ReferenceData.Middle.CrossSection)">
            <summary>
            Checks to see if a section is built-up.
            </summary>
            <param name="crossSection">CrossSection</param>
            <returns> True if the section is built-up, False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsRelatedObjPosition(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks to see if a related object is a position object (FC/Point/Position).
            </summary>
            <param name="obj">BusinessObject</param>
            <returns> True if object is a posiiton object, False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetPositionFromRelObj(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets position from a related object (FC/Point).
            </summary>
            <param name="oRelatedObj">BusinessObject</param>
            <returns> Position of the object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsGridConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a GridLine.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsSurfaceConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a surface.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a member.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsPositionConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a position.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsOverConstrainted(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks if the collection contains both point type objects, if so raise an Over Constrainted Exception
            i.e., Point and Point,Point and FC,FC and Point,FC and FC
            </summary>
            <param name="oRelatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetPositionWithRelatedObjects(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Method to calculate the end position from the related objects for the frame connection.
            This position will be used to set the logical axis of the member.
            </summary>
            <param name="oRelatedObj1"> First related object of the frame connection.</param>
            <param name="oRelatedObj2"> Second related object of the frame connection.</param>
            <returns> Position resulting from the related objects if a successful intersection is found, null otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberTypeValid(System.Int32)">
            <summary>
            Checks whether the member type set by the user is valid; i.e., within the member type codelist values.
            </summary>
            <param name="memberType">String for member type.</param>
            <returns>Boolean which indicates whether the input is valid or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemberTypeCodeList(System.Int32)">
            <summary>
            
            </summary>
            <param name="memberType"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberTypeCategoryValid(System.Int32)">
            <summary>
            Checks whether the member type set by the user is valid; i.e., within the member type codelist values.
            </summary>
            <param name="memberTypeCategory">The member type category.</param>
            <returns>
            	True if the input is valid; otherwise, False.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemberTypeCategoryCodeList(System.Int32)">
            <summary>
            Gets the MemberTypeCategory codelist value.
            </summary>
            <param name="memberTypeCategory">The MemberTypeCategory.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemTypeCodeListInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemTypeCategoryCodeListInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsCardinalPointValid(System.Int32)">
            <summary>
            Checks whether the cardinal point is valid; i.e., within the cardinal point codelist values.
            </summary>
            <param name="cardinalPoint">Integer cardinal point.</param>
            <returns>Boolean</returns>
            <example>This is an example of the IsCardinalPointValid method.
            <code>
            Dim IsValidCardinalPoint As Boolean = MemberHelper.IsCardinalPointValid(5)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetParentTypeCategory(System.Int32)">
            <summary>
            Gets the parent type category for the given member type value.
            </summary>
            <param name="memberType">The member type codelist value.</param>
            <returns>The parent MemberTypeCategory codelist value.</returns>
            <example>
            <code>
            Dim memberType As Integer = CInt(Type.Beam) 
            Dim parentTypeCategory As Integer = MemberHelper.GetParentTypeCategory(memberType)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetChildTypes(System.Int32)">
            <summary>
            Gets the collection of member type values for the given member type category.
            </summary>
            <param name="typeCategory">The member type category codelist value.</param>
            <returns>Collection of member type values for the given member type category.</returns>
            <example>
            <code>
            Dim typeCategory As Integer = CInt(TypeCategory.Beam) 
            Dim childTypeColl As ReadOnlyCollection(Of Integer) = MemberHelper.GetChildTypes(typeCategory)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper">
            <summary>
            Helper class for IPartSelection implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates a new instance of the <see cref="T:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper"/> class.
            </summary>
            <param name="smartOccurrence">The smart occurrence.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetAllowablePartsForCurrentSelection">
            <summary>
            Gets all the allowable parts for the current selection.
            </summary>
            <returns>ReadOnly Collection of valid parts based on the current selection rule.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetAllowablePartsForCurrentSelection(System.Boolean)">
            <summary>
            Gets the allowable parts or part for the current selection.
            </summary>
            <param name="returnFirstAvailablePart">if set to <c>true</c> [return first available part].</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException"></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetSelectionRules">
            <summary>
            Gets the selection rules based on the current selection
            </summary>
            <returns>Selection rules collection of type SP3DPIA.SmartOccurrence.IJDObjectCollection.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetCurrentRootSelectionObject">
            <summary>
            Gets the current root selection object.
            </summary>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised if there is an error while getting the RootSelectionObject.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetSelectionInterfaceName(System.String,Ingr.SP3D.SmartPartDef.IJSmartClass@)">
            <summary>
            Gets the name of the selection interface.
            </summary>
            <param name="question">The question.</param>
            <param name="comSmartClass">The COM smart class.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve selection rule interface for part class.
            <para>Raised when unable to retrieve parent part class from part class.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.SetSmartOccurrenceUserType(SP3DPIA.SmartOccurrence.IJSmartOccurrence,Ingr.SP3D.SmartPartDef.IJSmartItem,Ingr.SP3D.SmartPartDef.IJSmartClass)">
            <summary>
            Sets the user type on the smart occurrence.
            </summary>
            <param name="comSmartOccurrence">The COM smart occurrence.</param>
            <param name="smartItem">The smart item.</param>
            <param name="inputItemSmartClass">The input item smart class.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetSmartItem">
            <summary>
            Gets the smart item object. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetPartFromSmartItem(System.Object)">
            <summary>
            Get the part from the smart item.
            </summary>
            <param name="smartItem"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the smart occurrence starting with the given root selection or part. 
            The root selector is set to the catalog item given by the input string.
            </summary>
            <param name="rootSelectorOrPart">The root selector or part name in the catalog.</param>
            <returns>If the input value is a part name the return value is the same part.  If the input value is a part class that has an associated selection rule, 
            the return value is the first part selected by the selection rule.  If the input value is an empty string, the return value is the first part selected by 
            the selection rule based on the object’s current root selector.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the rootSelectorOrPart argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when an unexpected error occurred while executing the selection rule.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">Raised when unable to find a valid part under the given root selection.
            An invalid part is a part which is not a child of the root smart class hierarchy.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetAvailableSelections(System.String)">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the given part class level. These choices are based on selection made by the selector rule according to the ProgID specified on the part class in the catalog. 
            Value at index 0 is the current selection.
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <param name="partClassName">Name of the part class whose selections are needed.</param>
            <returns>Read-only collection of available choices for the part class.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetAvailableSelections">
            <summary>
            Returns the available choices of catalog parts or leaf part classes at the parent part class level. These choices are based on selection made by the selector rule according to the ProgID specified on the parent part class in the catalog.
            Value at index 0 is the current selection. 
            Returns an empty collection if there are no selection rule choices.
            </summary>
            <returns>Returns the read-only string collection of selections.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">Raised when an unexpected COM failure occurs while retrieving the selection rule results.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Raised when a failure occurs executing the selection rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetSelectionRuleAnswer(System.String)">
            <summary>
            Returns the property value for the first question that matches the provided question name.
            Can be null when question can not be found on any of the related selection rules.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>Returned property value for the indicated selection question.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.IsSelectionQuestionOverridden(System.String)">
            <summary>
            Checks whether the given selection question is overridden by user or controlled by rule.
            If multiple part classes have the selector question, the first class that matches the given question name is used, starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <returns>True if the selection rule question is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.OverrideSelectionQuestion(System.String,System.Boolean)">
            <summary>        
            Overrides the given selection question. 
            If multiple part classes have the selector question, the first class that matches the given question name is used, starting from the current part class up the selection hierarchy to the root selector class.
            </summary>
            <param name="question">Name of the question.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">Raised when the question does not exist on any part class on this part's selection hierarchy.
                                                 <para>Raised when unable to retrieve the selection rule interface for this part's selection hierarchy.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unable to retrieve the selection rule interface for the part class.
                                               <para>Raised when unable to retrieve the parent part class from the part class.</para></exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.IsParameterOverridden(System.String)">
            <summary>
            Checks whether the given parameter is overridden by the user or controlled by rule.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>True if the parameter is overridden; otherwise False.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.OverrideParameter(System.String,System.Boolean)">
            <summary>
            Overrides the parameter rule for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <param name="overrideFlag">The override rule flag.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.GetParameterValue(System.String)">
            <summary>
            Returns the parameter rule value for this particular part.
            </summary>
            <param name="parameter">Name of the parameter.</param>
            <returns>Parameter's value.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.SetParameterValue(Ingr.SP3D.Common.Middle.PropertyValue)">
            <summary>
            Sets the parameter rule value for this particular part.
            </summary>
            <param name="value">The new value for the parameter.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">Raised if an error occurs while retreiving the parameter rule interface.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">Raised when the parameter does not exist on this part's parameter rule.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.PartSelectionInstance">
            <summary>
            Gets the part selection instance.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.PartClassType">
            <summary>
            Gets or sets the type of the part class.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.DBConnection">
            <summary>
            Gets or sets the model DB connection.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.Part">
            <summary>
            Gets or sets the definition or part on the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Raised when an unexpected error occurred while getting the part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when an unexpected error occurred while setting the part.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Helpers.PartSelectionHelper.PartName">
            <summary>
            Gets or sets the definition or part by name on the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Raised when an unexpected error occurred while getting the part name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when a part is not found with the given part name in the catalog.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySolid">
            <summary>
            Provides generalization of all entities supporting geometric construction topology solid-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySolid.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySolid.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction topology solid occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologySolid.</para></exception>
            <example>This is an example of how to create a transient geometric construction topology solid occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "SolidBySurfaces"
            
            Dim topologySolid As New TopologySolid(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySolid.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction topology solid occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction topology solid.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when unexpected failure occurred while creating the geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologySolid.</para></exception>
            <example>This is an example of how to create a persistent geometric construction topology solid occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "SolidBy2Planes"
            
            Dim topologySolid As New TopologySolid(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicOutputAttribute">
            <summary>
            GraphicOutputAttribute is followed by GraphicOutput field variables in a custom GeometricConstructionDefinition class.
            This is used to fully describe a GraphicOutput in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicOutputAttribute.#ctor(Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType)">
            <summary>
            Initializes a new instance of a GraphicOutputAttribute class with the given output type.
            </summary>
            <param name="outputType">Type of the output.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the OutputType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if GraphicOutputAttribute is not found on GraphicOutput.
                                                           <para>Raised if there is more than one GraphicOutputAttribute found on GraphicOutput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicOutput is not preceded by the GraphicOutputAttribute.</exception>
            <example>This is an example of using GraphicOutputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic output
                [GraphicOutput(OutputType.CoordinateSystem)]
                public GraphicOutput localCoordinateSystem;     
            }
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicOutputAttribute.#ctor(Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType,System.String)">
            <summary>
            Initializes a new instance of a GraphicOutputAttribute class with the given output type and graphic output collection name.
            </summary>
            <param name="outputType">Type of the output.</param>
            <param name="collectionName">The graphic output collection name. It must be unique for each graphic output parameter defined in a custom GeometricConstructionDefinition class.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when the OutputType enumerator is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">Raised if GraphicOutputAttribute is not found on GraphicOutput.
                                                           <para>Raised if there is more than one GraphicOutputAttribute found on GraphicOutput.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">Raised if the GraphicOutput is not preceded by the GraphicOutputAttribute.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the graphic output collection name is not unique for each graphic output defined in custom GeometricConstructionDefinition.</exception>
            <example>This is an example of using GraphicOutputAttribute.
            <code>
            public class MyCustomGCDefinition : GeometricConstructionDefinition
            {
                //define mandatory graphic output
                [GraphicOutput(OutputType.CoordinateSystem, "LocalCoordinateSystem")]
                public GraphicOutput localCoordinateSystem;     
            }
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicOutputAttribute.OutputType">
            <summary>
            Gets or sets the output type of the graphic output.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Services.GraphicOutputAttribute.CollectionName">
            <summary>
            Gets or sets the graphic output collection name.
            This property has been accessed from the GeometricConstructionDefinitionWrapper, any change to signature need to handle in GCDefinitionWrapper also.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d">
            <summary>
            Provides generalization of all entities supporting geometric construction line string-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction LineString3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type LineString3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction LineString3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "LineStringByPoints"
            
            Dim lineString3d As New LineString3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction LineString3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction LineString3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type LineString3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction LineString3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "LineStringByPoints"
            
            Dim lineString3d As New LineString3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.AddPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Adds a point to the end.
            </summary>
            <param name="vertex">Position vertex.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while adding a point.</exception>
            <example>This is an example of the AddPoint method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.        
            lineString3d.AddPoint(New Position(1.0, 2.0, 1.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.GetPoint(System.Int32,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets a particular point.
            </summary>
            <param name="index">Indexing starts at 1.</param>
            <param name="vertex">Position vertex.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the index is not between 1 and the number of points.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting a point.</exception>
            <example>This is an example of the GetPoint method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.   
            DIm vertex As Position
            lineString3d.GetPoint(1, vertex)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.GetPoints(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Gets all the points.
            </summary>
            <param name="points">Collection of Position objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the points.</exception>
            <example>This is an example of the GetPoints method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.   
            DIm points As Collection(Of Position) = Nothing
            lineString3d.GetPoints(points)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.InsertPoint(System.Int32,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Inserts a particular point.
            </summary>
            <param name="index">Indexing starts at 1.</param>
            <param name="vertex">Position vertex.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if index is not between 1 and the number of points.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while inserting a particular point.</exception>
            <example>This is an example of the InsertPoint method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.        
            lineString3d.InsertPoint(1, New Position(1.0, 2.0, 3.0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.RemovePoint(System.Int32)">
            <summary>
            Removes a point at a particular index.
            </summary>
            <param name="index">Indexing starts at 1.</param>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the index is not between 1 and number of points.
                                                     <para>Raised if the point count is less than three.</para></exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while removing the point at the index.</exception>
            <example>This is an example of the RemovePoint method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.        
            lineString3d.RemovePoint(1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.SetPoint(System.Int32,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets a particular point.
            </summary>
            <param name="index">Indexing starts at 1.</param>
            <param name="vertex">Position vertex.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the index is not between 1 and number of points.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting the point.</exception>
            <example>This is an example of the SetPoint method.
            <code>
            Dim lineString3d as LineString3d 'Substitute this line with the actual geometric construction line string instance.        
            lineString3d.SetPoint(1, New Position(1.0, 2.0, 3.0))
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.IsClosed">
            <summary>
            Gets or sets this line string's closure.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the closure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.LineString3d.PointCount">
            <summary>
            Gets this line string's number of points.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the point count.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SweepOptions">
            <summary>
            Options for creation of surfaces by sweeping a cross section along a path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.CreateCaps">
            <summary>
            Create additional surfaces on the end caps.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.BreakCrossSection">
            <summary>
            Create additional surfaces by breaking the cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.BreakPath">
            <summary>
            Create additional surfaces by breaking the sweep path.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SweepOrientation">
            <summary>
            Options for orienting projected surfaces when sweeping a cross section along a path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOrientation.NormalToSurface">
            <summary>
            Sweep in the normal to the surface direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOrientation.NormalAlongZ">
            <summary>
            Sweep in Z-axis direction.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices">
            <summary>
            Cross-section services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path with the given orientation for the end cap surfaces. 
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross-section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="posStart">The start position for vector at cap surface at start.</param>
            <param name="startNormal">The normal for cap surface at start.</param>
            <param name="posEnd">The end position for the vector at the cap surface at end.</param>
            <param name="endNormal">The normal for the cap surface at the end.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from the cross section with the given orientation for the end cap surfaces.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along some given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            Dim start As New Position(0, 0, 0), end As New Position(1, 0, 0)
            Dim startNormal As New Vector(0.0, 1.0, 0.0)
            Dim endNormal As New Vector(0.0, 0.0, 1.0)
            Dim line As New Line3d(connection, start, end)
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                line, 4, False, 0, start, startNormal, end, endNormal, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path with the given orientation for the end cap surfaces. 
            </summary>
            <param name="crossSection">The cross-section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="posStart">The start position for vector at cap surface at start.</param>
            <param name="startNormal">The normal for cap surface at start.</param>
            <param name="posEnd">The end position for the vector at the cap surface at end.</param>
            <param name="endNormal">The normal for the cap surface at the end.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from the cross section with the given orientation for the end cap surfaces.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along some given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            Dim start As New Position(0, 0, 0), end As New Position(1, 0, 0)
            Dim startNormal As New Vector(0.0, 1.0, 0.0)
            Dim endNormal As New Vector(0.0, 0.0, 1.0)
            Dim line As New Line3d(connection, start, end)
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection( crossSection, _ 
                                                line, 4, False, 0, start, startNormal, end, endNormal, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path. 
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creating surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from cross section with the given orientation.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along a given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path.
            Dim line As Line3d
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                                                                            line, 4, False, 0, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path. 
            </summary>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creating surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from a cross section with the given orientation.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along a given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path.
            Dim line As Line3d
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection( crossSection, _ 
                                                                                                            line, 4, False, 0, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions,Ingr.SP3D.Structure.Middle.Services.SweepOrientation)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path with the option for orienting projected surfaces.
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <param name="sweepOrientation">Options for orienting projected surfaces when sweeping a cross section along a path.</param>
            <returns>Projection surfaces from a cross section with the given orientation.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions or CrossSectionOrientation enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along a given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path.
            Dim projectionPath As ComplexString3d
            Dim orientation As CrossSectionOrientation = CrossSectionOrientation.Perpendicular
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                projectionPath, 4, False, 0, sweepOptions, orientation)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions,Ingr.SP3D.Structure.Middle.Services.SweepOrientation)">
            <summary>
            Gets the projection surfaces from a cross section along the projection path with the option for orienting projected surfaces.
            </summary>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <param name="sweepOrientation">Options for orienting projected surfaces when sweeping a cross section along a path.</param>
            <returns>Projection surfaces from a cross section with the given orientation.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions or CrossSectionOrientation enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along a given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path.
            Dim projectionPath As ComplexString3d
            Dim orientation As CrossSectionOrientation = CrossSectionOrientation.Perpendicular
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection( crossSection, _ 
                                                projectionPath, 4, False, 0, sweepOptions, orientation)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointDelta(Ingr.SP3D.Structure.Middle.ProfilePart,Ingr.SP3D.Common.Middle.Position,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the distance of the cardinal point from another cardinal point in U-V space at the given position. 
            Currently this method is only supported for member part.
            </summary>
            <param name="profilePart">Profile part.</param>
            <param name="posAlong">Position along the profile part.</param>
            <param name="cardinalPointIndexFrom">Cardinal point index from which to measure.</param>
            <param name="cardinalPointIndexTo">Cardinal point index to which to measure.</param>
            <param name="uDistance">Double as U-distance.</param>
            <param name="vDistance">Double as V-distance.</param>       
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.NotImplementedException">Raised if this method is not accessed with member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">Raised when an unexpected error occurred while getting the distance of the cardinal point from another cardinal point in u-v space at the given position along the profile part.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointDelta(Ingr.SP3D.Structure.Middle.ProfilePart,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the distance of the cardinal point from another cardinal point in U-V space. 
            Currently this method is only supported for member part.
            </summary>
            <param name="profilePart">Profile part.</param>
            <param name="cardinalPointIndexFrom">Cardinal point index from which to measure.</param>
            <param name="cardinalPointIndexTo">Cardinal point index to which to measure.</param>
            <param name="uDistance">Double as U-distance.</param>
            <param name="vDistance">Double as V-distance.</param>       
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.NotImplementedException">Raised if this method is not accessed with member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">Raised when an unexpected error occurred while getting the distance of the cardinal point from another cardinal point in u-v space.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.IsValidMemberCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String@)">
            <summary>
            Determines whether the given cross section is valid for a member.
            </summary>
            <param name="crosssection">CrossSection object.</param>
            <param name="errorMessage">Returns an error message if the cross section is not valid.</param>
            <returns>
            	True if the specified cross section is valid; otherwise, False.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.DoesSymFileExist(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String@)">
            <summary>
            Checks whether a symbol (*.sym) file exists for the given cross-section object in the symbol share and also whether the user has access to it.
            </summary>
            <param name="crossSection">Cross-section object.</param>
            <param name="symFileName">Symbol (*.sym) file full path, if it exists; otherwise an empty string.</param>
            <returns>
            True if the symbol (*.sym) file exists and the user has access to it; otherwise False.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetDefinitionParametersException">Raised when an enexpected error occurred while getting the definition parameter from a cross section.</exception>
            <example>Example code for using this method.
            <code>
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W10X12")
            Dim crossSectionServices As New CrossSectionServices
            Dim symFile As String = String.Empty
            Dim symFileExists As Boolean = crossSectionServices.DoesSymFileExist(crossSection, symFile)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointOffset(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the cardinal point offset along the local X-axis and Y-axis in 2d space, for the given cross section.
            </summary>
            <param name="crossSection">The cross section.</param>
            <param name="cardinalPoint">The cardinal point.</param>
            <param name="cardinalPointOffsetX">The cardinal point offset along X-axis.</param>
            <param name="cardinalPointOffsetY">The cardinal point offset along Y-axis.</param>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException">Raised when an unexpected failure occurred while getting the cardinal point offsets.                                                     
                                                                <para>Raised when an unexpected failure occurred while trying to place a cross-section occurrence in the model.</para></exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FailedToAccessOrMissingSymFileException">Raised if the .sym file associated with the given cross section is missing or not accessible on the symbol share.</exception>
            <example>Example code for using this method.
            <code>
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection("AISC-LRFD-3.1", "W10X12")
            Dim crossSectionServices As New CrossSectionServices
            Dim cardinalPoint As Integer = 5
            Dim cardinalPointOffsetX#, cardinalPointOffsetY#
            crossSectionServices.GetCardinalPointOffset(crossSection, cardinalPoint, cardinalPointOffsetX, cardinalPointOffsetY)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetBoundedCircleFromCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Int32,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,System.Double)">
            <summary>
            Gets a circle bounding the cross section in a global coordinate system centered and oriented with the given inputs.
            </summary>
            <param name="crossSection">Catalog cross section object to be used for creating the bounded circle.</param>
            <param name="cardinalPoint">Cardinal point on this cross section about which the occurrence is placed.</param>
            <param name="positionAtCardinalPoint">Position at the cardinal point.</param>
            <param name="normal">Normal of the circle.</param>
            <param name="clearance">Clearance required from the extreme edges of the cross section. It is added directly to the radius after calculating from the cross section.</param>
            <returns>Bounded circle.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointDelta(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the distance of the cardinal point from another cardinal point in U-V space at the given position.
            </summary>
            <param name="crossSection">Cross section object.</param>
            <param name="cardinalPointIndexFrom">Cardinal point index from which to measure.</param>
            <param name="cardinalPointIndexTo">Cardinal point index to which to measure.</param>
            <param name="uDistance">Offset distance in u-direction.</param>
            <param name="vDistance">Offset distance in v-direction.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetMemberStructCrossSection(Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Method to get the member struct cross-section.
            </summary>
            <param name="memberPart">Member part.</param>
            <returns>The cross section of the member part as object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">Raised when an unexpected error occurred while getting the cross section.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectedSurfaces(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,System.Double[],System.Double[],Ingr.SP3D.Structure.Middle.Services.SweepOptions,Ingr.SP3D.Structure.Middle.Services.SweepOrientation)">
            <summary>
            Gets the projection surfaces from cross section.
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross-section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to True on the profile, mirrors the cross section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="startPositionNormal">The start position and normal for the vector at cap surface at the start.</param>
            <param name="endPositionNormal">The end position and normal for the vector at the cap surface at end.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <param name="sweepOrientation">Options for orienting projected surfaces when sweeping a cross section along a path.</param>
            <returns>Surfaces projected along the given trace curve.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if an argument is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions or CrossSectionOrientation enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from a cross section along a given projection path.</exception>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d">
            <summary>
            Provides generalization of all entities supporting geometric construction arc-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction Arc3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Arc3d.</para></exception>        
            <example>This is an example of how to create a transient geometric construction Arc3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "ArcByCenter"
            
            Dim arc3d As New Arc3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction Arc3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction Arc3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type Arc3d.</para></exception>        
            <example>This is an example of how to create a persistent geometric construction Arc3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "ArcByPoints"
            
            Dim arc3d As New Arc3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.Center">
            <summary>
            Gets or sets the center of this geometric construction Arc3d.
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the center.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.Circumference">
            <summary>
            Gets the circumference of this geometric construction Arc3d.        
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the circumference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.EndPoint">
            <summary>
            Gets or sets the end point of this geometric construction Arc3d. 
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if end point is equal to start point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the end point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.MajorAxis">
            <summary>
            Gets or sets the major axis of this geometric construction Arc3d. 
            Returns an immutable vector.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if MajorAxis length is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the major axis.</exception>                
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.Normal">
            <summary>
            Gets or sets the normal of this geometric construction Arc3d. 
            Returns an immutable vector.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the normal length is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the normal.</exception>                
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.Radius">
            <summary>
            Gets or sets the radius of this geometric construction Arc3d.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the radius is zero.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the radius.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.StartAngle">
            <summary>
            Gets or sets the start angle of this geometric construction Arc3d.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the start angle.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.StartPoint">
            <summary>
            Gets or sets the start point of this geometric construction Arc3d. 
            Returns an immutable position.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if start point is equal to end point.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the start point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.Arc3d.SweepAngle">
            <summary>
            Gets or sets the sweep angle of this geometric construction Arc3d.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting or setting the sweep angle.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.ManufacturableHelper.Manufacture">
            <summary>
            Returns a reference to the manufactured object associated
            with the part on which this method is called.
            If this part is not already manufactured, the implementation
            must manufacture it and return the manufactured object.
            </summary>
            <returns>
            A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to
            either ManufacturingPlate or ManufacturingProfile)
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Helpers.ManufacturableHelper.Manufacture(System.String,System.String)">
            <summary>
            Returns a reference to the manufactured object associated
            with the part on which this method is called.
            If this part is not already manufactured, the implementation
            must manufacture it with the input process and marking settings
            and return the manufactured object.
            If the part is already manufactured, the implementation must
            ensure that the new settings are applied on the manufactured part.
            </summary>
            <param name="processSettings">The process settings.</param>
            <param name="markingSettings">The marking settings.</param>
            <returns>
            A reference to the manufactured object returned as a BusinessObject
            (the caller would most likely need to cast it to
            either ManufacturingPlate or ManufacturingProfile)
            </returns>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput">
            <summary>
            ComputedOutput class is used to declare computed output field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the ComputedOutputAttribute.
            The lifetime of a ComputedOutput is controlled inside the Evaluate method.
            The ComputedOutput can exist before the GeometricConstructionAssembly gets created and the GeometricConstructionAssembly takes control of some of its interfaces described in the array of compute notification interface names. 
            The ComputedOutput can be created by the GeometricConstructionAssembly itself.
            When the GeometricConstructionAssembly gets deleted, the ComputedOutput can stay alive or get deleted depending upon the override delete propagation value.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput.#ctor(System.String,Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput"/> class.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="overrideDeletePropagationType">Type of the override delete propagation.</param>
            <param name="notificationInterfaceNames">The notification interface names.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput.CollectionName">
            <summary>
            Gets the computed output collection name.
            It will be unique for each computed output defined in a custom GeometricConstructionDefinition class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput.NotificationInterfaceNames">
            <summary>
            Gets the compute notification interface names for this computed output.
            Returns null if there are no compute notification interface names defined for this computed output.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComputedOutput.OverrideDeletePropagationType">
            <summary>
            Gets the type of the override delete propagation for this computed output.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CustomInput">
            <summary>
            Transient class that holds all the common inputs that are required to set the input on a symbol.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.CustomInput.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,System.Int32,System.String,System.String)">
            <summary>
            Creates a custom input object to set the input on a symbol.
            </summary>
            <param name="inputObject">The input business object to be set as input.</param>
            <param name="index">The index to which the input will be set.</param>
            <param name="interfaceNameOrID">The interface name or ID used to set the input object.</param>
            <param name="roleName">Name of the role on origin or destination of a relation.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the index is not greater than zero.</exception>
            <example>This is an example of how to create custom input object.
            <code>
            Dim memberPart As MemberPart 'Substitute this line with the actual member part instance.
            Dim inputObject As BusinessObject = memberPart
            Dim index As Integer = 1
            Dim interfaceName As String = "ISPSMemberPartGeometry"
            Dim roleName As String = "RefColl"
            Dim customInput As New CustomInput(inputObject, index, interfaceName, roleName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomInput.InputObject">
            <summary>
            Gets the input business object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomInput.Index">
            <summary>
            Gets the index.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomInput.InterfaceNameOrID">
            <summary>
            Gets the interface name or ID.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.CustomInput.RoleName">
            <summary>
            Gets the name of the role on origin or destination of a relation.
            </summary>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IAmbiguity">
            <summary>
            IAmbiguity interface definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.AmbiguousPatch})">
            <summary>
            Returns true if the ambiguity is resolved with the collection of ambiguous solutions provided by the user.
            </summary>
            <param name="SolutionsToKeep">Collection of AmbiguousPatch objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position})">
            <summary>
            Returns true if the ambiguity is resolved with the collection of points provided by the user.
            </summary>
            <param name="SolutionsToKeep">Collection of Position objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(Ingr.SP3D.Structure.Middle.AmbiguousPatch)">
            <summary>
            Returns true if the ambiguity is resolved with an ambiguous solution provided by the user.
            </summary>
            <param name="SolutionToKeep">AmbiguousPatch object.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Returns true if the ambiguity is resolved with a point solution provided by the user.
            </summary>
            <param name="SolutionToKeep">Position objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.AmbiguousPatches">
            <summary>
            Gets the ambiguous solutions. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.IsAmbiguous">
            <summary>
            Returns true if the solution is ambiguous.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.UnusedBoundaries">
            <summary>
            Returns the boundaries that are not used by the current ambiguity configuration.
            </summary>
            <returns>ReadOnlyCollection of BusinessObjects.</returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICustomEdgeMappingRule">
            <summary>
            Implemented by services that return end cut mapping information.  
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomEdgeMappingRule.GetEdgeMapping(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort,System.Int32@,System.Boolean@)">
            <summary>
            Gets the edge mapping.
            </summary>
            <param name="boundingMember">The bounding member.</param>
            <param name="boundedMember">The bounded member.</param>
            <param name="sectionAlias">The section alias.</param>
            <param name="penetratesWeb">If set to True, it penetrates the web.</param>
            <returns>Edge cut mapping information.</returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule">
            <summary>
            Implemented by services that return end slot mapping information.  
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionAlias(System.Object,System.Object,System.String@,System.Object@,System.Object@,System.Object@,System.Object@)">
            <summary>
            Gets the SectionAlias that emulates the standard profile for the Plate/Plate or Plate/Stiffener combination. 
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
            <param name="sectionAlias">The section alias; e.g., "BUT","FB".</param>
            <param name="web">A web of the penetrating object.</param>
            <param name="flange">A flange of the penetrating object.</param>
            <param name="secondWeb">Second web of the penetrating object for future use; e.g., W type, Box type.</param>
            <param name="secondFlange">Second flange of the penetrating object for future use; e.g., Box type.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetEmulatedPorts(System.Object,System.Object,Ingr.SP3D.Common.Middle.IPort@)">
            <summary>
            Get the ports on the penetrating parts depending on the SectionAlias with SectionFaceType; e.g., Web_Left.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
            <param name="basePlatePort">The port of the base plate for the slot and collar.</param>
            <returns>The ports on penetrating parts. Ports that do not apply are omitted.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSketchingPlane(System.Object,System.Object,Ingr.SP3D.Common.Middle.IPoint@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Gets the sketching plane for creating the slot.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
            <param name="origin">Origin point.</param>
            <param name="uDirection">U-direction vector of the plane.</param>
            <param name="vDirection">V-direction vector of the plane.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionDimensions(System.Object,System.Object,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the cross section dimensions of the penetrating section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
            <param name="depth">The depth of the penetrating cross section alias.</param>
            <param name="width">The width of the penetrating cross section alias.</param>
            <param name="webThickness">The web thickness of the penetrating cross section alias.</param>
            <param name="flangeThickness">The flange thickness of the penetrating cross section alias.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionDepth(System.Object,System.Object)">
            <summary>
            Returns the depth of the penetrating cross section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionWidth(System.Object,System.Object)">
            <summary>
            Returns the width of the penetrating cross section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionWebThickness(System.Object,System.Object)">
            <summary>
            Returns the web thickness of the penetrating cross section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionFlangeThickness(System.Object,System.Object)">
            <summary>
            Returns the flange thickness of the penetrating cross section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomSlotMappingRule.GetSectionFlangeOffset(System.Object,System.Object)">
            <summary>
            Returns the flange offset of the penetrating cross section alias.
            </summary>
            <param name="penetratingPart">The penetrating object.</param>
            <param name="penetratedPart">The penetrated object.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICustomOutputGrouping">
            <summary>
            Implemented by services to return information about a business object's components.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomOutputGrouping.GetComponents(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Returns components of a business object.
            </summary>
            <param name="assemblyObject">The business object whose components are needed.</param>
            <returns>Components of the business object.</returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">
            <summary>
            Raised when calling routines do not have a proper parent system object as an argument.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException.#ctor(System.String)">
            <summary>
             Instantiates when calling routines do not have a proper parent system object as an argument.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">
            <summary>
            Raised when a factory fails to initialize.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException.#ctor(System.String)">
            <summary>
             Instantiates when creation of a factory object fails.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException.#ctor(System.String,System.Exception)">
            <summary>
             Instantiates when creation of a factory object fails.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception. </param>
            <param name="e">Inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">
            <summary>
            Raised when an invalid argument is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException.#ctor(System.String)">
             <summary>
            Instantiates when an invalid argument is used. 
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">
            <summary>
            Raised when the given objects cannot properly constrain an object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints.#ctor(System.String)">
             <summary>
            Instantiates when the objects fail to get valid output. 
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException">
            <summary>
            Exception raised if an unsupported operation is attempted on a structure object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException.#ctor(System.String)">
            <summary>
            Instantiates when an unsupported operation is attempted on a structure object.
            </summary>
            <param name="strMessage">The error message that explains the structure is not supported.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException">
            <summary>
            Exception raised if a business object does not have a name rule associated with it.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException.#ctor(System.String)">
            <summary>
            Instantiates when a business object does not have a name rule associated with it.
            </summary>
            <param name="strMessage">The error message that explains that there is not an associated name rule.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">
            <summary>
            Exception raised if related objects cannot be set on the member frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException.#ctor(System.String)">
            <summary>
            Instantiates when related objects cannot be set on the member frame connection.
            </summary>
            <param name="strMessage">The error message that explains there are invalid related objects.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">
            <summary>
            Exception raised if a connection cannot be obtained from an object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException.#ctor(System.String)">
            <summary>
            Instantiates when a connection cannot be obtained from an object.
            </summary>
            <param name="strMessage">The error message that explains the connection cannot be obtained.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">
            <summary>
            Exception raised if an error is encountered while getting the member end from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the member end from the frame connection.
            </summary>
            <param name="strMessage">The error message that explains that getting the connection failed.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the member end from the frame connection.
            <param name="strMessage"> Error message.</param>
            <param name="e"> Inner Exception.</param>
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException">
            <summary>
            Raised when an action has been attempted that is not allowed for a member part that is a child of a
            member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action has been attempted that is not allowed for a member part that is a child of a
            member system.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException.#ctor">
            <summary>
            An action has been attempted that is not allowed for a member part that is a child of a
            member system.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">
            <summary>
            Raised when an action has been attempted that is not allowed on a non-prismatic member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action has been attempted that is not allowed on a non-prismatic member part.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException.#ctor">
            <summary>
            Raised when an action has been attempted that is not allowed on a non-prismatic member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">
            <summary>
            Raised when an action has been attempted that is not allowed on a curved member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action has been attempted that is not allowed on a curved member part.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException.#ctor">
            <summary>
            Raised when an action has been attempted that is not allowed on a curved member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">
            <summary>
            Raised when the selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            The selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException.#ctor">
            <summary>
            Raised when the selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException">
            <summary>
            Raised when the input surface is not valid as a cutback surface for the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            The input surface is not valid as a cutback surface for the member part.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException.#ctor">
            <summary>
            The input surface is not valid as a cutback surface for the member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">
            <summary>
            Raised when a member part with a non-linear axis cannot be created.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Cannot create a member part with a non-linear axis.
            </summary>
            <param name="inner">The inner COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException.#ctor">
            <summary>
            Raised when a member part with a non-linear axis cannot be created.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TransformException">
            <summary>
            Exception raised if an error is encountered while performing a transformation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TransformException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while performing a transformation.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TransformException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while performing a transformation.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PriorityException">
            <summary>
            Exception raised if an error is encountered while getting or setting the priority.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PriorityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when if an error is encountered while getting or setting the priority.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TypeException">
            <summary>
            Exception raised if an error is encountered while getting or setting the type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">
            <summary>
            Exception raised if an error is encountered while getting or setting the type category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeCategoryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type category.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeCategoryException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type category.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.LoadsException">
            <summary>
            Exception raised if an error is encountered while getting the Loads property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LoadsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Loads property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ReleasesException">
            <summary>
            Exception raised if an error is encountered while getting the Releases property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReleasesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Releases property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException">
            <summary>
            Exception raised if an error is encountered while getting the cutback surfaces of a member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the cutback surfaces of a member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException">
            <summary>
            Exception raised if an error is encountered while adding the cutback surface to the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while adding the cutback surface to the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException">
            <summary>
            Exception raised if an error is encountered while trying to get the axis port of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAxisPortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAxisPortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">
            <summary>
            Exception raised if an error is encountered while trying to determine whether a member is curved or not.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsCurvedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to determine whether a member is curved or not.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">
            <summary>
            Exception raised if an unexpected failure while getting the cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAxisException">
            <summary>
            Exception raised if an error is encountered while trying to set the axis of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the axis of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException">
            <summary>
            Exception raised if an error is encountered while trying to get related objects of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get related objects of of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the Sketch3d path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.Sketch3DException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the Sketch3d path.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.Sketch3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the Sketch3d path.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">
            <summary>
            Exception raised if an error is encountered while trying to set the end positions on a Sketch3d path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the end positions on a Sketch3d path.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the end positions on a Sketch3d path.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException">
            <summary>
            Exception raised if an error is encountered while trying to get the point at end of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the point at end of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the point at end of the member.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MirrorException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the Mirror property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MirrorException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when if an error is encountered while trying to get or set the Mirror property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the Mirror property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BetaAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get or set the Mirror property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the OrientationVector property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OrientationVectorException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the OrientationVector property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the matrix at a position of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the matrix at a position of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException">
            <summary>
            Exception raised if an error is encountered while trying to get connected parts of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get connected parts of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException">
            <summary>
            Exception raised if an error is encountered while trying to get the member system of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the member system of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while trying to get the member system of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CutLengthException">
            <summary>
            Exception raised if an error is encountered while trying to get the cut length of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CutLengthException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the cut length of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CardinalPointException">
            <summary>
            Exception raised if an error is encountered while trying to get the cardinal point of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CardinalPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the cardinal point of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AxisException">
            <summary>
            Exception raised if an error is encountered while trying to get the axis of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the axis of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AxisException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the axis of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StandAloneException">
            <summary>
            Exception raised if an error is encountered while trying to get the StandAlone property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the StandAlone property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DesignedMemberException">
            <summary>
            Exception raised if an error is encountered while trying to get the DesignedMember property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DesignedMemberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the DesignedMember property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PrismaticException">
            <summary>
            Exception raised if an error is encountered while trying to get the Prismatic property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PrismaticException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the Prismatic property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">
            <summary>
            Exception raised if an error is encountered while trying to get end points of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndPointsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndPointsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">
            <summary>
            Exception raised if an error is encountered while trying to set end points of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndPointsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndPointsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartsException">
            <summary>
            Exception raised if an error is encountered while trying to get parts of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get parts of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartException">
            <summary>
            Exception raised if an error is encountered while trying to get the part of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the part of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the part of the member part.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPartException">
            <summary>
            Exception raised if an error is encountered while trying to set the part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the part at the position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the part at the position of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException">
            <summary>
            Exception raised if an error is encountered while trying to get the frame connection at a position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the frame connection of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the frame connection of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">
            <summary>
            Exception raised if an error is encountered while trying to get split connections at the position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException"/> class with the given message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get split connections of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMatrixException">
            <summary>
            Exception raised if an error is encountered while trying to get the matrix at a position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the matrix of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortException">
            <summary>
            Exception raised if an error is encountered while trying to get a port on a connectable.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get a port on a connectable.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get a port on a connectable.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FindPortException">
            <summary>
            Exception raised if an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindPortException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindPortException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException">
            <summary>
            Exception raised if an error is encountered while trying to enumerate ports on a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to enumerate ports on a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to enumerate ports on a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException">
            <summary>
            Exception raised if an error is encountered while trying to get the range of a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the range of a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the range of a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the position of a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the position of a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the position of a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException">
            <summary>
            Exception raised if an error is encountered while trying to get the member system from the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the member system from the connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the member system from the connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException">
            <summary>
            Exception raised if an error is encountered while trying to get the end member systems from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the end member systems from the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the end member systems from the frame connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the global work point offset on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the global work point offset on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the global work point offset on the frame connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">
            <summary>
            Exception raised if an invalid cardinal point is being set.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException.#ctor(System.String)">
            <summary>
            Instantiates when an invalid cardinal point is being set.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the work point offset cardinal point on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the work point offset cardinal point on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the work point offset cardinal point on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException">
            <summary>
            Exception raised if an error is encountered while trying to validate the related objects on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to validate the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to validate the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException">
            <summary>
            Exception raised if an error is encountered while trying to get the related objects on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException">
            <summary>
            Exception raised if an error is encountered while trying to get the point-on condition on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the point-on condition on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the point-on condition on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException">
            <summary>
            Exception raised if an error is encountered while trying to transform the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to transform the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to transform the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the codelist value for a member type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the codelist value for a member type. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberCategoryException">
            <summary>
            Exception raised if an error is encountered while trying to get the codelist value for a member type category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberCategoryException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the codelist value for a member type category. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">
            <summary>
            Exception raised if an error is encountered while trying to get the connections of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectionsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connections of the member system.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException">
            <summary>
            Exception raised if an error is encountered while placing the end cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to place the end cut feature.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException">
            <summary>
            Exception raised if an error is encountered while getting the section edges at the given plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the section edges at a plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException">
            <summary>
            Exception raised if an error is encountered while getting the section faces.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get section faces.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException">
            <summary>
            Exception raised if an error is encountered while getting the end cut sketching plane origin.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the end cut sketching plane origin.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException">
            <summary>
            Exception raised if an error is encountered while getting the cross section class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the cross section class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">
            <summary>
            Exception raised if an error is encountered while getting the keypoint coordinates.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the keypoint coordinates.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">
            <summary>
            Exception raised if an error is encountered while getting the nominal section size.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the nominal section size.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MatrixException">
            <summary>
            Exception raised if an error is encountered while determining the transformation matrix.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the transformation matrix.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MatrixException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the transformation matrix.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.XAxisException">
            <summary>
            Exception raised if an error is encountered while determining the X-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.XAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the X-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.YAxisException">
            <summary>
            Exception raised if an error is encountered while determining the Y-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.YAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the Y-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ZAxisException">
            <summary>
            Exception raised if an error is encountered while determining the Z-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ZAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the Z-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OriginException">
            <summary>
            Exception raised if an error is encountered while determining the origin.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OriginException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the origin.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OriginException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the origin.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryOffsetException">
            <summary>
            Exception raised if an error is encountered while trying to get the boundary offset of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the boundary offset of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryOffsetException">
            <summary>
            Exception raised if an error is encountered while trying to set the boundary offset of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the boundary offset of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the type part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the type part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetWallTypeException">
            <summary>
            Exception raised if an error is encountered while trying to set the type part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWallTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the type part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaximumHeightException">
            <summary>
            Exception raised if an error is encountered while getting the maximum height of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaximumHeightException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the maximum height of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMaximumHeightException">
            <summary>
            Exception raised if an error is encountered while setting the maximum height of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaximumHeightException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the maximum height of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaximumHeightException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the maximum height of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReflectException">
            <summary>
            Exception raised if an error is encountered while getting the Reflect property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReflectException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Reflect property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetReflectException">
            <summary>
            Exception raised if an error is encountered while setting the Reflect property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetReflectException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Reflect property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetVerticalOffsetException">
            <summary>
            Exception raised if an error is encountered while getting the VerticalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetVerticalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the VerticalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetVerticalOffsetException">
            <summary>
            Exception raised if an error is encountered while setting the VerticalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetVerticalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the VerticalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetHorizontalOffsetException">
            <summary>
            Exception raised if an error is encountered while getting the HorizontalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetHorizontalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the HorizontalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetHorizontalOffsetException">
            <summary>
            Exception raised if an error is encountered while setting the HorizontalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetHorizontalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the HorizontalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAngleException">
            <summary>
            Exception raised if an error is encountered while getting the Angle property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Angle property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAngleException">
            <summary>
            Exception raised if an error is encountered while setting the Angle property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Angle property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionPartException">
            <summary>
            Exception raised if there is an unexpected failure while getting the composition part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the composition part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionPartException">
            <summary>
            Exception raised if there is an unexpected failure while setting the composition part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while setting the composition part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionLayersException">
            <summary>
            Exception raised if there is an unexpected failure while getting the composition layers of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the composition layers of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionLayersException">
            <summary>
            Exception raised if there is an unexpected failure while setting the composition layers of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while setting the composition layers of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReferenceLayerException">
            <summary>
            Exception raised if there is an unexpected failure while getting the reference layer of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the reference layer of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetThicknessException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the thickness.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetThicknessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetThicknessException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetThicknessException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetThicknessException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the thickness.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetThicknessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetThicknessException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetThicknessException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">
            <summary>
            Exception raised if an error is encountered while AddSystemChild is called on the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSystemChildException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while AddSystemChild is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSystemChildException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while AddSystemChild is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SystemChildrenException">
            <summary>
            Exception raised if an error is encountered while getting system children on the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SystemChildrenException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting system children on the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SystemChildrenException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting system children on the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSystemParentException">
            <summary>
            Exception raised if an error is encountered when setting the system parent for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSystemParentException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting the system parent for the wall.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSystemParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the system parent for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">
            <summary>
            Exception raised if an error is encountered when setting the system parent for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSystemParentException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting the system parent for the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSystemParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the system parent for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetActiveNameRuleException">
            <summary>
            Exception raised if an error is encountered when setting the active name rule for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetActiveNameRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the active name rule for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetActiveNameRuleException">
            <summary>
            Exception raised if an error is encountered when setting the active name rule for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetActiveNameRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the active name rule for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNameException">
            <summary>
            Exception raised if an error is encountered when getting the name for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when getting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetNameException">
            <summary>
            Exception raised if an error is encountered when setting the name for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetUserDefinedNameException">
            <summary>
            Exception raised if an error is encountered when getting the user-defined name for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserDefinedNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException">
            <summary>
            Exception raised if an error is encountered when setting the user-defined name for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">
            <summary>
            Exception raised if an error is encountered when getting the range. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when getting the range.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the range. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WBSItemChildHelperObjException">
            <summary>
            Exception raised if an unexpected failure occurs while getting WBSItemChildHelperObj for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WBSItemChildHelperObjException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an unexpected failure occurs while getting WBSItemChildHelperObj for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WBSItemParentsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting WBSItemParents for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WBSItemParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an unexpected failure occurs while getting WBSItemParent for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionTypeException">
            <summary>
            Exception raised if an error is encountered when setting a cross-section type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCrossSectionTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting a cross-section type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">
            <summary>
            Exception raised if an error is encountered while getting the connectable ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the connectable ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connectable ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException">
            <summary>
            Exception raised if an error is encountered while getting the connected ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the connected ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connected ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">
            <summary>
            Exception raised if an error is encountered while getting the ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsConnectedToException">
            <summary>
            Exception raised if an error is encountered while IsConnectedTo is called.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsConnectedToException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while IsConnectedTo is called.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsConnectedToException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while IsConnectedTo is called.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">
            <summary>
            Exception raised if an unexpected failure occurs while trying to create a wall system using Sketch3D.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WallSystem3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure occurs while trying to create a wall system using Sketch3D.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportPlaneException">
            <summary>
            Exception raised if an error is encountered when getting the support plane for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the support plane for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportPlaneException">
            <summary>
            Exception raised if an error is encountered when setting the support plane for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the support plane for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallPartsException">
            <summary>
            Exception raised if an error is encountered when getting wall parts for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting wall parts for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPathException">
            <summary>
            Exception raised if an error is encountered when getting the path for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPathException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the path for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPathException">
            <summary>
            Exception raised if an error is encountered when setting the path for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPathException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the path for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundariesException">
            <summary>
            Exception raised if an error is encountered when getting boundaries.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundariesException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when getting boundaries.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting boundaries.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryException">
            <summary>
            Exception raised if an error is encountered when getting the boundary for a plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting a boundary for a plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundariesException">
            <summary>
            Exception raised if an error is encountered when setting boundaries.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundariesException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when setting boundaries.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting boundaries.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryException">
            <summary>
            Exception raised if an error is encountered when setting a boundary for a wall or plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting a boundary for a wall or plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetContinuityTypeException">
            <summary>
            Exception raised if an error is encountered when getting the continuity type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContinuityTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the continuity type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetContinuityTypeException">
            <summary>
            Exception raised if an error is encountered when setting the continuity type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetContinuityTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the continuity type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPriorityNumberException">
            <summary>
            Exception raised if an error is encountered when getting the priority number for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPriorityNumberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the priority number for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPriorityNumberException">
            <summary>
            Exception raised if an error is encountered when setting the priority number for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPriorityNumberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the priority number for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRunException">
            <summary>
            Exception raised if an error is encountered when getting a run for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting a run for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetRunException">
            <summary>
            Exception raised if an error is encountered when setting a run for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting a run for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallSystemException">
            <summary>
            Exception raised if an error is encountered when getting a wall system for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting a wall system for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when getting a wall system for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPartsException">
            <summary>
            Exception raised if an error is encountered when getting the connected parts for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the connected parts for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallSystemFromRunException">
            <summary>
            Exception raised if an error is encountered when getting the wall system for a wall run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemFromRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the wall system for a wall run.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIsReferenceException">
            <summary>
            Exception raised if a failure occurs while getting the IsReference property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIsReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if a failure occurs while getting the IsReference property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetIsReferenceException">
            <summary>
            Exception raised if a failure occurs while setting the IsReference property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetIsReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if a failure occurs while setting the IsReference property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerThicknessException">
            <summary>
            Exception raised if an error is encountered while getting the LayerThickness property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerThickness property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerThicknessException">
            <summary>
            Exception raised if an error is encountered while setting the LayerThickness property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerThickness property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException">
            <summary>
            Exception raised if an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException">
            <summary>
            Exception raised if an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerCatalogPartException">
            <summary>
            Exception raised if an error is encountered while getting the LayerCatalogPart property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerCatalogPart property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerCatalogPartException">
            <summary>
            Exception raised if an error is encountered while setting the LayerCatalogPart property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerCatalogPart property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">
            <summary>
            Exception raised if an error is encountered while getting the Material property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">
            <summary>
            Exception raised if an error is encountered while setting the Material property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaterialException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaterialException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException">
            <summary>
            Exception raised if an error is encountered while getting the MaterialType property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialType property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialType property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialGradeException">
            <summary>
            Exception raised if an error is encountered while getting the MaterialGrade property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialGradeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialGrade property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">
            <summary>
            Exception raised if an error is encountered while getting the port index.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortIndexException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the port index.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortIndexException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the port index.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">
            <summary>
            Exception raised if an error is encountered while getting the port type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the port type.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the port type.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberPartException">
            <summary>
            Exception raised if an error is encountered while trying to get the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the member part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException">
            <summary>
            Exception raised if an error is encountered while trying to get the port geometry.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the port geometry.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the port geometry.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the operator identifier.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the operator identifier.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOperationIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the operation identifier.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperationIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the operation identifier.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetContextIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the context ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContextIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the context ID.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the section ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the section ID.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIsPersistentException">
            <summary>
            Exception raised if an error is encountered while trying to determine whether persistent.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIsPersistentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to determine whether persistent.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the topology proxy type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the topology proxy type.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">
            <summary>
            Exception raised if an error is encountered while trying to get the geometry operation not supported by an entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the geometry operation not supported by an entity.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the geometry operation not supported by from an entity.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StairNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a stair.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StairNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a stair.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a ladder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LadderNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a ladder.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">
            <summary>
            Exception raised if an error is encountered while trying to get a stair or ladder top support.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TopSupportException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder top support.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TopSupportException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder top support.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">
            <summary>
            Exception raised if an error is encountered while trying to get a stair or ladder side reference.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SideReferenceException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder side reference.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SideReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder side reference.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">
            <summary>
            Exception raised if an error is encountered while trying to get a stair or ladder bottom support.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BottomSupportException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder bottom support.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BottomSupportException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get a stair or ladder bottom support.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNullObjectException">
            <summary>
            Exception raised if a structure object has a null reference.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNullObjectException.#ctor(System.String)">
            <summary>
            Instantiates when a structure object has a null reference.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.HandrailNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a handrail.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.HandrailNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a handrail.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">
            <summary>
            Exception raised if an error is encountered while getting the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException">
            <summary>
            Exception raised if an error is encountered while getting the proxy from the part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the proxy from the part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the proxy from the part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOrientationException">
            <summary>
            Exception raised if an error is encountered while setting the orientation of the local coordinate system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOrientationException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the orientation of the local coordinate system.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOrientationException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the orientation of the local coordinate system.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPlaneInputsException">
            <summary>
            Exception raised if an error is encountered when a wrong overloaded GetInputs method is called for a particular plane definition type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlaneInputsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when a wrong overloaded GetInputs method is called for a particular plane definition type.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException">
            <summary>
            Exception raised if an error is encountered during the creation of a Plane3d object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered during the creation of a Plane3d object.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GeometryPattern">
            <summary>
            Exception raised if an error is encountered while setting the geometry pattern on the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryPattern.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the geometry pattern on the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">
            <summary>
            Exception raised if an error is encountered while trying to set the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException">
            <summary>
            Exception raised if an error is encountered while getting the catalog part from proxy.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part from proxy.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part from proxy.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportInfoException">
            <summary>
            Exception raised if an error is encountered while getting the support of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the support of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the support of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the support of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the composition of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the composition of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the composition of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the composition of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetTypeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the type of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the type of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetTypeException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the type of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the type of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFacePositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the face position of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFacePositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFacePositionException.#ctor(System.String)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetFacePositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the face position of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetFacePositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayersException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the layers of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the layers of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayersException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the layers of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the layers of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabReferenceLayerException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the reference layer of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabReferenceLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the reference layer of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalVolumeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total volume of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalVolumeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total volume of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetVolumeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net volume of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetVolumeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net volume of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalSurfaceException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total surface of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total surface of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetSurfaceException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net surface of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net surface of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalProjectedAreaException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total projected area of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalProjectedAreaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total projected area of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetProjectedAreaException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net projected area of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetProjectedAreaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net projected area of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAngleException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the angle of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the angle of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabSlopeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the slope of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabSlopeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the slope of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabLowestElevationPointException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the lowest elevation point of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabLowestElevationPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the lowest elevation point of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabHighestElevationPointException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the highest elevation point of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabHighestElevationPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the highest elevation point of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabBottomOfConcreteException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the bottom of the concrete of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabBottomOfConcreteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the bottom of the concrete of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTopOfConcreteException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the top of the concrete of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTopOfConcreteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the top of the concrete of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabThicknessException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the thickness of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the thickness of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSlabThicknessException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the thickness of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSlabThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the thickness of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAssemblyConnections">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the assembly connections of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAssemblyConnections.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the assembly connections of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAmbiguousPatches">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the ambiguous patches of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAmbiguousPatches.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the ambiguous patches of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabUnusedBoundaries">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the unused boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabUnusedBoundaries.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the unused boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SlabResolveAmbiguity">
            <summary>
            Exception raised if an unexpected failure is encountered while trying to resolve the ambiguity of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SlabResolveAmbiguity.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while trying to resolve the ambiguity of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabIsAmbiguous">
            <summary>
            Exception raised if an unexpected failure is encountered while trying to retrieve whether the slab is ambiguous.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabIsAmbiguous.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while trying to retrieve whether the slab is ambiguous.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">
            <summary>
            Exception raised if an unexpected failure is encountered while defining a traffic entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException.#ctor(System.String)">
            <summary>
            Instantiates when an unexpected failure is encountered while defining a traffic entity.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while defining a traffic entity.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">
            <summary>
            Exception raised if an error is encountered in the ExecuteSelectionRule method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in the ExecuteSelectionRule method.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in the ExecuteSelectionRule method.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">
            <summary>
            Exception raised if an error is encountered in getting the part name property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in getting the part name property.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in getting the part name property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">
            <summary>
            Exception raised if an error is encountered in setting the part name property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in setting the part name property.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in setting the part name property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">
            <summary>
            Exception is raised if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException">
            <summary>
            Exception is raised if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">
            <summary>
            Exception is raised if supported objects cannot be set on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if supported objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if supported objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException">
            <summary>
            Exception is raised if supporting objects cannot be set on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if supporting objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if supporting objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException">
            <summary>
            Exception is raised if the definition object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if the definition object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the definition object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException">
            <summary>
            Exception is raised if the footing input helper object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException.#ctor(System.String)">
            <summary>
            Instantiates if the footing input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the footing input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting">
            <summary>
            Exception raised if an invalid input object is used for creating the footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered if an invalid input object is used for creating the footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered if an invalid input object is used for creating the footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">
            <summary>
            Exception raised if an error is encountered while creating an entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEntityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while creating an entity.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEntityException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while creating an entity.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateFootingException">
            <summary>
            Exception raised if an error is encountered while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFootingException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFootingException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException">
            <summary>
            Exception raised if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException">
            <summary>
            Exception raised if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException">
            <summary>
            Exception raised if an error is encountered while instantiating the helper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while instantiating the helper class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while instantiating the helper class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">
            <summary>
            Exception raised if the number of supported objects is less than two.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the number of supported objects is less than two.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount.#ctor(System.String)">
            <summary>
            Instantiates if the number of supported objects is less than two.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">
            <summary>
            Exception raised if invalid inputs are used in creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if invalid inputs are used in creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException.#ctor(System.String)">
            <summary>
            Instantiates if invalid inputs are used in creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">
            <summary>
            Exception raised if invalid inputs are used in creating the equipment foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if invalid inputs are used in creating the equipment foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException.#ctor(System.String)">
            <summary>
            Instantiates if invalid inputs are used in creating the equipment foundation.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException">
            <summary>
            Exception is raised if the equipment foundation input helper object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException.#ctor(System.String)">
            <summary>
            Instantiates if the equipment foundation input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the equipment foundation input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException">
            <summary>
            Exception is raised if an error is encountered while getting the support objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException">
            <summary>
            Exception is raised if an error is encountered while setting the support objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while setting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while setting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the root selection name from the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the root selection name from the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the default foundation name from the foundation port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefaultFndnException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the default foundation name from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetRootSelNameException">
            <summary>
            Exception is raised if an unexpected failure occurs while setting the root selection name on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRootSelNameException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while setting the root selection name from the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InfiniteException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the Infinite Property on line object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InfiniteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while calling the Infinite Property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StartPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the start point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StartPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the start point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EndPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the end point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EndPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the end point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RootPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the root point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RootPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the root point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the direction vector.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the direction.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetuFormException">
            <summary>
            Exception is raised if an error is encountered while getting the uForm.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetuFormException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the uForm.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetuFormException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the uForm.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetvFormException">
            <summary>
            Exception is raised if an error is encountered while getting the vForm.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetvFormException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the vForm.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetvFormException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the vForm.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddBoundaryException">
            <summary>
            Exception is raised if an error is encountered while adding a boundary to the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddBoundaryException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while adding a boundary to the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while adding a boundary to the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddHoleException">
            <summary>
            Exception is raised if an error is encountered while adding a hole to the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddHoleException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while adding a hole to the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddHoleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while adding a hole to the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BoundaryCountException">
            <summary>
            Exception is raised if an error is encountered while getting the boundary count of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BoundaryCountException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the boundary count of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BoundaryCountException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the boundary count of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NormalException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the normal of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NormalException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting or setting the normal of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NormalException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the normal of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException">
            <summary>
            Exception is raised if an error is encountered while removing all boundaries.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while removing all boundaries.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while removing all boundaries.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException">
            <summary>
            Exception is raised if an error is encountered while removing a boundary of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while removing a boundary of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while removing a boundary of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ReversedException">
            <summary>
            Exception is raised if an error is encountered while getting the reversed flag of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReversedException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the reversed flag of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReversedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the reversed flag of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.UDirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or 
            setting U-direction of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UDirectionException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting or setting U-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UDirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting U-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.VDirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or setting V-direction of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.VDirectionException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting or setting V-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.VDirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting V-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProfilesException">
            <summary>
            Exception raised while getting profiles.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProfilesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is a failure getting profiles.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException">
            <summary>
            Exception raised while getting the cardinal point offset along the local X-axis and Y-axis in 2D space, for the given cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FailedToGetCardinalPointOffsetException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MathMatrixException">
            <summary>
            Exception raised while instantiating DT4x4.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MathMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is a failure instantiating DT4x4.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ComputeTransformForProjectionException">
            <summary>
            Exception raised while computing a transformation for projection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeTransformForProjectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is a failure to compute a transformation for projection.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">
            <summary>
            Exception raised while creating surfaces from a cross section along some given projection path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException"/> class with the given error message.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetDefinitionParametersException">
            <summary>
            Exception raised while getting the definition parameters.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetDefinitionParametersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed while getting the definition parameters.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException">
            <summary>
            Exception raised while error in creating by single sweep with cap option on.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered in creating by single sweep with cap option on.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in creating by single sweep with cap option on.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException">
            <summary>
            Exception raised when an error occurred in getting the projection surfaces from a circle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in getting the projection surfaces from a circle.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException">
            <summary>
            Exception raised when error occurred in getting the curve by offset.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered in getting the curve by offset.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in getting the curve by offset.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException">
            <summary>
            Exception raised if an error is encountered while trying to get the physical axis of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the physical axis of the member system.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the physical axis of the member system.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">
            <summary>
            Exception raised if an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetWCGException">
            <summary>
            Exception raised if an error is encountered while trying to set weight and center of gravity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWCGException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set weight and center of gravity.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWCGException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set weight and center of gravity.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException">
            <summary>
            Exception raised if an error is encountered while trying place a cross-section occurrence in the model.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying place a cross-section occurrence in the model.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying place a cross-section occurrence in the model.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException">
            <summary>
            Exception raised if an error is encountered while trying to set control flags.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set control flags.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set control flags.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ParameterException">
            <summary>
            Exception raised if an error is encountered while determining the U and V parameters.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the U and V parameters.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the U and V parameters.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PositionException">
            <summary>
            Exception raised if an error is encountered while getting the position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the position.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the position.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EvaluateException">
            <summary>
            Exception raised if an error is encountered while evaluating the point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EvaluateException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while evaluating the point.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EvaluateException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while evaluating the point.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException">
            <summary>
            Exception raised when a stand-alone member part is assigned to a member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when a stand-alone member part is assigned to a member system.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException.#ctor(System.String)">
            <summary>
            Instantiates when a stand-alone member part is assigned to a member system.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">
            <summary>
            Exception raised if there is no intersection point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoIntersectionException.#ctor(System.String)">
            <summary>
            Instantiates when there is no intersection point.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStructRootException">
            <summary>
            Exception raised if an error is occurred while getting the catalog structure root.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructRootException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is occurred while getting the catalog structure root.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructRootException.#ctor(System.String)">
            <summary>
            Instantiates if an error is occurred while getting the catalog structure root.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">
            <summary>
            Exception raised if an error is encountered while trying to disconnect the related objects even if there are no related objects on FC.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to disconnect the related objects even if there are no related objects on FC.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException">
             <summary>
            Exception raised if the cross-section occurrence object is null.
             </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException.#ctor(System.String)">
            <summary>
            Instantiates when the cross-section occurrence object is null.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when the cross-section occurrence object is null.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SplitTypeException">
             <summary>
            Exception raised when the set method is called on the split type.
             </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitTypeException.#ctor(System.String)">
            <summary>
            Instantiates when the set method is called on the split type.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InputObjectsException">
            <summary>
            Exception raised while getting input objects from a split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InputObjectsException.#ctor(System.String)">
            <summary>
            Instantiated while getting input objects from a split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InputObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated while getting input objects from a split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">
            <summary>
            Exception is raised when an error occurred while creating a split member connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred while creating a split member connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred while creating a split member connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">
            <summary>
            Exception is raised when an error occurred while getting the helper object from a split member connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSplitterException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred while getting the helper object from a split member connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSplitterException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred while getting the helper object from a split member connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">
            <summary>
            Exception raised when an error occurred during validation of parent objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateParentsException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred during validation of parent objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred during validation of parent objects.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">
            <summary>
            Exception raised when an error occurred during setting of parent objects on a split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetParentsException.#ctor(System.String)">
            <summary>
            Exception raised when an error occurred during setting of parent objects on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Exception raised when an error occurred during setting of parent objects on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">
            <summary>
            Exception raised when an error occurred during setting of SplitStatus on a split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred during setting of SplitStatus on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred during setting of SplitStatus on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException">
            <summary>
            Exception raised when an error occurs while getting split connection parents.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException">
            <summary>
            Exception raised when an error occurs while setting MemberSplitType.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException">
            <summary>
            Exception raised when an error occurs while getting MemberSplitType.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException">
            <summary>
            Exception raised when an error occurs while getting the position of the split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException">
            <summary>
            Exception raised when an error occurs while getting the boundary definitions.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">
            <summary>
            Exception raised when an error occurs while creating the sketching plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">
            <summary>
            Exception raised if the member system is not point-on.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">
            <summary>
            Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">
            <summary>
            Exception raised if the point-on distance value is less than 0 or greater than the member length for this frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException">
            <summary>
            Exception raised when error in getting point-on member end from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">
            <summary>
            Exception raised when error in setting point-on member end in the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException">
            <summary>
            Exception raised when error in getting point-on position rule from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">
            <summary>
            Exception raised when error in setting point-on position rule in the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException">
            <summary>
            Exception raised when error in getting the point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">
            <summary>
            Exception raised when error in setting the point-on ratio value in the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException">
            <summary>
            Exception raised when error in getting the point-on distance value from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">
            <summary>
            Exception raised when error in setting the point-on distance value in the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">
            <summary>
            Exception raised when error in getting the point-on distance or ratio value from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException">
            <summary>
            Exception raised when an error occurred in getting the ToDo record codelist table name from a given business object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">
            <summary>
            Exception raised when an error occurs while setting the point-on location on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException">
            <summary>
            Exception raised when an error occurs while getting the reference object from the proxy object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException">
            <summary>
            Exception raised when an error occurs while getting the clip surfaces from planes.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">
            <summary>
            Exception raised when the supported object collection contains points and equipment together.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException">
            <summary>
            Exception raised when an error occurs while getting the member part StartMemberRelease.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException">
            <summary>
            Exception raised when an error occurs while getting the member part EndMemberRelease.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">
            <summary>
            Exception raised when an error occurs while setting the member part release.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException">
            <summary>
            Exception raised when an error occurs while setting the outward normal.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException">
            <summary>
            Exception raised when an error occurs while setting the outward normal.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ExceptionHandler">
            <summary>
            Internal class to deligate the COM exception to the Common exception handler.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExceptionHandler.HandleCOMException(System.Runtime.InteropServices.COMException)">
            <summary>
            Internal method to call common exception handler which will handle all generic the COM exceptions related to db success and BO state.
            This method will thorow the required exception if required.
            </summary>
            <param name="comException">The COM exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationComponentNotSupportedException">
            <summary>
            Raised when an unsupported method or property is called on the foundation component.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationComponentNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FoundationComponentNotSupportedException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException">
            <summary>
            Raised if the given root selector is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRootSelectorException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException">
            <summary>
            Raised when an unexpected error occurred while creating the assembly connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateAssemblyConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoCatalogPartFoundException">
            <summary>
            Raised when a valid catalog part could not be selected by the selector rule for the given frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoCatalogPartFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NoCatalogPartFoundException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidConnectionException">
            <summary>
            Raised if the given connection type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException">
            <summary>
            Raised when an unexpected error occurred while creating the references collection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException">
            <summary>
            Raised when an unexpected error occurred while getting the relations collection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRelationsCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException">
            <summary>
            Raised when an unexpected error occurred while getting an item from the collection helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionHelperItemException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException">
            <summary>
            Raised when an unexpected error occurred while removing all arguments from the references collection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllArgumentFromRefCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException">
            <summary>
            Raised when an unexpected error occurred while removing the references collection from the collection helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException">
            <summary>
            Raised when an unexpected error occurred while adding the references collection to the collection helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddReferencesCollectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException">
            <summary>
            Raised when an unexpected error occurred while adding a new relation with the references collection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddRelationshipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddRelationshipException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddRelationshipException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException">
            <summary>
            Raised when an unexpected error occurred while adding a port to the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AddPortToStructConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException">
            <summary>
            Raised when an unexpected error occurred while getting the references collection argument count.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferencesCollectionArgumentCountException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException">
            <summary>
            Raised when an unexpected error occurred while setting the references collection argument.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionArgumentException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException">
            <summary>
            Raised when an unexpected error occurred with an invalid member split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberSplitConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSOConnectionHelperException">
            <summary>
            Raised when an unexpected error occurred while getting the smart occurrence connection helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSOConnectionHelperException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSOConnectionHelperException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSOConnectionHelperException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSOConnectionHelperException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromMemberSplitConnectionException">
            <summary>
            Raised when an unexpected error occurred while getting the parents from a member split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetParentsFromMemberSplitConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromMemberSplitConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetParentsFromMemberSplitConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromMemberSplitConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException">
            <summary>
            Raised when an unexpected error occurred while getting the selection rule definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSelectionRuleDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException">
            <summary>
            Raised when an unexpected error occurred while getting ports from the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsFromConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException">
            <summary>
            Raised when an unexpected error occurred while removing a port from connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemovePortFromConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveAssemblyConnectionException">
            <summary>
            Raised when an unexpected error occurred while removing the assembly connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAssemblyConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAssemblyConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAssemblyConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAssemblyConnectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException">
            <summary>
            Raised when an unexpected error occurred while trying to get a valid assembly connection part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionInputsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException">
            <summary>
            Raised when an unexpected error occurred while creating the object using ProgID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateObjectException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException">
            <summary>
            Raised when an unexpected error occurred while getting valid objects from the assembly connection input helper.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetValidateObjectsException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException">
            <summary>
            Raised when an unexpected error occurred while getting the smart item definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSmartItemDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException">
            <summary>
            Raised when an unexpected error occurred while setting the root selection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetRootSelectionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException">
            <summary>
            Raised when a connection already exists.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ConnectionExistsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidParentException">
            <summary>
            Raised when an invalid parent system is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidParentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidParentException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException">
            <summary>
            Raised when an invalid bounded port is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPortException.#ctor(System.String)">
             <summary>
            Instantiates when an invalid bounded port is used.
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException">
            <summary>
            Raised when an invalid bounding port is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortException.#ctor(System.String)">
             <summary>
            Instantiates when an invalid bounding port is used.
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException">
            <summary>
            Raised when an unexpected error occurred while setting the bounded and bounding ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundingBoundedPortException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.LoadAssemblyException">
            <summary>
            Raised when the Marine Structure assembly could not be loaded.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LoadAssemblyException.#ctor(System.String)">
             <summary>
            Instantiates when an invalid bounding port is used.
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LoadAssemblyException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an invalid bounding port is used.
            </summary>
            <param name="strMessage">The error message that explains the reason for the exception.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SymmetryException">
            <summary>
            Raised when an unexpected error occurred while getting or setting the symmetry.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SymmetryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SymmetryException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SymmetryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SymmetryException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsOverriddenException">
            <summary>
            Raised when an unexpected error occurred while getting or setting the override property of symmetry.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsOverriddenException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsOverriddenException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsOverriddenException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsOverriddenException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException">
            <summary>
            Raised when an unexpected error occurred while getting or setting the symmetrical part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SymmetricalPartException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException">
            <summary>
            Raised when an unexpected error occurred while determing whether the symmetry is up-to-date.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryUpToDateException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException">
            <summary>
            Raised when an unexpected error occurred while determing whether the symmetry part is identical.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IsSymmetryPartIdenticalException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException">
            <summary>
            Raised when an unexpected error occurred while creating the edge feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateEdgeFeatureException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException">
            <summary>
            Raised when invalid inputs are used to create a feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureInputsException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException">
            <summary>
            Raised when an invalid feature type is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFeatureTypeException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException">
            <summary>
            Raised when the requested method is not available.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MethodNotAvailableException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException">
            <summary>
            Raised when an error occurred while setting the parent objects on a surface trim or cope feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException"/> class.
            </summary>
            <param name="strMessage">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetFeatureParentsException"/> class.
            </summary>
            <param name="strMessage">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException">
            <summary>
            Raised when an error occurred while getting the parent objects from a surface trim or cope feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException"/> class.
            </summary>
            <param name="strMessage">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetFeatureParentsException"/> class.
            </summary>
            <param name="strMessage">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException">
            <summary>
            Raised when an unexpected error occurred while getting user commands from the selection rule definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandsException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandException">
            <summary>
            Raised when an unexpected error occurred while getting the user command by providing a command ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException">
            <summary>
            Raised when an unexpected error occurred while getting the user command source.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetUserCommandSourceException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException">
            <summary>
            Raised when an unexpected error occurred while getting the collection of attributes by passing an interface ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCollectionOfAttributesException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetItemException">
            <summary>
            Raised when an unexpected error occurred while getting an item from the attribute collection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetItemException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetItemException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetItemException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetItemException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException">
            <summary>
            Raised when an unexpected error occurred while setting the attribute value.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetAttributeValueException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException">
            <summary>
            Raised when an unexpected error occurred while updating the smart occurrence.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SmartOccurrenceUpdateException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException">
            <summary>
            Raised when an invalid name rule is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNameRuleException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException">
            <summary>
            Raised when an invalid part is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPartException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException">
            <summary>
            Raised when an unexpected error occurred while getting the root smart class name.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSmartClassNameException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException">
            <summary>
            Exception raised when an unexpected error occurred while getting the root class for a specific feature type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootClassException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootClassException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRootClassException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException">
            <summary>
            Raised if the given port type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortTypeException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException">
            <summary>
            Exception raised when the port connectable is not a part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortConnectableException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException">
            <summary>
            Exception raised when the port connectable is not detailed.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableNotDetailedException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException">
            <summary>
            Exception raised when the port connectable is a straked part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PortConnectableStrakedPartException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException">
            <summary>
            Exception raised when the edge port is not a free edge.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NotFreeEdgeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException">
            <summary>
            Exception raised when the edge is not valid for placing the water stop.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeForWaterStopException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException">
            <summary>
            Exception raised when an invalid port context type is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortContextTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortCreatedByKnuckleException">
            <summary>
            Exception raised when the port is created by a knuckle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortCreatedByKnuckleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PortCreatedByKnuckleException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SameConnectableException">
            <summary>
            Exception raised when the two ports are the same connectable.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SameConnectableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SameConnectableException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException">
            <summary>
            Exception raised when the intersecting port is not intersecting with the edge.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidIntersectorForEdgeFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException">
            <summary>
            Exception raised when an invalid reference plane type is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidReferencePlaneTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the distance along a curve.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetDistanceAlongCurveException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException">
            <summary>
            Exception raised when an invalid offset direction value is used for the given edge port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidOffsetInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the offset point active entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOffsetPointAEException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the offset point geometry.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateGeometryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateGeometryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateGeometryException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the offset method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetMethodException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the offset value.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetValueException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException">
            <summary>
            Exception raised when an unexpected failure occurs while setting the offset point active entity relations.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOffsetPointAERelationsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException">
            <summary>
            Raised when an unexpected error occurred while computing the sketching plane and curve for edge feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurveForEdgeFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException">
            <summary>
            Raised when an unexpected error occurred while validating the edge port for a water stop.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ValidateEdgeForWaterStopException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException">
            <summary>
            Exception raised if an error is encountered while creating the Assoc point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while creating the Assoc point.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateAssocPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while creating the Assoc point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException">
            <summary>
            Raised when an unexpected error occurred while creating the Assoc point by projecting on a curve.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateByProjectionOnCurveException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException">
            <summary>
            Raised when an unexpected error occurred while getting the molded form naming rule count.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMoldedFormNamingRuleCountException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException">
            <summary>
            Raised when an unexpected error occurred while getting the molded form naming rule solver.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleSolverException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException">
            <summary>
            Raised when an unexpected error occurred while getting the molded form naming rule name.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNamingRuleNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NamingRuleException">
            <summary>
            Exception raised if an unexpected error occurs while setting naming rules for a plate system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NamingRuleException.#ctor(System.String)">
            <summary>
            Instantiates if an unexpected error occurs while setting naming rules for a plate system.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NamingRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an unexpected error occurs while setting naming rules for a plate system.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException">
            <summary>
            Raised when an unexpected error occurred while finding the operator for an operation in the graph.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindOperatorForOperationInGraphByIDException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException">
            <summary>
            Raised when an unexpected error occurred while finding the nearest points between two bodies.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointsBetweenTwoBodiesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException">
            <summary>
            Raised when an unexpected error occurred while getting the nearest point on a wire.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClosestPointOnWireException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException">
            <summary>
            Raised when an unexpected error occurred while getting the normal from a position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetNormalFromPositionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException">
            <summary>
            Raised when an unexpected error occurred while finding the intersection between two objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIntersectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIntersectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetIntersectionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException">
            <summary>
            Exception raised while creating the reference point using an intersection of two curves.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException.#ctor(System.String)">
            <summary>
            Instantiates while creating reference point using an intersection of two curves.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateByTwoCurvesIntersectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates while creating reference point using an intersection of two curves.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException">
            <summary>
            Exception raised while creating the Assoc point for distance along the curve.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException.#ctor(System.String)">
            <summary>
            Instantiates while creating the Assoc point for distance along the curve.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreatePointAtDistanceAlongCurveException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates while creating the Assoc point for distance along the curve.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException">
            <summary>
            Raised when the given input is null.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructFeatureException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException">
            <summary>
            Raised when the given input is null.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStructFeatureTypeException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException">
            <summary>
            Raised while getting the symbol definition from a symbol.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolDefinitionException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException">
            <summary>
            Raised while getting the inputs from the symbol definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSymbolInputsException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException">
            <summary>
            Exception raised if the penetrated object is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedObjectException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingObjectException">
            <summary>
            Exception raised if the penetrating object is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingObjectException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException">
            <summary>
            Raised if the part of the given port is not detailed.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PartNotDetailedException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSlotException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the slot feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSlotException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSlotException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSlotException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSlotException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException">
            <summary>
            Exception raised if an unexpected failure occurs while creating a web cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateWebCutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateWebCutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateWebCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException">
            <summary>
            Exception raised if bounded and bounding ports are not connected with each other.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PortsAreNotConnectedException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateChamferException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the chamfer feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateChamferException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateChamferException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateChamferException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateChamferException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the flange cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateFlangeCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException">
            <summary>
            Exception raised while trying to get the corner ports from the inputs.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCornerFeatureInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException">
            <summary>
            Exception raised if an unexpected error occurs while creating the corner feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateCornerFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the edge cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetInputsEdgeCutException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the slot feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSlotInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the web cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetWebCutInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the chamfer feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetChamferInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the flange cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetFlangeCutInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting inputs from the corner cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerInputsException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetInfoException">
            <summary> 
            Exception raised if an error is encountered while getting the inputs from Assoc point.
            </summary> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInfoException.#ctor(System.String)">
            <summary> 
            Instantiates if an error is encountered while getting the inputs from Assoc point.
            </summary> 
            <param name="strMessage">Error message.</param>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInfoException.#ctor(System.String,System.Exception)">
            <summary> 
            Instantiates if an error is encountered while getting the inputs from Assoc point.
            </summary> 
            <param name="strMessage">Error message.</param>  
            <param name="inner">The COM Exception.</param>  
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException">
            <summary>
            Exception raised if a failure occurs while getting the parents.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetParentsFromAEException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException">
            <summary>
            Exception raised if an unexpected failure occurs while computing the sketching plane and matrix for a corner feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ComputeSketchingPlaneAndCurvesForCornerFeatureException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IncorrectEdgeFeatureConstructionMethodException">
            <summary>
            Raised while accessing an incompatible method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectEdgeFeatureConstructionMethodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectEdgeFeatureConstructionMethodException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException">
            <summary>
            Exception raised while accessing incompatible members.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException"/> class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.OperationNotSupportedException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the sketching plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSketchingPlaneException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the sketching plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketchingPlaneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetSketchingPlaneException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketchingPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetSketchingPlaneException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAlignException">
            <summary>
            Exception raised if an unexpected error occurred determining whether the axis of the member system is aligned or not.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAlignException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetAlignException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAlignException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetAlignException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAlignException">
            <summary>
            Exception raised if an unexpected error occurred while aligning the axis of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAlignException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetAlignException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAlignException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetAlignException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the features on a member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberFeaturesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetContourTypeException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the contour type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContourTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetContourTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContourTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetContourTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRepresentationByNameException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the representation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRepresentationByNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRepresentationByNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRepresentationByNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRepresentationByNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefinitionCollectionException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the DefinitionCollection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.DefinitionCollectionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.DefinitionCollectionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSymbolException">
            <summary>
            Exception raised if an error is encountered while calling the CreateSymbol method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSymbolException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error occurs in calling the CreateSymbol method.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionException">
            <summary>
            Exception raised if an error is encountered while calling the SetReferencesCollection method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetReferencesCollectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error occurs in calling the CreateSymbol method.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSymFileNameException">
            <summary>
            Exception raised if an error is encountered while calling the SetReferencesCollection method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSymFileNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error occurs in calling the CreateSymbol method.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSymFileNameException">
            <summary>
            Exception raised if an invalid symbol file is used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSymFileNameException.#ctor(System.String)">
            <summary>
            Instantiates if an incorrect symbol file is used.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSketch2dDefinitionException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the Sketch2d definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSketch2dDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSketch2dDefinitionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSketch2dDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSketch2dDefinitionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException">
            <summary>
            Exception raised if an unexpected failure occurs while invalid boundaries are used.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundariesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortTypeException">
            <summary>
            Exception raised if the penetrated port is not a face port to create an opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortConnectableException">
            <summary>
            Exception raised if an invalid penetrated port connectable is given to create the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortConnectableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPortConnectableException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCatalogForOpeningException">
            <summary>
            Exception raised if an invalid catalog is used to create the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCatalogForOpeningException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCatalogForOpeningException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSketchingPlaneException">
            <summary>
            Exception raised if an invalid sketching plane is given to create the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSketchingPlaneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketchingPlaneException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPlaneDefinitionTypeException">
            <summary>
            Exception raised if a plane definition type is other than coincident to create the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPlaneDefinitionTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPlaneDefinitionTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FindEquivalentPortException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the port before the cutout.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindEquivalentPortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindEquivalentPortException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindEquivalentPortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindEquivalentPortException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateStructRootContourException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the structure root contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructRootContourException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructRootContourException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructRootContourException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructRootContourException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourSupportException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the support of a structure root contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStructRootContourSupportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourSupportException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStructRootContourSupportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourSupportException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourParentsException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the parents of a structure root contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStructRootContourParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourParentsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStructRootContourParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStructRootContourParentsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreatePortFaceSelectorEntityException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the parents of a structure root contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreatePortFaceSelectorEntityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreatePortFaceSelectorEntityException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreatePortFaceSelectorEntityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreatePortFaceSelectorEntityException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetGeometryPatternException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the geometry pattern.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGeometryPatternException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGeometryPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGeometryPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGeometryPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPlaneGenerationAEPropertiesException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the plane generation active entity properties.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPlaneGenerationAEPropertiesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPlaneGenerationAEPropertiesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPlaneGenerationAEPropertiesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPlaneGenerationAEPropertiesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOperationPatternException">
            <summary>
            Exception raised if an unexpected failure occurs while setting the operation pattern.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOperationPatternException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOperationPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOperationPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOperationPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOperationPatternException">
            <summary>
            Exception raised if an unexpected failure occurs while getting the operation pattern.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperationPatternException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetOperationPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperationPatternException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetOperationPatternException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateStructCutoutContourException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the structure cutout contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructCutoutContourException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructCutoutContourException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructCutoutContourException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructCutoutContourException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException">
            <summary>
            Exception raised if an unexpected failure occurs while creating the opening type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningInputContourException">
            <summary>
            Exception raised if an unexpected error occurred while getting the contour from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningInputContourException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningInputContourException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningSupportObjectException">
            <summary>
            Exception raised if an unexpected error occurred while getting the support object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningSupportObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningSupportObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningAttributesException">
            <summary>
            Exception raised if an unexpected error occurred while getting the attribute collection from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningAttributesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningAttributesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRelationshipException">
            <summary>
            Exception raised if an unexpected error occurred while getting the relation collection from the object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelationshipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelationshipException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCuttingLimitException">
            <summary>
            Exception raised if the cutting limit is set to UserDefined.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCuttingLimitException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCuttingLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOpeningCuttingDepthException">
            <summary>
            Exception raised if an unexpected error occurred while setting the cutting depth value for the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOpeningCuttingDepthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOpeningCuttingDepthException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningCuttingDepthException">
            <summary>
            Exception raised if an unexpected error occurred while getting the cutting depth value from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningCuttingDepthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningCuttingDepthException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningCuttingDepthValueException">
            <summary>
            Exception raised while setting the cutting depth value with less than zero.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningCuttingDepthValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningCuttingDepthValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningContourParentsException">
            <summary>
            Exception raised if an unexpected error occurred while getting the parents from the opening contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningContourParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningContourParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningGeometryException">
            <summary>
            Exception raised if an unexpected error occurred while getting the geometry from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningGeometryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningGeometryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPlaneGenerationAEPropertiesException">
            <summary>
            Exception raised if an unexpected error occurred while getting the plane type from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlaneGenerationAEPropertiesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlaneGenerationAEPropertiesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOpeningBoundariesException">
            <summary>
            Exception raised if an unexpected error occurred while getting the plane type from the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOpeningBoundariesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOpeningBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException">
            <summary>
            Exception raised if the specified section face is not found.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SectionFaceTypeNotFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException">
            <summary>
            Exception raised if an unexpected error occurred while getting an extended lateral surface.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetExtendedLateralSurfaceException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWireBodyPropertiesException">
            <summary>
            Exception raised if an unexpected error occurred while getting properties of a sketch contour.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWireBodyPropertiesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetWireBodyPropertiesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWireBodyPropertiesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetWireBodyPropertiesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException">
            <summary>
            Exception raised if the Sketch2d definition is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSketch2dDefinitionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StopComputeAtObjectException">
            <summary>
            Exception raised if an unexpected error occurred while applying stop during the compute of a object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StopComputeAtObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.StopComputeAtObjectException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StopComputeAtObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.StopComputeAtObjectException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.UpdateObjectException">
            <summary>
            Exception raised if an unexpected error occurred while updating an object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UpdateObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.UpdateObjectException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UpdateObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.UpdateObjectException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ClearStopsException">
            <summary>
            Exception raised if an unexpected error occurred while clearing the compute stop which was applied before the compute.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ClearStopsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ClearStopsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ClearStopsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ClearStopsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningDescriptionException">
            <summary>
            Exception raised if an unexpected failure occurred while creating the opening description.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningDescriptionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningSketch2DException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the Sketch2D contour of the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningSketch2DException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningSketch2DException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningDesignTypeException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the design type of the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningDesignTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningDesignTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningPlanningMethodException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the Planning method of the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningPlanningMethodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningPlanningMethodException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OpeningProductionMethodException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the Production method of the opening.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningProductionMethodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OpeningProductionMethodException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateOpeningTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPlateGeometryException">
            <summary>
            Exception raised if there is a failure to get the geometry of the plate system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlateGeometryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPlateGeometryException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlateGeometryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPlateGeometryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException">
            <summary>
            Exception raised if the codelist value is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCodeListValueException.#ctor(System.String)">
            <summary>
            Instantiates if the codelist value is not valid.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortTypeException">
            <summary>
            Exception raised if the given bounding port type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOpeningsException">
            <summary>
            Exception raised if the object is null.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOpeningsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPortTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the generic plate part type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException">
            <summary>
            Exception raised if an unexpected failure occurred while setting the generic plate part type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the generic plate part category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetGenericPlatePartCategoryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException">
            <summary>
            Exception raised if an unexpected failure occurred while setting the generic plate part category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetGenericPlatePartCategoryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidThicknessException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the generic plate part thickness.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidThicknessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidThicknessException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException">
            <summary>
            Exception raised if an unexpected failure occurred while creating a generic plate part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GenericPlatePartCreationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetInputException">
            <summary>
            Exception raised if an unexpected error occurred while getting the input by providing index.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInputException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetInputException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetInputException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetInputException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotFoundException">
            <summary>
            Exception raised if the given interface does not exist in the metadata.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InterfaceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RoleNameNotFoundException">
            <summary>
            Exception raised if the given role name does not exist in the metadata.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RoleNameNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.RoleNameNotFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidRelationException">
            <summary>
            Exception raised if a relation is not found in the metadata with the combination of the interface name and the role name.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidRelationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidRelationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotSupportedException">
            <summary>
            Exception raised if the given interface is not supported by the business object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InterfaceNotSupportedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InterfaceNotSupportedException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FindOperationException">
            <summary>
            Exception raised if an unexpected failure occurred while getting the geometry operations performed on the business object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindOperationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindOperationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FindOperationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DuplicateBoundariesException">
            <summary>
            Exception raised if boundary collection has duplicate boundaries.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DuplicateBoundariesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateBoundariesException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DuplicateBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateBoundariesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyExistsException">
            <summary>
            Exception raised if the auxiliary port already exists in the assembly connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyExistsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException">
            <summary>
            Exception raised if the collection has a duplicate object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.DuplicateObjectInCollectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException">
            <summary>
            Exception raised if the collection has a null element.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NullElementInCollectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortStateException">
            <summary>
            Exception raised if the auxiliary port is a late binding port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortStateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortStateException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortTypeException">
            <summary>
            Exception raised if the auxiliary port is not a face port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortConnectableException">
            <summary>
            Exception raised if the auxiliary port connectable is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortConnectableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAuxiliaryPortConnectableException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionExistsException">
            <summary>
            Exception raised if an intersection or overlapping geometry does not exist between the auxilary port and primary port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoIntersectionExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionExistsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyConnectedWithPrimaryPortException">
            <summary>
            Exception raised if the auxiliary port is already connected with the primary port of the assembly connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyConnectedWithPrimaryPortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AuxiliaryPortAlreadyConnectedWithPrimaryPortException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPartTypeException">
            <summary>
            Exception raised if the penetrated part object type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPartTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratedPartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingPartTypeException">
            <summary>
            Exception raised if the penetrating part object type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingPartTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPenetratingPartTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRelatedPortException">
            <summary>
            Exception raised if an unexpected error occurred while getting the related port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelatedPortException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRelatedPortException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelatedPortException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetRelatedPortException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidParentSystemException">
            <summary>
            Exception raised if the parent system is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidParentSystemException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidParentSystemException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FailedToAccessOrMissingSymFileException">
            <summary>
            Exception raised if the .sym file associated with the given cross section is missing or not accessible on the symbol share.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FailedToAccessOrMissingSymFileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.FailedToAccessOrMissingSymFileException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetHeightAbovePenetratingObjectException">
            <summary>
            Exception raised if there is a problem while calculating the height above penetrated object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetHeightAbovePenetratingObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetHeightAbovePenetratingObjectException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBottomSupportException">
            <summary>
            Raised when the bottom support is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBottomSupportException.#ctor(System.String)">
            <summary>
            raaised when the bottom support is not valid
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidTopSupportException">
            <summary>
            Raised when the top support is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidTopSupportException.#ctor(System.String)">
            <summary>
            raaised when the top support is not valid
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSideReferenceException">
            <summary>
            Raised when the tside reference is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSideReferenceException.#ctor(System.String)">
            <summary>
            raaised when the top support is not valid
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidInputsException">
            <summary>
            Raised when given inputs are invalid
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidInputsException.#ctor(System.String)">
            <summary>
            Raised when given inputs are invalid
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidInputsException.#ctor(System.String,System.Exception)">
            <summary>
            Raised when given inputs are invalid
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException">
            <summary>
            Raised when a failure occurs accessing the selection rule selections. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAvailableSelectionsException.#ctor(System.String)">
            <summary>
            Raised when a failure occurs accessing the selection rule selections 
            </summary>
            <param name="partClassName">Part class whose selection rules were not accessable.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException">
            <summary>
            Raised when the question does not exist on any part class on this part's selection hierarchy.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NoQuestionFoundException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException">
            <summary>
            Raised when the parameter does not exist on this part's parameter rule.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.NoParameterFoundException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidEdgeIdToChamferException">
            <summary>
            Raised if the edgeIdToChamfer is not found on the feature edges.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEdgeIdToChamferException.#ctor(System.String)">
            <summary>
            Raised if the edgeIdToChamfer is not found on the feature edges.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEdgeIdToChamferException.#ctor(System.String,System.Exception)">
            <summary>
            Raised if the edgeIdToChamfer is not found on the feature edges.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException">
            <summary>
            Key type must be of type string or integer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidKeyTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException">
            <summary>
            The input collection is not defined in the geometric construction definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InputNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InputNotFoundException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException">
            <summary>
            The parameter is not defined in the geometric construction definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ParameterNotFoundException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">
            <summary>
            Raised when the geometric construction type name is not available in the catalog and disk.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IncorrectTypeOfOutputException">
            <summary>
            Raised if output type does not match with the type defined in the geometric construction definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectTypeOfOutputException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectTypeOfOutputException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OutputNotFoundException">
            <summary>
            The output collection is not defined in the geometric construction definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OutputNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.OutputNotFoundException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionAssemblyOutputException">
            <summary>
            Raised when the geometric construction is not an output of the geometric construction assembly.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionAssemblyOutputException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionAssemblyOutputException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidProjectNameException">
            <summary>
            Raised if the project name is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidProjectNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidProjectNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidClassNameException">
            <summary>
            Raised if the class name is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidClassNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidClassNameException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidComponentException">
            <summary>
            Raised if the component collection contains the geometric construction assembly object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidComponentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidComponentException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException">
            <summary>
            Raised if the chamfer on an end cut is placed on the profile with a cross section that is other than an <i>FB</i> cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectCrossSectionTypeException"/> class.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException">
            <summary>
            Raised if the chamfer start or end extensions are a negative number.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionTypeException">
            <summary>
            Raised if the chamfer extension type is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidChamferExtensionTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException">
            <summary>
            Exception raised for an invalid number of attributes on a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidNumberOfAttributesException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidParameterTypeException">
            <summary>
            Exception raised if the ParameterValueAttribute added on Parameter or ParameterOfInput when the parameter type is not PTCodelist.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidParameterTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidParameterTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException">
            <summary>
            Exception raised when a field variable is not preceded by the correct attribute type in a custom GeometricConstructionDefinition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AttributeMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.AttributeMissingException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GeometricConstructionDefinitionNotInitializedException">
            <summary>
            Raised when the GeometricConstructionDefinition cannot be initialized properly.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometricConstructionDefinitionNotInitializedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GeometricConstructionDefinitionNotInitializedException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionException">
            <summary>
            Raised if Assemblyconnection has
            no bounded objects or
            no bounding objects.   
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidAssemblyConnectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">
            <summary>
            Raised if the context type is not the expected type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">
            <summary>
            Raised if more than one port meets the given criteria.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCornerFeatureConstructionMethodException">
            <summary>
            Raised when unable to get the corner feature construction method from the given corner feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCornerFeatureConstructionMethodException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCornerFeatureConstructionMethodException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPortsException">
            <summary>
            Raised if the bounding part or bounded part is not a profile part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortsException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException">
            <summary>
            Raised if an unexpected failure occurs while getting the idealized boundary from given bounded and bounding ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetIdealizedBoundaryException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PermissionGroupNotInConnectionException">
            <summary>
            Raised when the given permission group object does not belong to the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PermissionGroupNotInConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.PermissionGroupNotInConnectionException"/> class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidEndCutTypeException">
            <summary>
            Raised if the given EndCutType value is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEndCutTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEndCutTypeException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPartException">
            <summary>
            Raised if bounding part is not a stiffener part to get the flange clearance from bounding plate.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundedPartException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPartException">
            <summary>
            Raised if bounding part is not a plate part to get the flange clearance for bounded stiffener.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidBoundingPartException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPlaneDefinitionException">
            <summary>
            Exception raised if an error is encountered in the plane definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPlaneDefinitionException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in the plane definition.
            </summary>
            <param name="exceptionMessage">The exception message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException">
            <summary>
            Raised if the detailed part is other than the collar part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidDetailedPartException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException">
            <summary>
            Raised when the faceContextType, sectionIdAlongU, or sectionIdAlongV is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPortDataException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException">
            <summary>
            Raised if an error is encountered while accessing the parameter rule value.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.ParameterRuleException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCrossSectionException">
            <summary>
            Raised when the CrossSection is not valid.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCrossSectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCrossSectionException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberPartException">
            <summary>
            Raised if an error is encountered while creating HandRail with invalid MemberPart.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidMemberPartException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidMemberPartException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationComponent">
            <summary>
            Implementation of FoundationComponent class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this object from the database.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.#ctor(Ingr.SP3D.Structure.Middle.Foundation,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Creates either a Footing component or EquipmentFoundation component based upon the given inputs.
            </summary>
            <param name="foundation">Footing or EquipmentFoundation.</param>
            <param name="part">Footing component or EquipmentFoundation component part.</param>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when the database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a Footing or EquipmentFoundation component entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Raised when there is failure to set the root selector part.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.GetStablePlanarPort(System.Object)">
            <summary>
            Method to get the stable port from selected object if applicable.
            </summary>
            <param name="port">Located object as supporting object.</param>
            <returns>Stable port from the located object if gettable inless return the same located object.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Material">
            <summary>
            Gets or sets the material of the component.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">Raised if unable to get the material object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">Raised if unable to set the material object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNullObjectException">Raised if unable to get the COM object.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if the material to set is a null object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialStandard">
            <summary>
            Gets the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialType">
            <summary>
            Gets the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialGrade">
            <summary>
            Gets the material grade.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Part">
            <summary>
            Gets or sets the definition or part on the foundation component.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Raised when there is failure to get the part from the foundation component.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Raised when trying to set the part on the foundation component.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SystemParent">
            <summary>
            Gets the read-only system parent. System parent cannot be set on the foundation components. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationComponentNotSupportedException">Raised while setting the system parent on a foundation component.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Volume">
            <summary>
            Gets the volume of the foundation components. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SurfaceArea">
            <summary>
            Gets the surface area of the foundation components. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SupportingObjects">
            <summary>
            Sets the supporting objects for foundation component.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised when the argument value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Footing">
            <summary>
            Implementation for the Footing class. This class is used for supporting a member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            Creates a footing at the bottom of the supported member system.
            </summary>
            <param name="parentSystem">Parent system under which the footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedMember">Member system for which the footing is to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported member.
            <para>Raised when an invalid supported object is used to create a footing.</para></exception>
            <example>This is an example of how to create footing with a single supported member system.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            'Create a member system
            Dim supportedMember As MemberSystem
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("RectPierAndSlabFtg"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedMember)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d)">
            <summary>
            Creates a footing at the given point.
            </summary>
            <param name="parentSystem">Parent system under which the footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedPoint">Point where the footing is to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported point.
            <para>Raised when an invalid supported object is used to create a footing.</para></exception>
            <example>This is an example of how to create footing with single supported point.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            Dim supportedPoint As New Point3d(2, 2, 8)
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("RectPierAndSlabFtg"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedPoint)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates a footing at the bottom of the supported member system to the supporting object.
            </summary>
            <param name="parentSystem">Parent system under which a footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedMember">Member system for which a footing is to be created.</param>
            <param name="supportingObject">Bottom plane or supporting surface for the footing.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported member or supporting object.
            <para>Raised when an invalid supported or supporting object is used to create a footing.</para></exception>
            <example>This is an example of how to create a footing with supported member system and supporting object.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            'Create a member system.
            Dim supportedMember As MemberSystem
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("BoundedRectPierFootingAsm"), Part) 
            
            Dim footing As New Footing(parentSystem, footingPart, supportedMember, supportingObject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Creates a footing at the given point upto the supporting object.
            </summary>
            <param name="parentSystem">Parent system under which footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedPoint">Point where the footing is to be created.</param>
            <param name="supportingObject">Bottom plane or supporting surface for the footing.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported point or supporting object.
            <para>Raised when an invalid supported or supporting object is used to create a footing.</para></exception>
            <example>This is an example of how to create a footing with supported member system and supporting object.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem) 
            
            Dim supportedPoint As New Point3d(2, 2, 8)
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("BoundedRectPierFootingAsm"), Part) 
            
            Dim footing As New Footing(parentSystem, footingPart, supportedPoint, supportingObject)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.MemberSystem})">
            <summary>
            Creates a footing with the collection of member systems.
            </summary>
            <param name="parentSystem">Parent system under which the footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedMembers">Collection of member systems for which a footing is to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">Raised when the supported object collection has less than two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported members.
            <para>Raised when invalid supported objects are used to create a footing.</para></exception>
            <example>This is an example of how to create footing with a multiple supported member system.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            'Create supported member collection. 
            Dim supportedMembers As New Collection(Of MemberSystem)() 
            supportedMembers.Add(supportedMember1) 
            supportedMembers.Add(supportedMember2) 
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("OctSlab_CombFootingAsm"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedMembers)
            </code>
            </example>      
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Point3d})">
            <summary>
            Creates a footing with the collection of points.
            </summary>
            <param name="parentSystem">Parent system under which footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedPoints">Collection of points where the footing is to be created.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">Raised when the supported object collection has less than two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when part is not valid for the supported points.
            <para>Raised when invalid supported objects are used to create a footing.</para></exception>
            <example>This is an example of how to create a footing with multiple supported points.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            Dim supportedPoints As New Collection(Of Point3d)() 
            supportedPoints.Add(New Point3d(-10, 0, 5)) 
            supportedPoints.Add(New Point3d(-13, 0, 5) ) 
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("OctSlab_CombFootingAsm"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedPoints)
            </code>
            </example>         
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.MemberSystem},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Creates a footing with the collection of member systems and collection of supporting objects.
            </summary>
            <param name="parentSystem">Parent system under which a footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedMembers">Collection of member systems for which a footing is to be created.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">Raised when the supported object collection has less than two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when part is not valid for the supported members.
            <para>Raised when invalid supported or supporting objects are used to create a footing.</para></exception>
            <example>This is an example of how to create a footing with a multiple supported member system and supporting objects.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            'Create supported member collection. 
            Dim supportedMembers As New Collection(Of MemberSystem)() 
            supportedMembers.Add(supportedMember1) 
            supportedMembers.Add(supportedMember2) 
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            Dim supportingObjects As New Collection(Of BusinessObject)()
            supportingObjects.Add(supportingObject)
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("RectPierAndSlab_CombFootingAsm"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedMembers, supportingObjects)
            </code>
            </example>           
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Point3d},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Creates a footing with the collection of points and collection of supporting objects.
            </summary>
            <param name="parentSystem">Parent system under which a footing needs to be created.</param>
            <param name="part">The footing catalog part.</param>
            <param name="supportedPoints">Collection of points where a footing is to be created.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">Raised when a supported object collection has less than two objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">Raised when a part is not valid for the supported points.
            <para>Raised when invalid supported or supporting objects are used to create a footing.</para></exception>
            <example>This is an example of how to create a footing with multiple points and supporting objects.
            <code>
            'Create parent system.
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            Dim structuralSystem As New StructuralSystem(plant.RootSystem)
            
            Dim supportedPoints As New Collection(Of Point3d)() 
            supportedPoints.Add(New Point3d(-10, 0, 5)) 
            supportedPoints.Add(New Point3d(-13, 0, 5)) 
            
            'Create grid system.
            Dim gridSystem As New GridSystem(structuralSystem, CoordinateSystem.CoordinateSystemType.Grids, New Position(0.0, 0.0, 0.0))
            Dim zPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim xPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim yPlaneInputs As New GridAxisInputs(0.0, 1.0, 5.0)
            Dim gridCoordinateSystem As CoordinateSystem = gridSystem.GetGridSystem(GridCoordinateTypes.Rectangular, zPlaneInputs, xPlaneInputs, yPlaneInputs)
            Dim zAxis As GridAxis = gridSystem.GetGridAxis(AxisType.Z)
            Dim supportingObject As GridElevationPlane = zAxis.GetPlane(0.0) 
            Dim supportingObjects As New Collection(Of BusinessObject)()
            supportingObjects.Add(supportingObject)
            
            'Get the catalog part.
            Dim catalogStructHelper As New CatalogStructHelper() 
            Dim footingPart As Part = DirectCast(catalogStructHelper.GetPart("RectPierAndSlab_CombFootingAsm"), Part) 
            
            Dim footing As New Footing(structuralSystem, footingPart, supportedPoints, supportingObjects)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Structure.Middle.Footing)">
            <summary>
            Creates a footing using an existing footing.
            </summary>
            <param name="footing">The footing to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Raised when the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Raised when there is failure to create a footing entity.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Raised when database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of how to create a footing with an existing footing.
            <code>
            'Create a footing which will be copied.
            Dim footingToCopy As Footing
            
            Dim footing As New Footing(footingToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetInputHelper">
            <summary>
            Retrieves the footing input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetSupportElements(System.Object,System.Object)">
            <summary>
            Retrieves the supported and supporting elements for the footing.
            </summary>
            <param name="supportedElements">Instance of footing supported elements.</param>
            <param name="supportingElements">Instance of footing supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the footing supported and supporting elements.
            </summary>
            <param name="supportedElements">Collection of supported elements.</param>
            <param name="supportingElements">Collection of supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetSupportCollection(System.Object)">
            <summary>
            Converts IJElements collections to a BusinessObject collection.
            </summary>
            <param name="elements">Collections of IJElements.</param>
            <returns>Collection of Business Objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetInputCriteria">
            <summary>
            Retrieves the footing input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.ValidateInputObjectType(System.Object)">
            <summary>
            Checks whether the input object is valid or not.
            </summary>
            <param name="oSupportedObject">Input support object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Gets the valid supported objects.
            </summary>
            <param name="InputSupportedObjects">Collection of valid supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.ValidateFootingInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate the Footing inputs.
            </summary>
            <param name="part">Footing Part.</param>
            <param name="oSupportedObjectColl">Collection of Supported Business Objects.</param>
            <param name="supportingObjects">Collection of Supporting Business Objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.SetSupportedSupportingInputs(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Sets the supported and supporting inputs to the footing object.
            This routine is called by those constructors which have supporting objects also as inputs.
            </summary>
            <param name="supportedObjects">Collection of Supported Business Objects.</param>
            <param name="supportingObjects">Collection of Supporting Business Objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.AreInputObjectsHomogenous(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks if the input supported objects collection has homogenous objects or not and raise appropriate exception.
            </summary>
            <param name="supportedObjects">Collection of supported objects.</param>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface">
            <summary>
            Provides generalization of all entities supporting geometric construction topology surface-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction topology surface occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologySurface.</para></exception>
            <example>This is an example of how to create a transient geometric construction topology surface occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "FacePortExtractor"
            
            Dim topologySurface As New TopologySurface(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction topology surface occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction topology surface.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type TopologySurface.</para></exception>
            <example>This is an example of how to create a persistent geometric construction topology surface occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            
            Dim geometricConstructionTypeName As String = "SurfaceBodyExtractor"
            
            Dim topologySurface As New TopologySurface(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="complexString">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">iCS cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim complexString3d As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            topologySurface.AddBoundary(complexString3d)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.RemoveBoundary(System.Int32)">
            <summary>
            Removes boundary i.
            </summary>
            <param name="i">Integer</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the RemoveBoundary method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            topologySurface.RemoveBoundary(1)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the topology surface.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the RemoveAllBoundaries method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            topologySurface.RemoveAllBoundaries()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at i.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="complexString">Output boundary.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the GetBoundary method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim complexString3d As ComplexString3d
            topologySurface.GetBoundary(1, complexString3d)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at index i.
            <para>Note: This method is not adding a boundary, but replacing the boundary that is at index i.</para>
            </summary>
            <param name="i">Integer</param>
            <param name="complexString">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the SetBoundary method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim complexString3d As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            topologySurface.SetBoundary(1, complexString3d)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the GetBoundaries method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim colComplexString As Collection(Of ComplexString3d) = Nothing
            topologySurface.GetBoundaries(1, colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries and removes any previous boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the SetBoundaries method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim colComplexString As Collection(Of ComplexString3d) 'Substitute this line with the actual collection of ComplexString3d instance.
            topologySurface.SetBoundaries(colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a hole to one or more existing boundaries.
            </summary>
            <param name="complexString">ComplexString3d defining a hole.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
            <example>This is an example of the AddHole method.
            <code>
            Dim topologySurface As TopologySurface 'Substitute this line with the actual geometric construction topology surface instance.
            Dim complexString As ComplexString3d 'Substitute this line with the actual ComplexString3d instance.
            topologySurface.AddHole(complexString)
            </code>
            </example>         
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.RootPoint">
            <summary>
            Gets or sets the root point.
            Returns an immutable position.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.Normal">
            <summary>
            Gets or sets the plane normal.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">An invalid argument was given for the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.VDirection">
            <summary>
            Gets the V-direction.
            Returns an immutable vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.Reversed">
            <summary>
            Gets or sets the Reversed property. Get reverses the V-direction of the plane.
            Normally (Reversed=False) the V-direction is determined by the normal X U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface.BoundaryCount">
            <summary>
            Returns the number of boundaries.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in an invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.TopologySurface._PlaneHelper">
            <summary>
            Gets the _ plane helper.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType">
            <summary>
            Enumerator for identifying the geometric construction output type.    
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Point3d">
            <summary>
            Point3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Line3d">
            <summary>
            Line3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Plane3d">
            <summary>
            Plane3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.LineString3d">
            <summary>
            LineString3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.CoordinateSystem">
            <summary>
            Coordinate system geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.TopologySurface">
            <summary>
            Topology surface geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.TopologyCurve">
            <summary>
            Topology curve geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.TopologySolid">
            <summary>
            Topology solid geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.ComplexString3d">
            <summary>
            ComplexString3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Arc3d">
            <summary>
            Arc3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.BSplineCurve3d">
            <summary>
            BSplineCurve3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.BSplineSurface3d">
            <summary>
            BSplineSurface3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Circle3d">
            <summary>
            Circle3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Cone3d">
            <summary>
            Cone3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Ellipse3d">
            <summary>
            Ellipse3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.EllipticalArc3d">
            <summary>
            EllipticalArc3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.PolyMesh3d">
            <summary>
            PolyMesh3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Projection3d">
            <summary>
            Projection3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Revolution3d">
            <summary>
            Revolution3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.RuledSurface3d">
            <summary>
            RuledSurface3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Sphere3d">
            <summary>
            Sphere3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.Torus3d">
            <summary>
            Torus3d geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.CompositeGeometry">
            <summary>
            Composite geometry geometric construction output type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType.SharedParameter">
            <summary>
            Shared parameter geometric construction output type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType">
            <summary>
            Enumerator for override delete propagation, used in ComputedOutputAttribute of custom GeometricConstructionDefinitions. 
            Default behavior is to propagate delete from computed output to GeometricConstructionAssembly and not to propagate delete from GeometricConstructionAssembly to outputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType.PropagateFromAssembly">
            <summary>
            Propagate delete from GeometricConstructionAssembly to outputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType.DoNotPropagateFromOutput">
            <summary>
            Do not propagate delete from outputs to GeometricConstructionAssembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType.OverridePropagateFromAssembly">
            <summary>
            Delete propagation override is done by the GeometricConstructionDefinition from GeometricConstructionAssembly to outputs.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType.OverridePropagateFromOutput">
            <summary>
            Delete propagation override is done by the GeometricConstructionDefinition from outputs to GeometricConstructionAssembly.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Common.Middle.GeometricConstructions.OverrideDeletePropagationType.OverrideBoth">
            <summary>
            Delete propagation override is done for both sides.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry">
            <summary>
            Provides generalization of all entities supporting geometric construction composite geometry like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction composite geometry occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type CompositeGeometry.</para></exception>
            <example>This is an example of how to create a transient geometric construction composite geometry occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "CompositeGeometry"
            
            Dim compositeGeometry As New CompositeGeometry(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction composite geometry occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction composite geometry.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred  while creating geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type CompositeGeometry.</para></exception>
            <example>This is an example of how to create a persistent geometric construction composite geometry occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "CompositeGeometry"
            
            Dim compositeGeometry As New CompositeGeometry(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.Add(System.String,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Adds a geometric construction geometry to the composite geometry.
            </summary>
            <param name="key">Key to identify the geometry.</param>
            <param name="geometryType">Geometry to add.</param>       
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailedToAddCompositeGeometryException">Raised when an unexpected failure occurred while adding geometry to the composite geometry.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidKeyArgumentException">Raised when a key is already present.</exception>
            <example>This is an example of the Add method.
            <code>
            Dim compositeGeometry As CompositeGeometry 'Substitute this line with the actual geometric construction composite geometry instance.
            Dim geometryType As BusinessObject 'Substitute this line with the actual geometric instance.
            compositeGeometry.Add("1", geometryType)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.Clear">
            <summary>
            Removes every object from the composite geometry.
            </summary>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while removing all the elements from collection.</exception>
            <example>This is an example of the Clear method.
            <code>
            Dim compositeGeometry As CompositeGeometry 'Substitute this line with the actual geometric construction composite geometry instance.        
            compositeGeometry.Clear()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.RemoveByKey(System.String)">
            <summary>
            Removes a geometry given its key from the composite geometry.
            </summary>
            <param name="key">The key of the geometry.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while removing an item by key from the collection.</exception>
            <example>This is an example of the RemoveByKey method.
            <code>
            Dim compositeGeometry As CompositeGeometry 'Substitute this line with the actual geometric construction composite geometry instance.
            compositeGeometry.RemoveByKey("1")
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.Item(System.String)">
            <summary>
            Gets the object with the given key from the composite geometry.
            </summary>
            <param name="key">The key of the object.</param>
            <returns>The GeometricConstruction with the input key.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnFailedInCompositeGeometryException">Raised when an unexpected error occurred while getting geometry by key.</exception>
            <example>This is an example of the this [string key] method.
            <code>
            Dim compositeGeometry As CompositeGeometry 'Substitute this line with the actual geometric construction composite geometry instance.
            Dim geometryType As BusinessObject = compositeGeometry["1"]
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.Count">
            <summary>
            Gets the number of objects contained in the composite geometry.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected error occurred while getting the count of items in the collection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.CompositeGeometry.Geometries">
            <summary>
            Returns the collection of geometries from the composite geometry.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.SurfaceType">
            <summary>
            New enumerator for the surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.Plane">
            <summary>
            Plane surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.Cone">
            <summary>
            Cone surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.BSpline">
            <summary>
            B-spline surface type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurface">
            <summary>
            TopologySurface class implements ISurface. Its SurfaceType property helps in explicit cast.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurface.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurface.op_Explicit(Ingr.SP3D.Structure.Middle.TopologySurface)~Ingr.SP3D.Structure.Middle.TopologySurfacePlane">
            <summary>
            Explicit cast operator to be able to cast TopologySurface to TopologySurfacePlane.
            </summary>
            <param name="topologySurface">TopologySurface object.</param>
            <returns>Instance of TopologySurfacePlane.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurface.Type">
            <summary>
            Gets the topology surface type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurface.Range">
            <summary>
            Gets the range box representing the range of this topology surface.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurfacePlane">
            <summary>
            TopologySurfacePlane transient class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.#ctor(Ingr.SP3D.Structure.Middle.TopologySurface)">
            <summary>
            TopologySurfacePlane constructor.
            </summary>
            <param name="oTopologySurface">TopologySurface object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="iCS">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if the arguments are null.</exception>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddBoundaryException">Unexpected failure when adding a boundary to a plane.</exception>
            <example>This is an example of adding a boundary.
            <code>           
            oTopologySurface.AddBoundary(complexString3d) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
             <summary>
             Adds a hole to an existing one or more boundaries.
             </summary>
             <param name="iCS">ComplexString3d defining a hole.</param>
             <exception cref="T:System.ArgumentNullException">Exception raised if arguments are null.</exception>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddHoleException">Unexpected failure while adding a hole to a plane.</exception>
             <example>This is an example of adding a hole in the plane.
             <code>
             Dim pos1 As New Position(5R, 5R, 0R) 
             Dim pos2 As New Position(7.5, 5R, 0R) 
             Dim pos3 As New Position(7.5, 7.5, 0R) 
            
             Dim curveCollection As New Collection(Of ICurve)() 
             curveCollection.Add(New Line3d(pos1, pos2)) 
             curveCollection.Add(New Line3d(pos2, pos3)) 
             curveCollection.Add(New Line3d(pos3, pos1)) 
            
             Dim complexString3dHole As New ComplexString3d(curveCollection) 
             oTopologySurface.AddHole(complexString3dHole) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colCS">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundariesException">Unexpected failure while getting the boundaries of a plane.</exception>
            <example>This is an example of getting all boundaries.
            <code>
            Dim boundaryCollection As Collection(Of ComplexString3d) 
            oTopologySurface.GetBoundaries(boundaryCollection) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at the specified index.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="oCS">Output boundary.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryException">Unexpected failure while getting the boundary of a plane.</exception>
            <example>This is an example of getting a boundary at a specified index.
            <code>
            Dim complexString3d As ComplexString3d 
            oTopologySurface.GetBoundary(1, complexString3d) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException">Unexpected failure while removing all boundaries of a plane.</exception>
            <example>This is an example of removing all boundaries.
            <code>
            oTopologySurface.RemoveAllBoundaries()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RemoveBoundary(System.Int32)">
            <summary>
            Removes the boundary at specified index.
            </summary>
            <param name="i">The index of the boundary to remove.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException">Unexpected failure while removing the boundary of a plane.</exception>
            <example>This is an example of removing a boundary at a specified index.
            <code>
            oTopologySurface.RemoveBoundary(2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
             <summary>
             Sets the boundaries
             and removes any previous boundaries.
             </summary>
             <param name="colCS">Collection of ComplexString3d objects.</param>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundariesException">Unexpected failure while getting or setting the root point of a plane.</exception>
             <example>This is an example of setting boundaries.
             <code>
             Dim complexString3DCollection As New Collection(Of ComplexString3d)() 
             complexString3DCollection.Add(complexString3d) 
             complexString3DCollection.Add(complexString3dHole) 
            
             oTopologySurface.SetBoundaries(complexString3DCollection) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
             <summary>
             Sets the boundary at the specified index.
             <para>Note: This method is not adding a boundary, but replacing the boundary which is at index.</para>
             </summary>
             <param name="i">Integer</param>
             <param name="iCS">ComplexString3d object.</param>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryException">Unexpected failure while setting a boundary of a plane.</exception>
             <example>This is an example of setting a boundary at a specified index.
             <code>
             Dim pos1 As New Position(5R, 5R, 0R) 
             Dim pos2 As New Position(7.5, 5R, 0R) 
             Dim pos3 As New Position(7.5, 7.5, 0R) 
            
             Dim curveCollection As New Collection(Of ICurve)() 
             curveCollection.Add(New Line3d(pos1, pos2)) 
             curveCollection.Add(New Line3d(pos2, pos3)) 
             curveCollection.Add(New Line3d(pos3, pos1)) 
            
             Dim complexString3dHole As New ComplexString3d(curveCollection) 
             oTopologySurface.SetBoundary(1, complexString3dHole) 
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.BoundaryCount">
            <summary>
            Gets the number of boundaries.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BoundaryCountException">Unexpected failure while getting the boundary count of a plane.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.Normal">
            <summary>
            Gets or sets the plane normal.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NormalException">Unexpected failure while getting or setting the normal of a plane.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.Reversed">
            <summary>
            Gets or sets whether reversed.  Geting reverses the V-direction of the plane.
            Normally (Reversed = False) the V-direction is determined by normal X U-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ReversedException">Unexpected failure while getting or setting the reversed flag of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RootPoint">
            <summary>
            Gets or sets the root point of the plane.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RootPointException">Unexpected failure while getting or setting the root point of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.UDirectionException">Unexpected failure while getting or setting the U-direction of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.VDirection">
            <summary>
            Gets the V-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.VDirectionException">Unexpected failure while getting the V-direction of a plane.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Slab">
            <summary>
            Slab class definition. This class is used to model solid surfaces in the model.
            It consists of one or multiple layers as defined in the SlabComposition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Instantiates a Slab object from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject that corresponds to a Slab object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CreateSlab(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,System.Double)">
            <summary>
            Creates the slab.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="planeDefinition">The plane definition.</param>
            <param name="sketchPlane">The sketch plane.</param>
            <param name="listBoundaryDefinition">The list boundary definition.</param>
            <param name="slabType">Type of the slab.</param>
            <param name="slabComposition">The slab composition.</param>
            <param name="thickness">The thickness.</param>
            <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Given thickness value is not valid.</exception>    
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create a slab in the slab factory.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},Ingr.SP3D.ReferenceData.Middle.Part,System.Double)">
             <summary>
             Creates a slab.
             </summary>
             <param name="parentSystem">The parent system.</param>
             <param name="planeDefinition">The supporting plane definition.</param>
             <param name="sketchPlane">The sketching plane.</param>
             <param name="boundaryDefinitions">The list of boundary definition.</param>
             <param name="slabPart">The slab type part.</param>
             <param name="thickness">The total thickness of the slab.</param>
             <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Given thickness value is not valid.</exception>    
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
             <example>This is an example of Slab constructor.
             <code>
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim oSlabPart As Part = DirectCast(oCatalogBaseHelper.GetPart("4"" Cast in Place","CIP_4""_Fc3"), Part)
             Dim dThickness As Double = 0.1
             Dim oZPlane_0 As New GridElevationPlane(0, oZAxis)
             Dim oXPlane_65 As New GridPlane(65, oXAxis)
             Dim oPlaneDefinition_coincident As New PlaneDefinition(oZPlane_0)
             Dim ListBoundaryDefinition As New List(Of BoundaryDefinition)()
             'Create a Sketch3d and use that as one of the boundaries.
             Dim oSketchColl As Collection(Of SketchPoint) = New Collection(Of SketchPoint)
             Dim oSketch3d As Sketch3D = New Sketch3D(oPlant)
             Dim oSketchPoint1 As SketchPoint = New SketchPoint(48.0, 50.0, 90.0)
             Dim oSketchPoint2 As SketchPoint = New SketchPoint(72.5, 25.0, 90.0)
             Dim oSketchPoint3 As SketchPoint = New SketchPoint(48.0, 0.0, 90.0)
             oSketchColl_slab10.Clear()
             Dim oEllipseFeature As EllipticalArcFeature = oSketchPoint3.CreateEllipticalArcFeature(oSketchPoint2, oSketchPoint1)
             oSketchColl_slab10.Add(oSketchPoint1)
             oSketchColl_slab10.Add(oSketchPoint2)
             oSketchColl_slab10.Add(oSketchPoint3)
             oSketch3d.SetSketchPoints(oSketchColl_slab10)
             'Create boundary definitions such that they make a closed boundary and add to the ListBoundaryDefinition.
             oBoundaryDefinition1 = New BoundaryDefinition(oMember1.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
             oBoundaryDefinition2 = New BoundaryDefinition(oMember2.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.5)
             oBoundaryDefinition3 = New BoundaryDefinition(oXPlane_65, PortFacePosition.Inner, 0.5)
             oBoundaryDefinition4 = New BoundaryDefinition(oSketch3d, PortFacePosition.Inner, 0.0)
             ListBoundaryDefinition.Clear()
             ListBoundaryDefinition.Add(oBoundaryDefinition1)
             ListBoundaryDefinition.Add(oBoundaryDefinition2)
             ListBoundaryDefinition.Add(oBoundaryDefinition3)
             ListBoundaryDefinition.Add(oBoundaryDefinition4)
             'Here SketchingPlane and RefPlane are same, so used CoincidentPlane. 
             Dim oSlabByCoincPlane As New Slab(oSlabSystem, oPlaneDefinition_coincident, oZPlane_0, ListBoundaryDefinition, oSlabType, oSlabComposition,dThickness)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},System.String,System.String,System.Double)">
            <summary>
            Creates a slab.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="planeDefinition">The supporting plane definition.</param>
            <param name="sketchPlane">The sketching plane.</param>
            <param name="boundaryDefinitions">The list of boundary definition.</param>
            <param name="type">The slab type part.</param>
            <param name="composition">The slab composition part.</param>
            <param name="thickness">The total thickness of the slab.</param>
            <exception cref="T:System.ArgumentNullException">Null argument given to the constructor.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Invalid argument given to the constructor.</exception>    
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
            <example>This is an example of Slab constructor.
            <code>
            Dim slabType As String = "4"" Cast in Place"
            Dim slabComposition As String = "CIP_4""_Fc3"
            Dim dThickness As Double = 0.1
            Dim oZPlane_0 As New GridElevationPlane(0, oZAxis)
            Dim oXPlane_65 As New GridPlane(65, oXAxis)
            Dim oPlaneDefinition_coincident As New PlaneDefinition(oZPlane_0)
            Dim ListBoundaryDefinition As New List(Of BoundaryDefinition)()
            'Create a Sketch3d and use that as one of the boundaries.
            Dim oSketchColl As Collection(Of SketchPoint) = New Collection(Of SketchPoint)
            Dim oSketch3d As Sketch3D = New Sketch3D(oPlant)
            Dim oSketchPoint1 As SketchPoint = New SketchPoint(48.0, 50.0, 90.0)
            Dim oSketchPoint2 As SketchPoint = New SketchPoint(72.5, 25.0, 90.0)
            Dim oSketchPoint3 As SketchPoint = New SketchPoint(48.0, 0.0, 90.0)
            oSketchColl_slab10.Clear()
            Dim oEllipseFeature As EllipticalArcFeature = oSketchPoint3.CreateEllipticalArcFeature(oSketchPoint2, oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint2)
            oSketchColl_slab10.Add(oSketchPoint3)
            oSketch3d.SetSketchPoints(oSketchColl_slab10)
            'Create boundary definitions such that they make a closed boundary and add to the ListBoundaryDefinition.
            oBoundaryDefinition1 = New BoundaryDefinition(oMember1.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
            oBoundaryDefinition2 = New BoundaryDefinition(oMember2.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.5)
            oBoundaryDefinition3 = New BoundaryDefinition(oXPlane_65, PortFacePosition.Inner, 0.5)
            oBoundaryDefinition4 = New BoundaryDefinition(oSketch3d, PortFacePosition.Inner, 0.0)
            ListBoundaryDefinition.Clear()
            ListBoundaryDefinition.Add(oBoundaryDefinition1)
            ListBoundaryDefinition.Add(oBoundaryDefinition2)
            ListBoundaryDefinition.Add(oBoundaryDefinition3)
            ListBoundaryDefinition.Add(oBoundaryDefinition4)
            'Here SketchingPlane and RefPlane are same, so used CoincidentPlane. 
            Dim oSlabByCoincPlane As New Slab(oSlabSystem, oPlaneDefinition_coincident, oZPlane_0, ListBoundaryDefinition, slabType, slabComposition,dThickness)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Structure.Middle.Slab)">
            <summary>
            Copy constructor for slab.
            </summary>
            <param name="slab">Slab object.</param>
            <exception cref="T:System.ArgumentNullException">Null argument given to the constructor.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
            <example>This is an example of the slab constructor.
            <code>
            Dim oSlab_Copy As New Slab(oSlab)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.LayerCount(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Gets the layer count from Composition
            </summary>
            <param name="oComposition">The composition from the catalog</param>
            <returns>The layer count</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.LayerInfo(Ingr.SP3D.ReferenceData.Middle.Part,System.Int32,System.String@,System.String@)">
            <summary>
            Gets the informotations from Layer
            </summary>
            <param name="oComposition">The composition from the catalog</param>
            <param name="layerIndex">The index of the layer</param>
            <param name="LayerPartNumber">It will contain the part number</param>
            <param name="LayerType">It will contain the layer part type</param>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Slab.PartNumbersColl">
            <summary>
            Private collection which will contain all the Layer PartNumbers for the given composition
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Slab.PartTypesColl">
            <summary>
            Private collection which will contain all the Layer PartTypes for the given composition
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FillLayerPartInfo(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Fill layer info from composition
            </summary>
            <param name="oComposition">The composition from the catalog</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetCatalogPart(System.String)">
            <summary>
            Get the catalog part from partNumber string
            </summary>
            <param name="oPartNumber">The part number string</param>
            <returns>The Part</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.SetLayerPartOccurrence(Ingr.SP3D.Interop.SPSSlabs.SPSSlabLayer,System.String)">
            <summary>
            Set slab layer for the part occurrence.
            </summary>
            <param name="oSlabLayer">SlabLayer</param>
            <param name="sLayerPartNumber">SlabLayer Part Number</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CopyAttributesToOccurrence(System.Object,System.Object)">
            <summary>
            Copy the default part attibutes to the occurrence attributes.
            </summary>
            <param name="oPart">Slab layer part.</param>
            <param name="oOccurrence">Occurrence object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CopyAttributesFromSubInterfaceName(System.Object,System.Object)">
            <summary>
            Copy the SubInterfaceName attributes to the occurrence attributes.
            </summary>
            <param name="comLayerPart">Slab layer COM catalog part.</param>
            <param name="comLayerOccurrence">Slab layer COM occurrence part.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetLayerAttributeFromPartNumber(System.String,System.Int32,System.String@,System.Object@)">
            <summary>
            Gets the layer attributes from the part specified with partNumber string 
            </summary>
            <param name="LayerPartNumber">The part number </param>
            <param name="attributeIndex">The attribute index</param>
            <param name="AttributeName">Will contain the attribute name</param>
            <param name="AttributeValue">Will contain the atribute value</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetMaterialFromPartNumber(System.String,System.String@,System.String@)">
            <summary>
            Gets material and grade from part number string
            </summary>
            <param name="LayerPartNumber">The part number </param>
            <param name="oMaterial">It will contain the material</param>
            <param name="oGrade">It will contain the grade</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetLayerIJDPartFromPartNumber(System.String)">
            <summary>
            Gets the IJDPart from part number string
            </summary>
            <param name="LayerPartNumber">part number string</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetTotalThicknessFromComposition">
            <summary>
            Returns the total thickness from the composition (uses the strings from PartNumber collection )
            </summary>
            <returns>The total thickness</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CreateSlabLayers(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Internal function to create and set the Layers and all the belonging elements (material, layer type, thickness)
            </summary>
            <param name="oComposition">The catalog composition</param>
            <returns>Returns an IJElements to be used in the Set Layer property of the SPSSlabEntity</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FromSOMtoCOMFacePosition(Ingr.SP3D.Structure.Middle.FacePosition)">
            <summary>
            Gets the integer equivalent from .NET FacePosition to COM SlabFacePosition.
            </summary>
            <param name="facePosition">FacePosition enum.</param>
            <returns>SlabFacePosition integer equivalent.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FromCOMtoSOMFacePosition(Ingr.SP3D.Interop.SPSSlabs.SlabFacePosition)">
            <summary>
            Gets the integer equivalent from COM SlabFacePosition to .NET FacePosition.
            </summary>
            <param name="facePosition">SlabFacePosition enum.</param>
            <returns>FacePosition integer equivalent.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e. End) at a given geometry stage (i.e. Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryStage As GeometryStage = GeometryStage.Current 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eGeometryStage) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e., End) with a given operation (i.e., Split); 
             and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After       
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eGeometryOperation, eGraphPosition) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e. Lateral Face) at a given geometry stage (i.e. Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryStage As GeometryStage = GeometryStage.Current      
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eTopologyContext, eGeometryStage)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face),
             with a given operation (i.e., Split); and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After     
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim structPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             structPortCollection = oSlab.GetPorts(eFace, eTopologyContext, eGeometryOperation, eGraphPosition)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is in creation of a physical connection with port geometry that will be provided by an end cut operation.
            </summary>
            <param name="geometryType">Type of the geometry.</param>
            <param name="operationId">Operation ID in which to create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="sectionFaceType">Type of the section face.</param>
            <param name="createPort">Flag to create a port with the given moniker data in case the port is not found.</param>
            <returns>
            TopologyPort created by the given moniker data.
            </returns>
            <example>GetPort example code.
            <code>
            Dim proxyType As TopologyGeometryType = TopologyGeometryType.Face
            Dim operationId As Integer = 0
            Dim operatorId As Integer = 0
            Dim context As ContextTypes = ContextTypes.Base
            Dim crossSectionId As Integer = -1
            Dim port As TopologyPort = oSlab.GetPort(proxyType, operationId, operatorId, context, crossSectionId, true)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32,Ingr.SP3D.Structure.Middle.GeometryStage,System.Boolean)">
            <summary>
            Gets a specific port on the given entity with the given port moniker data.
            Use the flag createPort to get a port with geometry that will be created by a later operation. The port is needed to establish a connection.
            Typical use is to get the related initial port or stable port.
            </summary>
            <param name="geometryType">Type of the geometry.</param>        
            <param name="operatorId">Operator ID.</param>
            <param name="context">The context.</param>
            <param name="subId">ID on the sub port. Also, type of the section face.</param>
            <param name="geometryStage">Flag to specify the geometry stage.</param>
            <param name="createPort">Flag to create a port with the given moniker data, in case port is not found.</param>
            <returns>
            Struct port created by the given moniker data.
            </returns>
            <exception cref="T:System.NotImplementedException">GetPort is not implemented at this time.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.Feature,System.Int32,System.Boolean)">
            <summary>
            Gets a port with given feature operation and segment ID from the feature. 
            If the createPort argument is true, it will create a late binding port, i.e. a port with no current geometry.
            Typical use is to get face/edge late binding ports after endcut is applied.
            </summary>
            <param name="feature">The feature object.</param>
            <param name="featureSegmentId">ID on the feature segment.</param>
            <param name="createPort">Flag to create a port with given data in case port is not found.</param>
            <returns>Struct port created by the given moniker data.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when an argument is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes)">
            <summary>
            Gets a base or offset port with the given topology geometry type from the given entity.
            Operation ID, operator ID, and section face ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <returns>Base or offset port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidContextTypeException">Raised if context type is not base or offset.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            'Create a slab.
            Dim slab As Slab 'Substitute this line with the actual slab instance.         
            Dim baseOrOffsetPort As TopologyPort = slab.GetPort(TopologyGeometryType.Face, ContextTypes.Base)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a specific port with the given topology geometry type, context, and section face identifier from the given entity.
            Operation ID and operator ID are ignored for filtering ports.
            </summary>
            <param name="topologyGeometryType">The topology geometry type.</param>
            <param name="context">The context.</param>
            <param name="sectionId">The section face identifier (subport ID) associated with the structure port moniker.</param>
            <returns>A port based on the given inputs.  Null if no port is available on the entity with the given inputs.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enum range.</exception>        
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <example>GetPort method example code.
            <code>
            'Create a slab.
            Dim slab As Slab 'Substitute this line with the actual slab instance. 
            Dim sectionId As Integer = -1
            Dim port As TopologyPort = slab.GetPort(TopologyGeometryType.Face, ContextTypes.Base, sectionId)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GraphPosition,System.Int32,System.Boolean)">
            <summary>
            Gets a port at a specific operation in the graph from a given entity for a given subport ID while ignoring operator and operation ID for filtering.
            </summary>
            <param name="geometryType">Flag to specify type of the topology geometry.</param>
            <param name="operatorID">Operator ID for the queried port.</param>
            <param name="operationType">Flag to specify the operation type.</param>
            <param name="contextID">Flag to specify context ID.</param>
            <param name="graphPosition">The graph position.</param>
            <param name="subID">ID on the subport andtype of the section face.</param>
            <param name="createPort">Flag to create a port with given data in case a port is not found.</param>
            <returns>Gets subport of the entity with the given conditions.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the geometry type is not within the TopologyGeometryType enumerator range.</exception> 
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when there is a failure to find the port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MultiplePortsFoundException">Raised when more than one port meets the given criteria.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Raised when there is a failure to retrieve the PortType.  PortType is not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure occurred while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
            <example>GetPort method example code.
            <code lang="cs">
            Slab slab;//Substitute this line with the actual slab instance.
            
            //call get port on the slab after cutout operation
            TopologyPort port = slab.GetPort(TopologyGeometryType.Face, 1, GeometryOperationTypes.Cutout, ContextTypes.Base, GraphPosition.After,-1, false);
            </code>
            <code lang="vb">
            Dim slab As Slab 'Substitute this line with the actual slab instance.
            //call get port on the slab after cutout operation
            Dim port As TopologyPort = slab.GetPort(TopologyGeometryType.Face,1,GeometryOperationTypes.Cutout, ContextTypes.Base,GraphPosition.After, -1,False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds another assembly child to the slab.
            </summary>
            <param name="oChild">AssemblyChild interface.</param>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the slab.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null imput argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim oMatrix As New Matrix4X4()
            oMatrix.SetIndexValue(12, 10)
            'Translate by 10m.
            oSlab.Transform(oMatrix)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.AmbiguousPatch})">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions.
            </summary>
            <param name="SolutionsToKeep">Collection of AmbiguousPatch objects.</param>
            <returns>Boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oAmbiguousList As New List(Of AmbiguousPatch)()
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            oAmbiguousList.Add(oSolutions(1))
            oAmbiguousList.Add(oSolutions(2))
            oAmbiguousList.Add(oSolutions(3))
            Dim oSolutionsToKeep As New Collection(Of AmbiguousPatch)(oAmbiguousList)
            bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionsToKeep)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position})">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions. 
            </summary>
            <param name="SolutionsToKeep">Collection of Point3d objects.</param>
            <returns>Boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            Dim midPos As Position = Nothing
            Dim midPos1 As Position = Nothing
            Dim midPos2 As Position = Nothing
            Dim oSolutionsToKeep As New Collection(Of Position)()
            
            'Choose the solution and get its range. 
            If oSolutions.Count > 0 Then 
                Dim range As RangeBox = solutions(1).Range 
                Dim high As Position = range.High 
                Dim low As Position = range.Low 
            
                Dim range1 As RangeBox = solutions(2).Range 
                Dim high1 As Position = range1.High 
                Dim low1 As Position = range1.Low 
            
                Dim range2 As RangeBox = solutions(3).Range 
                Dim high2 As Position = range2.High 
                Dim low2 As Position = range2.Low 
            
                'Create a position at the mid point of the high and low range for the solutions to keep. 
                midPos = New Position((high.X + low.X) / 2, (high.Y + low.Y) / 2, (high.Z + low.Z) / 2)
                midPos1 = New Position((high1.X + low1.X) / 2, (high1.Y + low1.Y) / 2, (high1.Z + low1.Z) / 2)
                midPos2 = New Position((high2.X + low2.X) / 2, (high2.Y + low2.Y) / 2, (high2.Z + low2.Z) / 2)
                oSolutionsToKeep.Add(midPos)
                oSolutionsToKeep.Add(midPos1) 
                oSolutionsToKeep.Add(midPos2) 
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionsToKeep)
            End If 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(Ingr.SP3D.Structure.Middle.AmbiguousPatch)">
            <summary>
            Returns true if the ambiguity is resolved with the given solution.
            </summary>
            <param name="SolutionToKeep">AmbiguousPatch object to keep.</param>
            <returns>boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutionToKeep As AmbiguousPatch = Nothing
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            If oSolutions.Count > 0 Then 
                oSolutionToKeep = oSolutions(0) 
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionToKeep)
            End If
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions. 
            </summary>
            <param name="SolutionToKeep">Point3d from the solution to keep.</param>
            <returns>boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutionToKeep As Position = Nothing
            Dim oRangeBox As RangeBox = Nothing
            Dim oHighPosition As Position = Nothing
            Dim oLowPosition As Position = Nothing
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            If oSolutions.Count > 0 Then 
                oRangeBox = oSolutions(0).Range
                oHighPosition = oRangeBox.High 
                oLowPosition = oRangeBox.Low
                oSolutionToKeep = New Position((oHighPosition.X + oLowPosition.X) / 2, (oHighPosition.Y + oLowPosition.Y) / 2, (oHighPosition.Z + oLowPosition.Z) / 2)
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionToKeep)
            End If
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Type">
            <summary>
            Gets or sets the part type of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Composition">
            <summary>
            Gets or sets the slab composition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.SketchPlane">
            <summary>
            Gets or sets the sketching plane information of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.SupportInfo">
            <summary>
            Gets or sets the support information of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.BoundaryDefinitions">
            <summary>
            Gets or sets the boundary information of the slab.
            </summary>
            <value>The boundary definitions.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException">Exception while getting the boundaries.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.FacePosition">
            <summary>
            Gets or sets the face position of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Layers">
            <summary>
            Gets the read-only collection of layers of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.ReferenceLayer">
            <summary>
            Gets the reference layer of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalVolume">
            <summary>
            Gets the total volume of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetVolume">
            <summary>
            Gets the net volume of the slab (excluding the volume of the holes).
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalSurface">
            <summary>
            Gets the total surface of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetSurface">
            <summary>
            Gets the net surface of the slab (excluding the surface of the holes).
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalProjectedArea">
            <summary>
            Gets the total projected area of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetProjectedArea">
            <summary>
            Gets the net projected area of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Angle">
            <summary>
            Gets the angle of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Slope">
            <summary>
            Gets the slope of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.LowestElevationPoint">
            <summary>
            Gets the lowest elevation point of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.HighestElevationPoint">
            <summary>
            Gets the highest elevation point of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.BottomOfConcrete">
            <summary>
            Gets the bottom of the concrete of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TopOfConcrete">
            <summary>
            Gets the top of the concrete of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyConnections">
            <summary>
            Gets all the assembly connections that are connected to the plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Thickness">
            <summary>
            Gets or sets the total thickness of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.WBSProjects">
            <summary>
            Gets the WBSProjects for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyChildren">
            <summary>
            Gets the read-only collection of assembly children of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.ContinuityType">
            <summary>
            Gets or sets the continuity type of the slab.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.PriorityNumber">
            <summary>
            Gets or sets the priority number of the slab.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AmbiguousPatches">
            <summary>
            Gets a read-only collection of AmbiguousPatch objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.UnusedBoundaries">
            <summary>
            Gets a read-only collection of AmbiguousPatch objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.IsAmbiguous">
            <summary>
            Gets whether or not ambiguous. Returns True if the solution is ambiguous.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.MemberServices">
            <summary>
            MemberServices class definition for member services.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetMemberPositionsOnSurface(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Gets the position of the given number of members on a given surface based on a pattern orientation.
            Spacing between members is determined from the maximum number of members along the side of the surface,
            minimum edge clearance, the given pattern orientation, and  the cross section and rotation of the member.
            <para>Each position is then calculated based on the given shape pattern.
            It is projected onto the surface to get the maximum possible members to fit on the surface.
            Member axis is assumed to be along the surface normal.</para>
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for the pile.</param>
            <param name="memberRotationAngle">Member rotation angle.</param>
            <param name="minimumEdgeClearance">Edge clearance.</param>
            <param name="maximumPilesInXDirection">Number of piles in X-direction.</param>
            <param name="maximumPilesInYDirection">Number of piles in Y-direction.</param>
            <returns>Positions on the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the surface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab or Wall.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException">Raised if the orientation angle is not valid for a given pattern type.</exception>
            <example> Example to get the positions on surfaces.
            <code>
            Dim pileSurface As ISurface
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim positionsOnSurface As ICollection(Of Position)  =  memberServices.GetMemberPositionsOnSurface(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, edgeClearance, numberOfMembers, 0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetMemberPositionsOnSurface(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Gets the position of the given number of members on a given surface based on a pattern orientation.
            Spacing between members in each direction is determined from the maximum number of members along the side of the surface,
            minimum edge clearance, the given pattern orientation, and  the cross section and rotation of the member.
            <para>Each position is then calculated based on the given shape pattern.
            It is projected onto the surface to get the maximum possible members to fit on the surface.
            Member axis is assumed to be along the surface normal.</para>
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for the pile.</param>
            <param name="memberRotationAngle">Member rotation angle.</param>
            <param name="minimumEdgeClearanceInX">Edge clearance in X-direction.</param>
            <param name="minimumEdgeClearanceInY">Edge clearance in Y-direction.</param>
            <param name="maximumPilesInXDirection">Number of piles in X-direction.</param>
            <param name="maximumPilesInYDirection">Number of piles in Y-direction.</param>
            <returns>Positions on the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the surface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab or Wall.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException">Raised if the orientation angle is not valid for a given pattern type.</exception>
            <example> Example to get the positions on surfaces.
            <code>
            Dim pileSurface As ISurface
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim positionsOnSurface As ICollection(Of Position)  =  memberServices.GetMemberPositionsOnSurface(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, edgeClearance, numberOfMembers, 0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetMemberPositionsOnSurface(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Gets the position of the given number of members on a given surface based on a pattern orientation,
            the given spacing in each direction, the given pattern orientation, and  the cross section and rotation of the member.
            <para>Each position is then calculated based on the given shape pattern.
            It is projected onto the surface to get the maximum possible members to fit on the surface.
            Member axis is assumed to be along the surface normal.</para>
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for the pile.</param>
            <param name="memberRotationAngle">Member rotation angle.</param>
            <param name="spacingInX">Space between members in X-direction.</param>
            <param name="spacingInY">Space between members in Y-direction.</param>
            <param name="maximumPilesInXDirection">Number of piles in X-direction.</param>
            <param name="maximumPilesInYDirection">Number of piles in Y-direction.</param>
            <returns>Positions on the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the surface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab or Wall.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPatternOrientationException">Raised if the orientation angle is not valid for a given pattern type.</exception>
            <example> Example to get the positions on surfaces.
            <code>
            Dim pileSurface As ISurface
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim positionsOnSurface As ICollection(Of Position)  =  memberServices.GetMemberPositionsOnSurface(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, edgeClearance, numberOfMembers, 0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetMemberEndPositions(System.Collections.Generic.ICollection{Ingr.SP3D.Common.Middle.Position},Ingr.SP3D.Common.Middle.Vector,System.Double)">
            <summary>
            Gets each member end position with respect to the member start position.
            Member axis is assumed to be along the surface normal, and pile length is used to get the member end position.
            </summary>
            <param name="startPositions">Positions on the surface.</param>
            <param name="memberAxisDirection">Member axis direction.</param>
            <param name="memberLength">Length of the member.</param>
            <returns>
            Collection as a pair of start and end positions of a member.
            </returns>
            <exception cref="T:System.ArgumentNullException">Raised if the startPositions or memberAxisDirection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if start positions count is zero or member length is less than or equal to zero.</exception>
            <example> Example to get the end positions of the members.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim positionsOnSurface As ICollection(Of Position)  =  memberServices.GetMemberPositionsOnSurface(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, edgeClearance, numberOfMembers, 0)
            Dim axisDirection As Vector =pileSurface.Normal
            Dim memberEndPositions As Dictionary(Of Position,Of Position)  = memberServices.GetMemberEndPositions(positionsOnSurface,axisDirection,1.0)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.CreatePiles(Ingr.SP3D.Common.Middle.ISystem,System.Collections.Generic.Dictionary{Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position},Ingr.SP3D.Common.Middle.ISurface,System.Double,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Creates the member systems between start and end positions with one end logically connected to the given surface. 
            </summary>
            <param name="parentSystem">Parent system under which the members are placed.</param>
            <param name="memberPositions">Member start and end positions.</param>
            <param name="supportedSurface">Supported surface on which the pattern will be applied.</param>
            <param name="embedmentDepth">Embedment depth.</param>
            <param name="memberLength">Length of the member.</param>
            <param name="section">Cross section to be used for the members.</param>
            <param name="material">Material to be used for the members.</param>
            <param name="type">Member type.</param>
            <param name="cardPoint">Cardinal point.</param>
            <param name="betaAngle">Member rotation angle.</param>
            <param name="reflect">Whether to mirror.</param>
            <returns>Collection of MemberSystems between the given positions and logically connected to the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the parentSystem, memberPositions, supportedSurface, section, or material argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab, or Wall.</exception>
            <example> Example to create members with the given positions.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim matType As String = "Steel - Carbon";
            Dim matGrade As String = "A";
            Dim material As Material = catalogStructHelper.GetMaterial(matType, matGrade);
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim positionsOnSurface As ICollection(Of Position)  =  memberServices.GetMemberPositionsOnSurface(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, edgeClearance, numberOfMembers, 0)
            Dim axisDirection As Vector =pileSurface.Normal
            Dim memberPositions As Dictionary(Of Position,Of Position)  = memberServices.GetMemberEndPositions(positionsOnSurface,axisDirection,1.0)
            Dim parentSystem As StrcuralSystem
            Dim members As Collection(Of MemberSystem) = memberServices.CreatePiles(parentSystem,memberPositions,pileSurface,0.1,1.0,crossSection_W8x10,material,(int)MemberType.Column,5,0.0,False)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetSpacingBetweenPiles(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Int32,System.Int32,System.Double,System.Double@,System.Double@)">
            <summary>
            Gets the spacing between piles, which is evaluated from edge to edge (excluding section dimensions).
            </summary>
            <param name="supportedSurface">The surface that is connected to the pile.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for creating piles.</param>
            <param name="memberRotationAngle">The member rotation angle.</param>
            <param name="pilesInXDirectionOrNoofPiles">The piles in X-direction or number of piles if the pattern is circular.</param>
            <param name="pilesInYDirection">The piles in Y-direction.</param>
            <param name="memberEdgeClearance">Edge clearance between the extreme pile and surface edge.</param>
            <param name="spacingInX">Spacing in X.</param>
            <param name="spacingInY">Spacing in Y.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the supportedSurface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab, or Wall.</exception>
            <example> Example to get the spacing between two adjacent members.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim spacingInX As Double
            Dim spacingInY As Double
            memberServices.GetSpacingBetweenPiles(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0,numberOfMembers,0, edgeClearance,out spacingInX,out spacingInY)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetSpacingBetweenPiles(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Gets the spacing between piles, which is evaluated from edge to edge (excluding section dimensions).
            The spacing is calculated in each direction by considering provided edge clearance in respective direction.
            </summary>
            <param name="supportedSurface">The surface that is connected to the pile.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for creating piles.</param>
            <param name="memberRotationAngle">The member rotation angle.</param>
            <param name="pilesInXDirectionOrNoofPiles">The piles in X-direction or number of piles if the pattern is circular.</param>
            <param name="pilesInYDirection">The piles in Y-direction.</param>
            <param name="memberEdgeClearanceInX">Edge clearance between the extreme pile and surface edge in X-direction.</param>
            <param name="memberEdgeClearanceInY">Edge clearance between the extreme pile and surface edge in Y-direction.</param>
            <param name="spacingInX">Spacing in X.</param>
            <param name="spacingInY">Spacing in Y.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the supportedSurface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab, or Wall.</exception>
            <example> Example to get the spacing between two adjacent members.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim spacingInX As Double
            Dim spacingInY As Double
            memberServices.GetSpacingBetweenPiles(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0,numberOfMembers,0, edgeClearance,out spacingInX,out spacingInY)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetSpacingBetweenPiles(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,System.Double,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the spacing between piles by determining the spacing using the pattern length and pattern width.
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternLength">Length of the pattern, which will be the distance between extreme members.</param>
            <param name="patternWidth">Width of the pattern, which will be the distance between extreme members.</param>
            <param name="pilesInXDirectionOrNoofPiles">The piles in X-direction or number of piles.</param>
            <param name="pilesInYDirection">The piles in Y-direction.</param>
            <param name="spacingInX">The spacing in X.</param>
            <param name="spacingInY">The spacing in Y.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the supportedSurface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab, or Wall.</exception>
            <example> Example to get the spacing between two adjacent members.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim spacingInX As Double
            Dim spacingInY As Double
            memberServices.GetSpacingBetweenPiles(pileSurface,PilePattern.Circular, 1.5, 2.0, numberOfMembers,0, out spacingInX,out spacingInY)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetEdgeClearance(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Gets the minimum EdgeClearance in X and Y directions from the known piles count in the respective directions.
            </summary>
            <param name="supportedSurface">The surface that is connected to the pile.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="section">Section to be used for creating piles.</param>
            <param name="memberRotationAngle">The member rotation angle.</param>
            <param name="pilesInXDirectionOrNoofPiles">The piles in X-direction or number of piles, if the pattern is circular.</param>
            <param name="pilesInYDirection">The piles in Y-direction.</param>
            <param name="spacingInX">Spacing in X.</param>
            <param name="spacingInY">Spacing in Y.</param>
            <param name="memberEdgeClearanceInX">Edge clearance between the extreme pile and surface edge In X-direction.</param>
            <param name="memberEdgeClearanceInY">Edge clearance between the extreme pile and surface edge In Y-direction.</param>
            <exception cref="T:System.ArgumentNullException">Raised if the supportedSurface or section argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Raised if the number of piles in either direction are less than or equal to zero.</exception>
            <exception cref="T:Ingr.SP3D.Equipment.Exceptions.InvalidSurfaceException">Raised if the selected surface is not from Footing, Foundation, Slab, or Wall.</exception>
            <example> Example to get the EdgeClearance in X and Y directions.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim edgeClearanceInX As Double
            Dim edgeClearanceInY As Double
            Dim numberOfMembers As Integer = 8
            Dim spacingInX As Double = 0.5
            Dim spacingInY As Double = 0.25
            memberServices.GetEdgeClearance(pileSurface,PilePattern.Circular, 0, crossSection_W8x10, 0, numberOfMembers, 0, spacingInX, spacingInY, out edgeClearanceInX, out edgeClearanceInY)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.IsSurfaceOwnerTypeSupported(Ingr.SP3D.Common.Middle.ISurface)">
            <summary>
            Determines whether the given surface belongs to one of the slab, wall, equipment foundation or footing objects.
            </summary>
            <param name="surface">Surface object.</param>
            <returns>Returns True if the surface is from from the slab, wall, equipment foundation or footing objects.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if the surface argument is null.</exception>
            <example>
            <code>
            Dim surface As ISurface
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim valid As Boolean
            valid = memberServices.IsSurfaceOwnerTypeSupported(surface)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetProjectedDimensions(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Determines the actual length and width of the cross section
            by considering the angle of rotation in U and V directions.
            </summary>
            <param name="planarSurface">The planar surface.</param>
            <param name="section">The section.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="betaAngle">The beta angle.</param>
            <param name="projectedWidth">Projected width.</param>
            <param name="projectedDepth">The projected depth.</param>
            <example> Example to get the spacing between two adjacent members.
            <code>
            Dim catalogStructHelper As CatalogStructHelper = new CatalogStructHelper();
            Dim refStdName As String= "AISC-LRFD-3.1";
            Dim crossSection_W8x10 As CrossSection = catalogStructHelper.GetCrossSection(refStdName, "W", "W8X10");
            Dim memberServices As MemberServices =  New MemberServices() 
            Dim edgeClearance As Double=0.1
            Dim numberOfMembers As Integer = 8
            Dim projectedWidth As Double
            Dim projectedDepth As Double
            Dim rotationAngle As Double=Math.PI/2
            memberServices.GetProjectedDimensions(pileSurface,crossSection_W8x10, 0.0, rotationAngle, out projectedWidth, out projectedDepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetRangeCenter(Ingr.SP3D.Common.Middle.OrientedRangeBox)">
            <summary>
            Gets the range center.
            </summary>
            <param name="rangeBox">The range box.</param>
            <returns>center position of the range box</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.IsSurfaceCircular(Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Determines whether [is surface circular].holds good for all regular surfaces circular,polygon
            </summary>
            <returns>
            	<c>true</c> if [is surface circular or Polygon] [the specified o3D]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetPatternDimensions(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Structure.Middle.PilePattern,System.Double@,System.Double@)">
            <summary>
            Gets the pattern dimensions on a circular surface. if user wants rectangular pattern on circular surface, this method actually calculates maximum possible inscribing rectangle
            and gives the dimensions.
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pilePattern">The pile pattern.</param>
            <param name="width">width.</param>
            <param name="depth">depth.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetPileMatrix(Ingr.SP3D.Common.Middle.IPlane,System.Double)">
            <summary>
            Gets the pile matrix. Determines principal axes and matrix orientation of the given surface
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <returns>pile matrix</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.IsAngleValidForPattern(Ingr.SP3D.Structure.Middle.PilePattern,System.Double,System.String@)">
            <summary>
            Checks the pattern rotation angle is valid.
            </summary>
            <param name="pilePattern">The pile pattern.</param>
            <param name="patternOrientation">The pattern orientation.</param>
            <param name="errorMessage">The error message.</param>
            <returns>
            returns true if the given angle is valid for the given pattern other wise false.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetPositionsForTriangularPattern(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Common.Middle.Matrix4X4,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Gets the positions for triangular pattern.
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pileMatrix">The pile matrix.</param>
            <param name="maximumPilesInXDirection">The maximum piles in X direction.</param>
            <param name="maximumPilesInYDirection">The maximum piles in Y direction.</param>
            <param name="spacingInX">The spacing in X.</param>
            <param name="spacingInY">The spacing in Y.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetPositionsForCircularPattern(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Common.Middle.Matrix4X4,System.Int32,System.Double)">
            <summary>
            Gets the positions for circular pattern.
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pileMatrix">The pile matrix.</param>
            <param name="maximumPiles">The maximum piles.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetPositionsForRectangularPattern(Ingr.SP3D.Common.Middle.ISurface,Ingr.SP3D.Common.Middle.Matrix4X4,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Gets the positions for rectangular pattern.
            </summary>
            <param name="supportedSurface">The supported surface.</param>
            <param name="pileMatrix">The pile matrix.</param>
            <param name="maximumPilesInXDirection">The maximum piles in X direction.</param>
            <param name="maximumPilesInYDirection">The maximum piles in Y direction.</param>
            <param name="spacingInX">The spacing in X.</param>
            <param name="spacingInY">The spacing in Y.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.CreatedEmbeddedMember(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean,Ingr.SP3D.Common.Middle.ISurface,System.Double)">
            <summary>
            Creates the member system.embeds into the connected surface with the given embedment length.
            </summary>
            <param name="parentSystem">Parent system under which the members are placed.</param>
            <param name="startPosition">Start position of the member.</param>
            <param name="endPosition">End position of the member.</param>
            <param name="section">Cross section object.</param>
            <param name="material">Material object.</param>
            <param name="type">Member type.</param>
            <param name="cardPoint">Cardinal point of the member.</param>
            <param name="angle">Member rotation angle.</param>
            <param name="reflect">Member reflect.</param>
            <param name="supportedSurface">Surface that is connected to the member.</param>
            <param name="embedmemtDepth">Embedmemt depth.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.MemberServices.GetMemberEndPosition(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,System.Double)">
            <summary>
            Gets the member end position.
            </summary>
            <param name="memberPosition">member start position.</param>
            <param name="vector">normal vector.</param>
            <param name="memberLength">Length of the member.</param>
            <returns></returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort">
            <summary>
            Wrapper for member system axis end port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort.AxisPortType">
            <summary>
            Returns the port index; for example, along, start, or end of the system port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Unexpected error while retrieving the port index.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPartAxisPort">
            <summary>
            Wrapper for member split axis along and end port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPartAxisPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPartAxisPort.AxisPortType">
            <summary>
            Returns the port index; for example, along, start, or end of the part port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Unexpected error while retrieving the port index.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructPortHelper">
            <summary>
            Class to define all helper methods for StructPorts.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortHelper.COMAxisPortIndexToDotNetAxisPortType(Ingr.SP3D.SPSMembers.SPSMemberAxisPortIndex)">
            <summary>
            Returns the mapping of the COM port index enumeration to .NET Axis Port Type enumeration.  For example, Along, Start, or End.
            </summary>
            <param name="memberAxisPortIndex">The COM port index.</param>
            <returns>Returns MemberAxisPortType.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Failed to retrieve the PortIndex.  PortIndex type not found.</exception>
            <example>Example on how to call COMAxisPortIndexToDotNetAxisPortType method.
            <code>
            Dim axisEndPort As ISPSAxisEndPort = DirectCast(COMBO, ISPSAxisEndPort) 
            Dim memberAxisPortIndex As SPSMemberAxisPortIndex = axisEndPort.PortIndex
            Dim returnAxisPortType As MemberAxisPortType = StructPortHelper.COMAxisPortIndexToDotNetAxisPortType(memberAxisPortIndex)
            
            'PortIndex is also in the COM interface ISPSSplitAxisPort.  This interface should be used casting the COMBO as 
            'illustraded above instead of ISPSAxisEndPort if the port type is along (centerline). 
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Sketch2dDefinition">
            <summary>
            The Sketch2dDefinition is a geometrical construction defined by a support (plane) and set of boundaries (lines, planes).
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.#ctor(System.String,Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Creates a Sketch2dDefinition using a given symbol file and sketching plane. It uses the first contour in the symbol file.
            </summary>
            <param name="symFileName">Name of the symbol file.</param>
            <param name="sketchingPlane">Sketching plane on which the contour is projected.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Raised if a file does not exist at the given location.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSymFileNameException">Raised if the file is other than .sha or .sym, or the file name contains invalid characters.</exception>
            <example>This is an example of how to create Sketch2dDefinition object using a symbol file.
            <code>
            Dim symFileName As String = "E:\Testing\Template\Sketch2DContour.sym"
            
            'Create a gridplane using GridSystem.
            Dim gridPlane As GridPlane
            Dim sketchingPlane As New PlaneDefination(gridPlane)
            
            'This Sketch2dDefinition is used to place various objects like slabs, plates, openings, etc.
            Dim sketch2dDefinition As New Sketch2dDefinition(symFileName, sketchingPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.#ctor(System.String,Ingr.SP3D.Common.Middle.PlaneDefinition,System.Int32)">
            <summary>
            Creates a Sketch2dDefinition using a given symbol file and sketching plane. It uses the contour with the given groupID in the symbol file.
            </summary>
            <param name="symFileName">Name of the symbol file.</param>
            <param name="sketchingPlane">The sketching plane.</param>
            <param name="groupId">Group ID associated with the contour.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Raised if the file does not exist at the given location.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSymFileNameException">Raised if the file is other than .sha or .sym, or the file name contains invalid characters.</exception>
            <example>This is an example of how to create the Sketch2dDefinition object using a symbol file.
            <code>
            Dim symFileName As String = "E:\Testing\Template\Sketch2DContour.sym"
            Dim groupId As Integer = 290
            'Create a gridplane using GridSystem.
            Dim gridPlane As GridPlane
            Dim sketchingPlane As New PlaneDefination(gridPlane)
            
            'This Sketch2dDefinition is used to place various objects like slabs, plates, openings, etc.
            Dim sketch2dDefinition As New Sketch2dDefinition(symFileName, sketchingPlane, groupId)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.#ctor(Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Creates a Sketch2dDefinition using a catalog part and sketching plane.
            </summary>
            <param name="catalogPart">The catalog part.</param>
            <param name="sketchingPlane">The sketching plane.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <example>This is an example of how to create the Sketch2dDefinition object using a catalog part.
            <code>
            'Get catalog part using CatalogStructHelper.
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim partName As String = "Oval 600x400"
            Dim catalogPart As Part = DirectCast(catalogStructHelper.GetPart(partName), Part)
            
            'Create a gridplane using GridSystem.
            Dim gridPlane As GridPlane
            Dim sketchingPlane As New PlaneDefination(gridPlane)
            
            'This Sketch2dDefinition is used to place various objects like slabs, plates, openings, etc.
            Dim sketch2dDefinition As New Sketch2dDefinition(catalogPart, sketchingPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.Equals(Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Indicates whether the current Sketch2d definition is equal to another Sketch2d definition. 
            Recommended type-safe equals method.
            </summary>
            <param name="other">The Sketch2d definition to test for equality.</param>
            <returns>True if the other Sketch2d definition is equal; otherwise, false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, False.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance. Suitable for use in hashing algorithms and data structures such as a hash table.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.op_Equality(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="def1">The 1st Sketch2d definition.</param>
            <param name="def2">The 2nd Sketch2d definition.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.op_Inequality(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Structure.Middle.Sketch2dDefinition)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="def1">The 1st Sketch2d definition.</param>
            <param name="def2">The 2nd Sketch2d definition.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.IsRegistryKeyOfUnified2DSketchOn">
            <summary>
            This method allows to swap from the Unified 2D sketcher to the Legacy 2D sketcher. 
            It looks for the registry key "\HKEY_LOCAL_MACHINE\SOFTWARE\Intergraph\SP3D\Common\TaskInfo\CommonStruct\UseLegacy2DSketcher" 
            If the registry key is not present, the Unified 2D sketcher is called, otherwise, it checks the value of the key.
            </summary>
            <returns>true for Unified 2D sketcher.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SetSymbolParameter(System.String,System.Double)">
            <summary>
            Sets the symbol parameter on the sketch2d file.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymbolParameter(System.String)">
            <summary>
            Gets the symbol parameter from the sketch2d file.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>double value for the given parameter.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetAttributeNameFromSymbolParameter(System.Array,System.String)">
            <summary>
            Gets the corresponding attribute name from the given symbol parameter.
            </summary>
            <param name="paramsAndProps">The parameters and properties array.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The corresponding attribute name.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketch2dDefinitions(System.String,Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Gets the sketch2d definitions.
            </summary>
            <param name="symFileName">Name of the symbol file.</param>
            <param name="sketchingPlane">The sketching plane.</param>
            <returns>
            Sketch2dDefinition object.
            </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Given Rad2d document in not a valid Rad2d document.</exception>
              
            <example> Example to get all the Sketch2dDefinitions from the given symbol file.
              <code>
            Dim symFileName As String
            symFileName = "E:\Testing\Template\Sketch2DContour.sym"
            Dim gridPlane As GridPlane  'Create a gridplane using GridSystem.
            Dim sketchingPlane As New PlaneDefination(gridPlane)
            Dim sketch2dDefinitions As Dictionary(Of Integer, Sketch2dDefinition)
            sketch2dDefinitions = Sketch2dDefinition.GetSketch2dDefinitions(symFileName,sketchingPlane)
              </code>
              </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetUnifiedSketch2dContour(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Structure.Middle.ContourUsageType,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Gets the Unified sketch2d contour.
            Create sketch GC macro using the template filename (or use the default) and set sketching plane
            Add sketch references if any (sketching plane for opening)
            Generate the Xml data for the sketch and compute the macro
            Return the contour (first one or by groupId if it is set)
            </summary>
            <param name="unifiedSketch2dDefinition">The unified sketch2d definition.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <param name="sketchReferences">List of sketch references to add (sketching plane for opening).</param>
            <param name="existingCurveBySketch2DGCAssembly">The existing GC sketch macro, this can be null.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketch2dContour(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.String,Ingr.SP3D.Structure.Middle.ContourUsageType,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.SketchReferenceInput},System.Object,System.Object)">
            <summary>
            Gets the sketch2d contour.
            Legacy : Creates the symbol, set the sketch reference inputs to the sketch reference collection, 
            set the sketching inputs to the reference collection and return the contour.
            Unified : Create the sketch GC macro using the template filename (or use the default) and set sketching plane
            Generate the Xml data for the sketch and compute the macro then return the contour
            </summary>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="progID">The prog ID.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <param name="sketchReferenceInputs">The sketch references, which will be added to sketch reference collection.</param>
            <param name="sketchInputs">The sketch inputs, which will be added to reference collection.</param>
            <param name="existingSymbol">The existing symbol, this can be null.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketch2dContour(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.String,Ingr.SP3D.Structure.Middle.ContourUsageType,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.SketchReferenceInput})">
            <summary>
            Gets the sketch2d contour.
            Creates the symbol, set the sketch reference inputs to the sketch reference collection and return the contour.
            </summary>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="progID">The prog ID.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <param name="sketchReferenceInputs">The sketch references, which will be added to sketch reference collection.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketch2dContour(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.String,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Gets the sketch2d contour.
            Creates the symbol and return the contour.
            </summary>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="progID">The prog ID.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymbolOutput(IMSSymbolEntities.IJDSymbol,System.String,System.String)">
            <summary>
            Gets the output by group ID.
            </summary>
            <param name="comSymbol">The COM symbol.</param>
            <param name="outputName">Name of the output.</param>
            <param name="representationName">Name of the representation.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.CreateSymbol(System.String,Ingr.SP3D.Structure.Middle.ContourUsageType,Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.SketchReferenceInput},System.Object)">
            <summary>
            Creates the symbol.
            It will create sketch reference collection and add the required sketch reference objects in it.
            Also creates reference collection and adds the required sketching plane, sketch reference collection and all the sketch inputs.  
            </summary>
            <param name="progID">The prog ID.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="sketchReferenceInputs">The sketch references, which will be added to sketch reference collection.</param>
            <param name="sketchInputs">The sketch inputs, which will be added to reference collection.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketch2dDefinitionFromContour(System.Object,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Gets the sketch2d definition from contour.
            </summary>
            <param name="comContour">The COM contour.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketchGCPlane(Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Gets Skecthing plane from Sketch2D GCmacro object.
            </summary>
            <param name="curveBySketch2DGCAssembly">The curveBySketch2D GCAssembly.</param>
            <returns>The sketching plane of sketch2d definition.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymfileName(System.Object)">
            <summary>
            Gets the name of the symfile from the given contour object.
            </summary>
            <param name="contour">The contour.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymFileNameFromSymbol(System.Object)">
            <summary>
            Gets the sym file name from symbol.
            </summary>
            <param name="symbol">The symbol.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketchingPlane(System.Object,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Gets the sketching plane.
            </summary>
            <param name="contour">The contour.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <returns>The sketching plane of sketch2d definition.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSketchingPlaneException">Raised when an unexpected error occurred while getting the sketching plane.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketchingPlaneFromReferenceCollection(System.Object,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Gets the sketching plane from reference collection.
            </summary>
            <param name="referenceCollection">The reference collection.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymbolDefinition(System.Object)">
            <summary>
            Gets the plant symbol definition.
            </summary>
            <param name="symbol">The symbol.</param>
            <returns>The plant symbol definition.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymFileName(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Gets the name of the sym file from the part.
            </summary>
            <param name="part">The part.</param>
            <returns>The sym file location without the symbol share path.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.HideContour(System.Object)">
            <summary>
            Hides the all contours related to the symbol object.
            </summary>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.FindOrientationMatrixInDocument(System.String,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Finds the orientation matrix in RAD2d document.
            Returns null if there is no orientation matrix stored in RAD2d document.
            </summary>
            <param name="symFileName">The sym file in which orientation matrix is asked.</param>
            <param name="curveBySketch2DGCAssembly">The curveBySketch2D GCAssembly, can be null.</param>
            <returns>The orientation matrix in RAD2d document.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SetOrientationMatrix(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Internal method to set the orientationMatrix in this sketch2d. 
            </summary>
            <param name="orientationMatrix"></param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetGroupIDFromOutputName(System.String)">
            <summary>
            Gets the name of the group ID from output.
            </summary>
            <param name="outputName">Name of the output.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetFileNameFromSharedContent(System.String)">
            <summary>
            Attempt to get the file from the share content location.
            </summary>
            <param name="symFileName">Name of the sym file.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetRad2dDocumentFromSymFile(System.String)">
            <summary>
            Gets the rad2d document from sym file.
            </summary>
            <param name="symFileName">Name of the sym file.</param>
            <returns>
            Rad2d Document object
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymbolDefinitionFromSymFile(System.String,System.String)">
            <summary>
            Gets the symbol definition from sym file.
            </summary>
            <param name="symFileName">Name of the sym file.</param>
            <param name="progId">The prog id of the symbol definition which processes the sym file.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetRepresentationName(System.String)">
            <summary>
            Gets the name of the representation.
            </summary>
            <param name="outputName">Name of the output.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SetRefrenceCollectionOnSymbol(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Set the inputs to the reference collection and set it to the symbol.
            </summary>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="referencesCollection">The references collection.</param>
            <param name="symbol">The symbol.</param>
            <param name="symbolDefinition">The symbol definition.</param>
            <param name="comSketchingPlane">The com sketching plane.</param>
            <param name="sketchReferenceCollection">The sketch reference collection.</param>
            <param name="sketchInputs">The collection of sketch inputs.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.AddSketchInputs(System.Object,System.Object,System.Object)">
            <summary>
            Add the sketch inputs to the reference collection.
            </summary>
            <param name="referencesCollection">The references collection.</param>
            <param name="sketchInputs">The collection of sketch inputs.</param>
            <param name="symbolDefinition">The symbol definition.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.PlaceOrUpdateSymbol(System.Object,System.Object,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Place new symbol or update existing symbol.
            </summary>
            <param name="resourceManager">The resource manager.</param>
            <param name="symbolDefinition">The symbol definition.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSymbolDefinitionByProgId(Ingr.SP3D.Common.Middle.Services.Plant,Ingr.SP3D.Structure.Middle.Sketch2dDefinition,System.String)">
            <summary>
            Gets the symbol definition using progID.
            </summary>
            <param name="activePlant">The model database connection.</param>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="progID">The symbol definition ProgId.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.CreateSketchingPlane(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Creates COM sketching plane.
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="sketch2dDefinition">The sketch2d definition.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.AddSketchReferenceInputs(System.Object,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.SketchReferenceInput},Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Adds the sketch reference inputs to the sketch reference collection.
            </summary>
            <param name="sketchReferenceCollection">The sketch reference collection.</param>
            <param name="sketchReferenceInputs">Collection of sketch reference inputs.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.CreateSketchReferenceCollection(System.Object)">
            <summary>
            Creates a sketch reference collection.
            </summary>
            <param name="resourceManager">The resource manager.</param>
            <returns>Sketch reference collection</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.CreateCurveBySketch2DGCAssembly(System.String)">
            <summary>
            Creates the CurveBySketch2D GeometricConstructionAssembly.
            </summary>        
            <param name="symFileName">The symFileName to set the TemplateFile parameter on CurveBySketch2D GCAssembly.</param>
            <returns>CurveBySketch2D GeometricConstructionAssembly.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.OrientSketch2DDefinition(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly,Ingr.SP3D.Structure.Middle.ContourUsageType)">
            <summary>
            Orients the Sketch2d contour.
            </summary>
            <param name="sketch2dDefinition">The Sketch2dDefinition.</param>
            <param name="curveBySketch2DGCAssembly">The CurveBySketch2D GeometricConstructionAssembly.</param>
            <param name="contourUsageType">Type of the contour usage.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.AddSketchingReferences(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Adds the sketching references.
            </summary>
            <param name="sketchReferences">The sketch references.</param>
            <param name="curveBySketch2DGCAssembly">The CurveBySketch2D GeometricConstructionAssembly.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SetParametersOnSketch2d(Ingr.SP3D.Structure.Middle.Sketch2dDefinition,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Set the part parameters on Sketch2d.
            </summary>
            <param name="sketch2dDefinition">The Sketch2dDefinition.</param>
            <param name="curveBySketch2DGCAssembly">The CurveBySketch2D GeometricConstructionAssembly.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetSketchContourOutput(System.Int32,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionAssembly)">
            <summary>
            Gets the sketch contour output.
            </summary>
            <param name="requiredGroupId">The required groupId.</param>
            <param name="curveBySketch2DGCAssembly">The CurveBySketch2D GeometricConstructionAssembly.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SetOrientationDataForSketchingPlane(System.Object,Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Sets the orientation data for sketching plane.
            </summary>        
            <param name="symbolDefinition">The COM symbol definition.</param>
            <param name="orientationMatrix">The orientation matrix.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.CreateCoordinateSystemFromPlane(System.Object)">
            <summary>
            Creates persistent hidden COM struct coordinate system.
            Set the "Other" type and left and right allowed hand property.
            Transform the struct coordinate system using matrix of sketching plane and setting StickCSOnPlane relationship with the sketching plane.
            Sets the matrix on struct coordinate system using the matrix for GeometryConverter from the sketching plane.
            </summary>
            <param name="comSketchingPlane">The COM sketching plane.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GetMatrixForGeometryConverter(System.Object)">
            <summary>
            Gets the COM matrix for geometry converter from the COM SketchingPlane. 
            </summary>
            <param name="comSketchingPlane">The COM sketching plane.</param>
            <returns></returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SymFileName">
            <summary>
            Gets or sets the name of the symbol file.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Raised if a file does not exist at the given location.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidSymFileNameException">Raised if the file is other than .sha or .sym, or the file name contains invalid characters.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.SketchingPlane">
            <summary>
            Gets or sets the sketching plane.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.GroupId">
            <summary>
            Gets or sets the group ID.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.Matrix">
            <summary>
            Gets or sets the orientation matrix.
            </summary>        
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.Part">
            <summary>
            Gets or sets the part.
            </summary>
            <value>catalog part.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Sketch2dDefinition.IsOrientationMatrixSetByUser">
            <summary>
            This property will help us in using OrientationMatrix property in Equals method where we want to only compare the OrientationMatrix given by user, 
            internally if we set this property then we will skip the OrientationMatrix compare in Equals method
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput">
            <summary>
            GraphicOutput class is used to declare graphic output field variables in a custom GeometricConstructionDefinition class. 
            These field variables must be preceded by the GraphicOutputAttribute.
            Graphic output is computed by the GeometricConstructionDefinition and set as output of the geometric construction.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.#ctor(Ingr.SP3D.Common.Middle.GeometricConstructions.OutputType,System.String,Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput"/> class.
            </summary>
            <param name="outputType">Type of the output.</param>
            <param name="collectionName">Name of the collection.</param>
            <param name="occurrence">The geometric construction occurrence for which this graphic output is defined.</param>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.OutputType">
            <summary>
            Gets the output type of the graphic output.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.CollectionName">
            <summary>
            Gets the graphic output collection name.
            Returns null if there is no graphic output collection name defined for this graphic output.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.Values">
            <summary>
            Gets the graphic output values.
            This property is only applicable for GeometricConstructionAssembly and GeometricConstructionSet, returns null for any other case.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.Value">
            <summary>
            Gets the graphic output value.
            This property is only applicable for GeometricConstruction, returns null for any other case.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.GraphicOutput.Occurrence">
            <summary>
            Gets or sets the geometric construction occurrence for which this graphic output is defined.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionSet">
            <summary>
            GeometricConstructionSet is a persistent set of geometric construction occurrences. 
            It is not driven by any definition and has no associated semantic. Contained geometric constructions are recomputed by themselves. 
            The first goal of the GeometricConstructionSet is to allow users to combine some geometric constructions in order to produce a GeometricConstructionAssembly.    
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.GeometricConstructionSet.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="T:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d">
            <summary>
            Provides generalization of all entities supporting geometric construction complex string-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.#ctor(System.String)">
            <summary>
            Creates a transient geometric construction ComplexString3d occurrence with the geometric construction type name.
            </summary>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type ComplexString3d.</para></exception>
            <example>This is an example of how to create a transient geometric construction ComplexString3d occurrence with the geometric construction type name.
            <code>        
            Dim geometricConstructionTypeName As String = "CpxStringByCurves"
            
            Dim complexString3d As New ComplexString3d(geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.String)">
            <summary>
            Creates a persistent geometric construction ComplexString3d occurrence under given parent system and geometric construction type name.
            </summary>
            <param name="parentSystem">The parent system under which to create the geometric construction ComplexString3d.</param>
            <param name="geometricConstructionTypeName">The geometric construction type name.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while creating a geometric construction by type name.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidGeometricConstructionTypeNameException">Raised if geometric construction type name is not available in the catalog and disk.
                                                                      <para>Raised if geometric construction type name is not valid in which to create a geometric construction of type ComplexString3d.</para></exception>
            <example>This is an example of how to create a persistent geometric construction ComplexString3d occurrence under given parent system and geometric construction type name.
            <code>
            'Get the parent system.  
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim rootSystem As ISystem = plant.RootSystem
            Dim geometricConstructionTypeName As String = "CpxStringFromCurve"
            
            Dim complexString3d As New ComplexString3d(rootSystem, geometricConstructionTypeName)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.AddCurve(Ingr.SP3D.Common.Middle.ICurve,System.Boolean)">
            <summary>
            Adds a curve to the complex string.
            </summary>
            <param name="curve">Curve to add.</param>
            <param name="end">Curve can only be added at the beginning or end; 0 - beginning, 1 - end.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while adding the curve.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if input type is not curve or surface, and is not valid after adding boundary.</exception>
            <example>This is an example of the AddCurve method.
            <code>
            Dim complexString3d as ComplexString3d 'Substitute this line with the actual geometric construction complex string instance.
            Dim curve As ICurve 'Substitute this line with the actual curve instance.
            complexString3d.AddCurve(curve, True)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.GetCurve(System.Int32,Ingr.SP3D.Common.Middle.ICurve@)">
            <summary>
            Gets a particular curve within the complex string.
            </summary>
            <param name="i">Index of the complex string in which to return the curve. Index starts at 1 to CurveCount.</param>
            <param name="curve">Output ICurve which is at the index.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the index is not between 1 and the number of curves.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the curve.</exception>
            <example>This is an example of the GetCurve method.
            <code>
            Dim complexString3d as ComplexString3d 'Substitute this line with the actual geometric construction complex string instance.
            Dim curve As ICurve 
            complexString3d.GetCurve(1, curve)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.GetCurves(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@)">
            <summary>
            Gets the complex string curves.
            </summary>
            <param name="curves">Collection of all the curves.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the curves.</exception>
            <example>This is an example of the GetCurves method.
            <code>
            Dim complexString3d as ComplexString3d 'Substitute this line with the actual geometric construction complex string instance.
            Dim curves As Collection(Of ICurve ) = Nothing
            complexString3d.GetCurves(curves)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.RemoveCurve(System.Boolean)">
            <summary>
            Removes a curve in the ComplexString3d.
            </summary>
            <param name="end">Curve can only be removed at the beginning or end; 0 - beginning, 1 - end.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the curves.</exception>
            <example>This is an example of the RemoveCurve method.
            <code>
            Dim complexString3d as ComplexString3d 'Substitute this line with the actual geometric construction complex string instance.
            complexString3d.RemoveCurve(True)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.SetCurve(System.Int32,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Sets a particular curve within the complex string.
            </summary>
            <param name="i">Index of the complex string in which to set the curve. Index starts at 1 to CurveCount.</param>
            <param name="curve">ICurve in which to replace the curve at the index.</param>
            <exception cref="T:System.ArgumentNullException">Raised if an argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Raised if the index is not between 1 and the number of curves.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while setting curve.</exception>
            <example>This is an example of the SetCurve method.
            <code>
            Dim complexString3d as ComplexString3d 'Substitute this line with the actual geometric construction complex string instance.
            Dim curve As ICurve 'Substitute this line with the actual curve instance.
            complexString3d.SetCurve(1, curve)
            </code>
            </example> 
        </member>
        <member name="P:Ingr.SP3D.Common.Middle.GeometricConstructions.ComplexString3d.CurveCount">
            <summary>
            Gets the number of curves in the complex string.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnUnexpectedException">Raised when an unexpected failure occurred while getting the curve count.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.SketchReferenceInput">
            <summary>
            This transient class holds the inputs for sketch reference which will be stored in sketch reference collection. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.SketchReferenceInput.#ctor(System.Object,Ingr.SP3D.Interop.StructSketch.SketchPropertyValue)">
            <summary>
            Creates a sketch reference input object with the given sketch reference object and associated sketch property value.
            </summary>
            <param name="sketchReference">The sketch reference.</param>
            <param name="sketchPropertyValue">The sketch property value.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.SketchReferenceInput.SketchReference">
            <summary>
            Gets or sets the sketch reference.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.SketchReferenceInput.SketchPropertyValue">
            <summary>
            Gets or sets the sketch property value.
            </summary>
        </member>
    </members>
</doc>
